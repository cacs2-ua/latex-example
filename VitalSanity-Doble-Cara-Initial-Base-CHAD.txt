\documentclass[a4paper,twoside,openright,11pt]{book}
\usepackage[
  inner=3cm,      % margen de encuadernación
  outer=2.5cm,    % margen exterior
  top=2.5cm,
  bottom=2.5cm,
  includehead,   
  includefoot 
]{geometry}
\usepackage{setspace}
\onehalfspacing
\setlength{\parskip}{0.4\baselineskip}  % ← prueba con 0.5–1.0 \baselineskip
\setlength{\parindent}{20pt}             % ← conserva la sangría habitual
\raggedbottom 
\usepackage[spanish]{babel}
\addto\captionsspanish{\renewcommand{\listtablename}{Índice de tablas}}
\usepackage{graphicx}
\usepackage{caption}
\addto\captionsspanish{\renewcommand{\tablename}{Tabla}}
\captionsetup[figure]{skip=10pt, labelfont=bf}
\captionsetup[table]{skip=10pt, labelfont=bf}

% Ajuste del ancho de los numerales en la lista de figuras:
\usepackage{tocloft}
\setlength{\cftfignumwidth}{3.5em}

\usepackage[utf8]{inputenc} % Para poner acentos y eñes directamente.
\usepackage{pdfpages}
\usepackage{listings}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{microtype}


\usepackage{array} %para anchos de columna fijos en las tablas

% al final de los \usepackage, justo antes de \begin{document}
\usepackage[
  colorlinks=false,       % desactiva el coloreado del texto
  pdfborder={0 0 1},      % marco de 1 punto
  linkbordercolor=red,    % color del marco de enlaces internos (índice, \ref, capítulos…)
  citebordercolor=red,    % color del marco de citas (\cite)
  urlbordercolor=red      % color del marco de URLs (\url, \href)
]{hyperref}


            % --- Bibliografía estilo APA (igual que el segundo preámbulo) ---
\usepackage{apacite}   % Formato APA
\usepackage{natbib}    % Comandos \citet, \citep, etc.
\usepackage{breakcites}% Corta correctamente citas largas en línea


\usepackage{algorithm2e}
\usepackage{float} 

\usepackage{xurl}



\setcounter{tocdepth}{3}
\setcounter{secnumdepth}{3}




\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}  % limpia encabezados y pies

% Actualiza marks para dos caras
\renewcommand{\chaptermark}[1]{\markboth{\thechapter.\ #1}{}}
\renewcommand{\sectionmark}[1]{\markright{\thesection.\ #1}}

% Cabeceras/pies diferenciados par (E) / impar (O)
\fancyhead[RO]{\thepage}                            % página en el lado derecho impar
\fancyhead[LE]{\thepage}                            % página en el lado izquierdo par
\fancyhead[LO]{\nouppercase{\textit{\rightmark}}}   % sección en impar (izq.)
\fancyhead[RE]{\nouppercase{\textit{\leftmark}}}    % capítulo en par (der.)


\usepackage{titlesec}

\titlespacing*{\section}{0pt}{7pt}{1pt}

\titlespacing*{\subsection}{0pt}{6pt}{0.8pt}

\titlespacing*{\subsubsection}{0pt}{5pt}{0.5pt}

  \titlespacing*{\chapter}
  {0pt}   % sin indentación lateral extra
  {0pt}   % espacio *antes* del título (puede quedar en 0)
  {1.5ex} % espacio *después* del título: ajusta este valor
  
\titleformat{\chapter}[block]
  {\normalfont\fontfamily{phv}\selectfont\Huge\bfseries} % estilo del bloque
  {\thechapter.}                                         % etiqueta: solo el número+punto
  {0.65em}                                                  % separación número–título
  {}                                                     % código previo al título


  \titleformat{name=\chapter,numberless}[block]
  {\normalfont\fontfamily{phv}\Huge\bfseries}
  {}
  {0pt}
  {}


\titleformat{\section}
  {\normalfont\fontfamily{phv}\selectfont\Large\bfseries}{\thesection}{1em}{}


\usepackage{courier} % Esto configura \ttfamily a Courier
\lstset{basicstyle=\fontfamily{pcr}\selectfont}

\SetAlFnt{\fontfamily{pcr}\selectfont\footnotesize}




\renewcommand{\textsharp}{$\sharp$}

\bibpunct{(}{)}{;}{a}{,}{,}  % (Opcional) Puntuación idéntica al ejemplo

\addto\captionsspanish{\renewcommand{\bibname}{Bibliografía}}
\addto\captionsspanish{\renewcommand{\refname}{Bibliografía}}


\setlength{\skip\footins}{37pt} % espacio antes de la regla de notas al pie

\setlength{\footnotesep}{9pt} % espacio entre notas sucesivas


\begin{document}

\includepdf[pages={1}]{portadas/VitalSanity-Portada.pdf}

\thispagestyle{empty} % para que no se numere esta pagina

\null



\includepdf[pages={1}]{portadas/VitalSanity-Second-Portada.pdf}

\thispagestyle{empty} % para que no se numere esta pagina

\null


\chapter*{Agradecimientos}

\pagenumbering{arabic}    % ← usa números “normales”
\setcounter{page}{1}      % ← (opcional) empieza en la 1

\markboth{AGRADECIMIENTOS}{AGRADECIMIENTOS} % encabezado
\thispagestyle{empty} % para que no se numere esta pagina


Me gustaría comenzar agradeciendo de forma profunda a toda \textbf{mi familia}. Ellos han representado siempre mi pilar \textbf{más fundamental} para avanzar en todos los aspectos, tanto a nivel personal como a nivel profesional. Gracias a ellos he conseguido salir adelante incluso en mis momentos más oscuros. En particular, quiero dar las gracias a mis \textbf{dos maravillosos abuelos} y a mi queridísimo \textbf{tito Paco}, quienes me dan siempre \textbf{momentos increíbles}. Por supuesto, también le quiero agradecer por todo a \textbf{mi increíble y legendaria madre}, agradecerte de \textbf{todo corazón} por ser la persona que más ha confiado y que más \textbf{ha luchado} por mí siempre. Muchísimas gracias \textbf{mamá}, te amo, gracias por haber sido mi luz que más brilla.

Tampoco me puedo olvidar de mis \textbf{inigualables compañeros} del \textbf{Club de Debate}. Dentro de este grupo quiero destacar a mi querida profesora \textbf{Cristina Cachero} por haberse apuntado al \textbf{Club} y por disfrutar (casi tanto como yo) el maravilloso mundo de la oratoria; a mi compañero \textbf{Luis}, por haber dado juntos una \textbf{batalla tan intensa} en el \textbf{torneo interno}; y también, darte las gracias a ti, \textbf{Natalia}, que como presidenta del \textbf{Club} has contado conmigo siempre para implicarme en todo tipo de actividades interesantes.

Y como no podía ser de otro modo, darle mi más profundo agradecimiento a \textbf{Carlos, mi tutor}. Agradecerte Carlos por toda tu \textbf{implicación} en este proyecto, por todas aquellas \textbf{reuniones fructíferas} y por todas las ideas que hemos sacado adelante juntos, en especial por haber descubierto juntos \textbf{el legendario desafío de AutoFirma}.


También, agradecer profundamente a mis compañeros de la \textbf{Universidad} por haber sido capaces de sacar juntos a flote trabajos tan desafiantes. En especial a ti, \textbf{Dani}.

Por último, agradecerte a ti, \textbf{Slow Freezzic}, por haber sido mi mejor amigo y haber sido tan único y tan auténtico conmigo, sin haberte desviado lo más mínimo en los momentos más difíciles, en aquellos momentos donde se decide el \textbf{verdadero valor} de las personas.


\textbf{\textit{A todos vosotros, gracias.}}


\clearpage                % cierra Agradecimientos
\thispagestyle{empty}     % la página que viene irá SIN cabecera ni pie
\null
\clearpage                % pasa a la siguiente página «normal»

\chapter*{Preámbulo}

Este trabajo de fin grado implica el desarrollo de una aplicación web llamada \textbf{VitalSanity} cuyo principal objetivo es el de agilizar las \textbf{tramitaciones administrativas rudimentarias} que suelen existir a la hora del tratamiento de la \textbf{información médica de los pacientes} dentro del \textbf{ámbito nacional sanitario español}.

Con \textbf{VitalSanity} se busca establecer un \textbf{historial médico centralizado} para cada paciente, de forma que cualquier profesional médico \textbf{autorizado} pueda acceder a cualquier información del historial, independientmente del centro médico en el que opere el profesional e independientemente de si el profesional médico trabaja en sanidad \textbf{pública} o en sanidad \textbf{privada}.

Para el proceso de autorización se hará uso de la aplicación \textbf{AutoFirma} y de su versión móvil \textbf{Cliente móvil @firma}. Mediante estas herramientas, tanto el profesional médico como el paciente podrán firmar digitalmente autorizaciones con plena \textbf{validez legal} y que garanticen la \textbf{validez}, \textbf{integridad}, \textbf{autenticidad} y el \textbf{no repudio.} Del mismo modo, también se utilizarán \textbf{AutoFirma} y \textbf{Cliente móvil @firma} para firmar digitalmente los informes agregados por un profesional médico.

Del mismo modo, se incluirán otras medidas como la \textbf{autenticación con certificado digital} o el uso de \textbf{buckets protegidos y privados de AWS} para almacenar todas las autorizaciones y toda la información médica cifrada de forma segura.

Con todo esto se busca establecer un sistema robusto, tanto a nivel de \textbf{seguridad} como a nivel \textbf{legal}, el cual permita cumplir con todo lo referente en \textbf{materia de protección de datos}, tanto con lo establecido en la \textbf{Ley Orgánica de Protección de Datos (LOPDGDD)}  \citep{espana2018lopdgddboe_html} de \textbf{España}  como con lo establecido en el \textbf{Reglamento General de Protección de Datos (RGPD) \citep{eu2016rgpd_html}} de la \textbf{Unión Europea}.  



\clearpage                % cierra Agradecimientos
\thispagestyle{empty}     % la página que viene irá SIN cabecera ni pie
\null
\clearpage                % pasa a la siguiente página «normal»


\chapter*{}
\begin{flushright}
  \textit{Cuando cambias la solución, es evolución. \\
          Cuando cambias la pregunta, es revolución.}
  \\[\baselineskip]
  --- Jorge Wagensberg
\end{flushright}


\clearpage                
\thispagestyle{empty}    
\null
\clearpage                


\tableofcontents % indice de contenidos

\cleardoublepage
\listoffigures % indice de figuras
\listoftables % indice de tablas


\clearpage                
\thispagestyle{empty}    
\null
\clearpage  

\chapter{Introducción y objetivos}

En primer lugar, considero conveniente puntualizar que entre los apartados incluido en el \textbf{apéndice} de este documento se encuentran \hyperref[apendices:ejecucion]{\textbf{\textit{las indicaciones}}} para poder ejecutar y probar la aplicación, así como \hyperref[apendices:enlaces]{\textbf{\textit{los enlaces}}} asociados al desarrollo de la aplicación (repositorio de \textbf{GitHub}, tablero de \textbf{Trello}, ...)

Habiendo hecho esta aclaración, comenzamos con el desarrollo del capítulo.

\section{Contextualización}

En la actualidad, existe una evidente dificultad dentro del intercambio de datos clínicos entre diferentes centros médicos

Por culpa de este sistema arcaico, los pacientes tienden a encontrarse con graves problemas a la hora de realizar trámites aparentemente sencillos, como lo puede ser precisamente el hecho de transmitir \textbf{información} desde un centro médico a otro, acción que esconde un sinfín de elementos burocráticos y papeleo innecesario. 

Toda la complejidad de estas tramitaciones administrativas terminan por sobrepasar la paciencia de los pacientes, perjudicando gravemente a la experiencia y al grado de satisfacción de los mismos.


\section{Justificación del proyecto}

VitalSanity surge como idea innovadora para poder solucionar toda esta situación de descoordinación administrativa dentro del \textbf{ámbito nacional sanitario español.}

La premisa principal es la siguiente: \textbf{ofrecer a los pacientes la posibilidad de autorizar y desautorizar el acceso a su historial clínico centralizado mediante un sistema que resulto sencillo, eficaz y confiable.} 

\section{Sistema de autorización}
Cuando un paciente \textbf{autorice} a un profesional médico, dicho profesional médico tendrá acceso a todo el historial médico del paciente, pudiendo de esta manera visualizar informes y documentos agregados por otros profesionales médicos, así como agregar nuevos informes y documentos médicos propios dentro del historial. 

Con este sistema se logra otorgar una experiencia \textbf{satisfactoria} tanto a los pacientes como a los centros y profesionales médicos, experiencia que consigue agilizar de forma precisa el desorden sistémico presente en los procesos administrativos actuales dentro del ámbito sanitario español.

\section{Introducción a los aspectos legales}


Durante todo momento, la aplicación será desarrollada teniendo en mente como requisito imprescindible la \textbf{protección} y \textbf{seguridad} de todos los datos sensibles tanto de pacientes como de profesionales y centros médicos en \textbf{materia de protección de datos. }

De este modo, se buscará en todo momento cumplir de forma precisa con todo lo establecido en la \textbf{Ley Orgánica de Protección de Datos (LOPDGDD} \citep{espana2018lopdgddboe_html}) en España y con el \textbf{Reglamento General de Protección de Datos (RGPD) \citep{eu2016rgpd_html}
}, según lo impuesto en la última actualización de dicha ley dentro del \textbf{BOE}, actualización que se realizó el 9 de mayo de 2023.


Por todo esto, se busca una manera de implementar el sistema de autorizaciones de forma robusta al mismo tiempo que se pretende cumplir con todo lo establecido dentro de La \textbf{Ley Orgánica de Protección de Datos Personales y garantía de los derechos digitales (LOPDGDD)} y con el \textbf{Reglamento General de Protección de Datos (RGPD)}. 

Para ello, se integrará dentro de \textbf{VitalSanity} la aplicación de \textbf{AutoFirma} y la aplicación de \textbf{Cliente móvil @firma }(la versión \textbf{móvil} de \textbf{AutoFirma}). 

\section{AutoFirma y Cliente móvil @firma}
Tanto \textbf{AutoFirma} \citep{autofirma_html} como \textbf{Cliente móvil @firma} \citep{afirma_movil_html} 
son ambas aplicaciones oficiales desarrolladas por el \textbf{Gobierno de España}, específicamente por el \textbf{Ministerio para la Transformación Digital y de la Función Pública}. Su objetivo principal es facilitar la firma electrónica de documentos y la realización de trámites en línea con las \textbf{Administraciones Públicas}.

Ambas aplicaciones cumplen de forma intrínseca con la \textbf{Ley Orgánica de Protección de Datos Personales y garantía de los derechos digitales (LOPDGDD) \citep{espana2018lopdgddboe_html}} y con el \textbf{Reglamento General de Protección de Datos (RGPD) \citep{eu2016rgpd_html}}. 

Al tratarse de herramientas oficiales desarrolladas por el \textbf{Gobierno de España}, ambas aplicaciones están diseñadas para garantizar la seguridad y confidencialidad en el tratamiento de datos personales durante los procesos de firma electrónica. Este es el requisito fundamental y diferenciador por el cual se escoge \textbf{AutoFirma} y \textbf{Cliente móvil @firma }en lugar de implementar un sistema de firma personalizado, puesto que a dicho sistema de firma personalizado prácticamente se le imposibilitaría el cumplir de forma simultánea con la \textbf{LOPDGDD} como con la \textbf{RGPD} al no estar registrado bajo un \textbf{órgano} \textbf{oficial} del \textbf{Gobierno de España}.

De esta manera, tanto \textbf{AutoFirma} como \textbf{Cliente móvil @firma }serán utilizadas para firmar digitalmente los documentos PDF representativos de las autorizaciones para el acceso al \textbf{historial clínico centralizado} del paciente. En dichas autorizaciones entrarán en juego dos firmas digitales: la firma del \textbf{profesional médico} y la firma del \textbf{paciente} (\textbf{cofirma}), de forma que al final se obtendrá un \textbf{PDF} con \textbf{dos firmas diferentes}. 

Estas firmas digitales gozan plena \textbf{validez legal} y además  confieren a los \textbf{documentos firmados} un \textbf{elevado nivel de protección} puesto que aseguran en todo momento: 

\begin{itemize}
    \item \textbf{La} \textbf{validez}, porque se ajustan a la normativa legal vigente y tienen pleno reconocimiento jurídico, equiparándose a la firma manuscrita.
    \item \textbf{La} \textbf{integridad}, porque cualquier alteración posterior invalida la firma digital.
    \item \textbf{La} \textbf{autenticidad}, porque se vincula \textbf{criptográficamente} la identidad de los firmantes al documento.
    \item \textbf{El} \textbf{no repudio}, ya que los \textbf{firmantes} no pueden negar la \textbf{autoría} de la firma.
\end{itemize}



Del mismo modo, también se emplearán \textbf{AutoFirma} y \textbf{Cliente móvil @firma }para firmar digitalmente cada uno de los \textbf{informes médicos} subidos por \textbf{los profesionales sanitarios.}


\section{Otros aspectos de seguridad}

Por otra parte, también se hará uso de otros mecanismos diferentes para robustecer aún más la \textbf{seguridad} dentro del sistema y la \textbf{integridad} de los datos: \textbf{método de autenticación con certificado digital}, uso de buckets protegidos de \textbf{AWS} mediante \textbf{URLs} \textbf{prefirmadas} para almacenar las \textbf{autorizaciones} y \textbf{los informes médicos}; gestor de claves personalizado \textbf{KMS}, entre otros aspectos.

Para desarrollar la aplicación se hará uso del \textbf{framework} de \textbf{backend} \textbf{Spring Boot}, aprovechando las \textbf{potentes} herramientas de \textbf{seguridad} que ofrece este \textbf{framework} gracias a \textbf{Spring Security} y a su integración nativa con \textbf{X.509}, estándar en base al cual se generan \textbf{todos los certificados electrónico}s en \textbf{España}.


\section{Objetivos}

\textbf{VitalSanity} busca elevar la experiencia de uso de los pacientes, poniendo su foco principal en la \textbf{seguridad} y en la \textbf{claridad y sencillez de uso}.

Por ello, el objetivo \textbf{principal} que pretende \textbf{VitalSanity} es el de desarrollar una aplicación web que permita agilizar los trámites burocráticos y rudimentarios, empleando un \textbf{sistema de autorización} de acceso al historial clíncio centralizado de los pacientes el cual haga uso de la herramienta \textbf{AutoFirma} y \textbf{Cliente móvil @firma }para garantizar la \textbf{seguridad} y la \textbf{confidencialidad} en el tratamiento de \textbf{datos personales}, cumpliendo con todo lo establecido por la \textbf{Ley Orgánica de Protección de Datos Personales y garantía de los derechos digitales (LOPDGDD \citep{espana2018lopdgddboe_html}) }y con el \textbf{Reglamento General de Protección de Datos (RGPD) \citep{eu2016rgpd_html} .} A todas estas medidas de seguridad se le suman aspectos adicionales tales como la \textbf{autenticación con certificado digital}, el \textbf{almacenamiento seguro de los informes en AWS}, el uso de claves de cifrado personalizadas \textbf{CMK}, ...

 Por último, cabe destacar que con el objetivo de garantizar el pleno cumplimiento tanto de la \textbf{LOPDGDD como de la RGPD }y dado a que \textbf{AutoFirma} y su versión para \textbf{móviles} son aplicaciones desarrolladas por el \textbf{Gobierno de España}, \textbf{VitalSanity} se limitará en un primer momento a ser una aplicación dentro del \textbf{ámbito nacional español}. Con esto se logra simplificar y garantizar de una forma más segura el cumplimiento de todas las \textbf{normativas legales vigentes} en la actualidad en \textbf{materia de protección de datos.} No obstante, esto no descarta en ningún momento la posibilidad de que \textbf{VitalSanity} pueda expandirse en un futuro al \textbf{ámbito internacional.}

 

\chapter{Estado del arte}
\section{Aplicaciones similares}
\subsection{HCDSNS - España} 
En España, el \textbf{Ministerio de Sanidad} ha impulsado la \textbf{HCDSNS}\footnote{Enlace de la página oficial de HCDSNS: \textbf{\textit{\url{https://www.sanidad.gob.es/areas/saludDigital/historiaClinicaSNS/home.htm}}}} (Historia Clínica Digital del Sistema Nacional de Salud) como un repositorio electrónico unificado de información sanitaria esencial, accesible tanto para profesionales autorizados como para los propios ciudadanos.

Esta plataforma nacional permite que un médico en cualquier comunidad autónoma consulte informes clínicos generados en otra región, facilitando la continuidad asistencial en todo el país y evitando pruebas duplicadas. La \textbf{HCDSNS} opera bajo estrictos criterios de seguridad: el acceso requiere \textbf{autenticación robusta} (\textbf{DNIe, certificados electrónicos o sistema Cl@ve}) y queda limitado a fines asistenciales. 


\subsection{Proyecto de Historia Clínica Interoperable - España}
El sector sanitario privado español, aglutinado en la \textbf{Fundación IDIS\footnote{Enlace de la página oficial de la Fundación IDIS: \textbf{\textit{\url{https://innovaidis.com/}}}}}, ha desarrollado una plataforma pionera de historia clínica compartida de ámbito nacional para sus pacientes: \textbf{El Proyecto de Historia Clínica Interoperable en la Sanidad Privada}. A finales de \textbf{2023} ya contaba con unos\textbf{ 57.000} \textbf{usuarios conectados} y la participación de al menos 15 entidades sanitarias privadas relevantes (grupos hospitalarios y aseguradoras médicas). 

Esta iniciativa permite que un paciente de la \textbf{sanidad privada} \textbf{acceda a su historial clínico unificado} a través de un portal web o aplicación y pueda \textbf{compartir dicha información –totalmente o por informes seleccionados– con el profesional sanitario que él elija}, independientemente del centro u hospital al que pertenezca dicho profesional. 

En cuanto a la \textbf{seguridad} de esta aplicación, la directriz es equiparable al \textbf{sistema público}: solo los \textbf{profesionales médicos autorizados} pueden acceder, mediante credenciales seguras, y se incorporan \textbf{mecanismos de alerta} ante cualquier intento de acceso no autorizado a datos privados.


\subsection{Epic MyChart - Internacional}
\textbf{MyChart}\footnote{Enlace de la página oficial de Epic MyChart: \textbf{\textit{\url{https://www.mychart.org/}}}}
 es la plataforma de portal de pacientes de \textbf{Epic}, que permite consultar medicaciones, resultados de pruebas, citas, facturación y presupuestos de forma centralizada para más de 190 millones de pacientes en múltiples organizaciones sanitarias. Además, incorpora comunicaciones seguras entre paciente y profesional y videovisitas integradas.

\subsection{Cerner Patient Portal - Estados Unidos}
\textbf{Cerner Patient Portal}\footnote{Enlace de la página oficial de Cerner Patient Portal: \textbf{\textit{\url{https://cernerhealth.com/}}}} Ofrece acceso al \textbf{Registro Médico Electrónico (EMR)} mantenido por el proveedor, con vistas \textbf{seguras} a informes clínicos y comunicación bidireccional entre \textbf{paciente} y \textbf{profesional}. Dispone de funcionalidades para descargar y compartir registros con otros profesionales.


\subsection{Dossier Médical Partagé (DMP) – Francia}
A nivel europeo, \textbf{Francia} ha implementado desde 2018 el \textbf{Dossier Médical Partagé (DPM\footnote{Enlace de la página oficial de Dossier Médical Partagé: \textbf{\textit{\url{https://www.dmp.fr/}}}})}, un expediente médico electrónico \textbf{personal y seguro} para cada ciudadano francés. Su objetivo es servir como \textbf{historia clínica digital unificada}: almacena informes médicos, resultados de pruebas, antecedentes de salud, alergias, informes de hospitalización e incluso las voluntades anticipadas del paciente. 

El \textbf{DMP} busca \textbf{mejorar la coordinación y continuidad asistencial }centralizando los datos médicos en un “carné de salud” electrónico accesible en línea. Cada ciudadano puede crear gratuitamente su DMP y gestionar quién tiene acceso: \textbf{el paciente mantiene siempre el control sobre quién consulta su expediente}, pudiendo añadir información personal relevante u \textbf{ocultar determinados documentos} para que no sean visibles a profesionales, según su preferencia. De hecho, el sistema envía notificaciones (por correo electrónico) cada vez que se añade un nuevo documento al expediente, reforzando la transparencia hacia el titular de los datos. 


\subsection{Elektronische Patientenakte (ePA) - Alemania}

En \textbf{Alemania}, se ha introducido la \textbf{Elektronische Patientenakte (ePA\footnote{Enlace de la página oficial de Elektronische Patientenakte: \textbf{\textit{\url{https://www.bsi.bund.de/}}}})}, un expediente electrónico del paciente promovido por las aseguradoras públicas, donde el ciudadano puede gestionar sus registros médicos digitales a través de aplicaciones móviles y controlar el acceso de \textbf{médicos} a dichos datos mediante consentimientos específicos. 


\section{Objetivos comunes en este tipo de soluciones}
Los ejemplos anteriores, tanto \textbf{públicos} como \textbf{privados}, evidencian una serie de \textbf{objetivos comunes} en las soluciones de \textbf{historial clínico centralizado} y \textbf{acceso compartido}:

\begin{itemize}

\item \textbf{Continuidad asistencial y disponibilidad universal de datos}: Unificar la información médica del paciente para que esté disponible desde \textbf{cualquier centro o región}, evitando fragmentación de datos. Esto permite a cada \textbf{profesional sanitario} autorizado consultar antecedentes relevantes (alergias, medicación, diagnósticos previos) aunque sea la primera vez que atiende al paciente. El acceso unificado reduce la repetición de pruebas diagnósticas innecesarias y mejora la coordinación entre niveles asistenciales, brindando una atención más \textbf{eficiente} y \textbf{segura}.
\item \textbf{Empoderamiento del paciente y control sobre la privacidad: } Poner al paciente en el centro, otorgándole acceso directo a su historia clínica y la capacidad de decidir quién más puede verla. Todas las plataformas coinciden en \textbf{requerir el consentimiento del paciente} para compartir sus datos con terceros, en línea con la normativa de autonomía del paciente.
\item \textbf{Seguridad de la información y cumplimiento legal: } Dada la naturaleza altamente sensible de los datos de salud, estas soluciones comparten el objetivo de garantizar \textbf{la confidencialidad, integridad y disponibilidad} de la información clínica. Implementan \textbf{autenticación fuerte} (\textbf{certificados digitales}, \textbf{identidades electrónicas verificadas}) para el acceso tanto de profesionales como de pacientes, utilizan \textbf{conexiones cifradas} y \textbf{centros de datos seguros}, y se ajustan a las exigencias legales (\textbf{RGPD } \citep{espana2018lopdgddboe_html} en Europa, \textbf{LOPDGDD} \citep{espana2018lopdgddboe_html} en España, etc.). La \textbf{trazabilidad} de cada acción (\textbf{quién} accede, \textbf{cuándo} y \textbf{qué} consulta) y la generación de \textbf{alertas ante accesos no autorizados} constituyen prácticas habituales para proteger los datos. Igualmente, se fomenta el \textbf{almacenamiento seguro} de la información, con \textbf{copias de respaldo} y \textbf{planes de contingencia} para garantizar que el \textbf{historial clínico centralizado} esté disponible incluso ante\textbf{ fallos técnicos} o \textbf{desastres}.
\item \textbf{Mejora de la eficiencia y reducción del papel: } Estas aplicaciones digitalizan la documentación clínica redunda en una gestión más \textbf{ágil} y \textbf{sin papel} de los procesos sanitarios. Un objetivo común es eliminar trámites físicos engorrosos: por ejemplo, sustituyendo los consentimientos informados y otros formularios en papel por \textbf{documentos electrónicos firmados digitalmente}. La firma electrónica integrada en estas plataformas permite que \textbf{pacientes} y \textbf{profesionales} \textbf{firmen} autorizaciones, consentimientos o informes de alta de forma \textbf{remota o presencial}, con \textbf{plena validez legal}, quedando el documento almacenado de forma segura en el sistema. 

La gran mayoría de estos objetivos son comunes a aquellos que se busca perseguir con \textbf{VitalSanity}. No obstante, existen algunas diferencias con la aplicación desarrollada: \textbf{VitalSanity} es de ámbito nacional (\textbf{\textit{Epic MyChart}} es internacional); en VitalSanity el paciente no \textbf{\textit{'crea'}} su historial médio centralizado, sino que directamente autoriza o desautoriza a profesionales médicos; cuando un paciente autoriza el acceso a su historial, el profesional médico adquiere acceso a toda la información médica del historial siempre que el paciente no lo desautorice (diferencia con respecto al \textbf{DMP}, donde el paciente puede ocultar el acceso a ciertos documentos).

\end{itemize}


\section{Influencia para VitalSanity}
Con todo esto, la propuesta de \textbf{VitalSanity} se inscribe en una tendencia clara de\textbf{ digitalización sanitaria} centrada en el paciente, compartiendo muchos de los pilares funcionales con las soluciones actuales del mercado. Al igual que las plataformas \textbf{públicas nacionales} (HCDSNS en España, DMP en Francia) y los \textbf{portales integrados privados}, \textbf{VitalSanity} busca ofrecer una historia clínica electrónica centralizada donde el paciente pueda reunir todo su historial médico y ejercer un \textbf{control activo} sobre él. 


VitalSanity debe de alinearse con la dirección en la que evoluciona la \textbf{sanidad digital}, proporcionando funcionalidades que son hoy por hoy \textbf{indispensables} –centralización del historial, acceso multidisciplinar con permiso del paciente, \textbf{firma electrónica} y alta seguridad– y debe competir en \textbf{confiabilidad}, \textbf{alcance} y \textbf{facilidad} de uso con soluciones ya operativas (con medidas que aportan valor diferenciador como gestionar un historial clínico centralizado del paciente que permita incluir información tanto de sanidad \textbf{pública} como de sanidad \textbf{privada}. 

El éxito de \textbf{VitalSanity} dependerá de su capacidad para \textbf{alcanzar} y \textbf{superar} los estándares ya marcados por iniciativas \textbf{públicas} y \textbf{privadas} (en términos de \textbf{seguridad jurídica}, \textbf{interoperabilidad} y \textbf{cumplimiento normativo}) y a la vez innovar en ámbitos como la \textbf{integración} total de fuentes de datos y la \textbf{experiencia de usuario}. De lograr este \textbf{equilibrio}, \textbf{VitalSanity} podría aspirar a posicionarse \textbf{sólidamente} en el \textbf{panorama actual}, aportando una visión \textbf{unificada} del \textbf{historial clínico centralizado} del \textbf{paciente} y \textbf{anticipándose} a las futuras tendencias, donde el \textbf{paciente empoderado} y el \textbf{intercambio seguro} de información constituyen la \textbf{piedra angular} de \textbf{los sistemas de salud}.


\chapter{Tecnologías y herramientas utilizadas}

\section{AutoFirma}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/logo-autofirma.png}
\caption{Logo de AutoFirma}
\label{logo-autofirma:vv}
\end{figure}


\textbf{AutoFirma}\footnote{Enlace de la página oficial de AutoFirma: \textbf{\textit{\url{https://sedediatid.digital.gob.es/es-es/firmaelectronica/Paginas/AutoFirma.aspx}}}} es una \textbf{aplicación de escritorio} desarrollada por el \textbf{Gobierno de España} para la firma electrónica de documentos, basada en \textbf{software libre} y \textbf{estándares abiertos} que garantizan la \textbf{interoperabilidad} y la \textbf{seguridad} en las transacciones electrónicas.

Forma parte de la suite \textbf{@firma}, un conjunto integral de servicios y herramientas para \textbf{identificación} y \textbf{firma electrónica} que pueden usarse de modo independiente o integrarse en otras aplicaciones.

\textbf{AutoFirma} permite ejecutar operaciones de firma de ficheros en entornos \textbf{Windows, Linux y macOS}, ofreciendo una experiencia simple y accesible para usuarios con o sin conocimientos técnicos avanzados.

La aplicación selecciona automáticamente el formato de firma más apropiado al tipo de documento (\textbf{PDF, XML}, etc.), liberando al usuario de cualquier decisión técnica y permitiendo además la visualización de las firmas y los documentos firmados.

Entre sus beneficios destacan la \textbf{autonomía} del usuario (la clave privada nunca abandona su dispositivo), la \textbf{interoperabilidad} entre diferentes sistemas y el cumplimiento de la \textbf{normativa eIDAS y Ley 39/2015}, lo que asegura \textbf{pleno reconocimiento legal} en toda la \textbf{Unión Europea} y dentro de \textbf{España}.

\textbf{AutoFirma} ha representado la piedra angular de las funcionalidades de \textbf{VitalSanity}, utilizándose para \textbf{firmar/cofirmar} las \textbf{autorizaciones} y para firmar los \textbf{informes médicos}.


\section{Cliente móvil @firma}
Constituye la versión móvil de \textbf{AutoFirma}. Se emplea para realizar operaciones de firma desde dispositivos Android e iOS.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.15\textheight, keepaspectratio]{img/logo-clientemovilfirma.png}
\caption{Logo de Cliente móvil @firma}
\label{logo-autofirma:vv}
\end{figure}

La comunicación entre la página web y \textbf{Cliente móvil @firma\footnote{Enlace de descarga de Cliente móvil @firma: \textbf{\textit{\url{https://play.google.com/store/apps/details?id=es.gob.afirma&hl=es}}}}} se realiza mediante el uso de servidores intermedios, lo que permite al usuario firmar documentos sin que la clave privada salga de su dispositivo (este aspecto se describirá en más detalle en apartado de \textbf{'Detalles de Implementación'}.

Aunque \textbf{Cliente móvil @firma} comparta muchos rasgos comunes con \textbf{AutoFirma}, a la hora de establecer la integración con una aplicación existen diferencias claves y no triviales entre ambas que deben de tenerse en cuenta.

De igual forma que \textbf{AutoFirma}, \textbf{Cliente móvil @firma} representa una pieza fundamental dentro de VitalSanity. La aplicación se ha desarrollado de tal forma que todos los procesos que involucren una firma se puedan realizar de forma independiente con ambas aplicaciones. 

La razón principal por la que se ha decidido integrar también \textbf{Cliente móvil @firma} ha sido porque los pacientes tenderían a usar la aplicación desde un dispositivo móvil. Por otro lado, los profesionales sanitarios, los centros médicos y los administradores tenderían a utilizar la aplicación desde el ordenador.

\section{Amazon Web Services}


\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/aws-logo.png}
\caption{Logo de AWS}
\label{aws-logo:vv}
\end{figure}

\textbf{AWS\footnote{Enlace de la página oficial de AWS: \textbf{\textit{\url{https://aws.amazon.com/}}}}} es una plataforma de servicios en la nube que proporciona recursos como almacenamiento, bases de datos, redes y potencia de cómputo bajo demanda.

Permite desplegar aplicaciones de cualquier escala sin preocuparse por la infraestructura física. 

Sus principales ventajas son la escalabilidad automática, el soporte, el pago por uso y un amplio catálogo de servicios que cubren desde hosting web hasta inteligencia artificial.  

\textbf{AWS} ha representado otro de los grandes pilares de la aplicación. Se ha empleado para el almacenamiento seguro de las \textbf{autorizaciones} y de los \textbf{informes médicos} (mediante buckets de \textbf{S3}). Asimismo, se han empleado otros servicios de \textbf{AWS} como \textbf{KMS} para el empleo de claves \textbf{CMK} personalizadas, \textbf{IAM},... (todo esto se explica con más detalle en el apartado de \textbf{detalles de implementación}).

\section{Docker}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/docker-logo.png}
\caption{Logo de Docker}
\label{docker-logo:vv}
\end{figure}

\textbf{Docker}\footnote{Enlace de la página oficial de Docker: \textbf{\textit{\url{http://docker.com}}}} es una plataforma de código abierto para el desarrollo, envío y ejecución de aplicaciones en contenedores, que aísla las aplicaciones de la infraestructura subyacente para asegurar un despliegue rápido y consistente en entornos locales, centros de datos o proveedores de nube.

Gracias a su arquitectura cliente-servidor, en la que el cliente Docker comunica con el demonio dockerd mediante una API REST, Docker simplifica la gestión del ciclo de vida de contenedores, imágenes, redes y volúmenes.

Entre los principales beneficios de Docker destacan la portabilidad de las aplicaciones, la entrega continua en flujos CI/CD, la escalabilidad dinámica y un uso eficiente de los recursos al ejecutar múltiples contenedores compartiendo el kernel del sistema operativo.

 Los casos de uso más comunes incluyen la adopción de arquitecturas de microservicios, la creación de entornos de prueba reproducibles, la migración de aplicaciones heredadas a entornos \textbf{contenedorizados} y la automatización de despliegues en prácticas DevOps.

 Docker otorga portabilidad a cualquier aplicación, lo que permite solucionar problemas de configuración local, evitando así el clásico problema de \textbf{'en mi ordenador sí que funcionaba'}.

Para el desarrollo de la aplicación se ha empleado una base de datos \textbf{Postgres dockerizada}


\section{Docker Compose}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=3\textheight, keepaspectratio]{img/docker-compose-logo.png}
\caption{Logo de Docker Compose}
\label{logo-autofirma:vv}
\end{figure}

\textbf{Docker Compose}\footnote{Enlace de la página oficial de Docker Compose: \textbf{\textit{\url{https://docs.docker.com/compose/}}}}
 es una herramienta incluida en el ecosistema Docker que permite definir y ejecutar aplicaciones compuestas por múltiples contenedores a través de un único fichero YAML (\textit{compose.yml}), desde el cual se pueden desplegar, escalar y gestionar de manera simultánea todos los servicios implicados.

A diferencia de la interfaz de línea de comandos de Docker pura, Docker Compose ofrece comandos especializados (como \textit{docker compose up}, \textit{docker compose down}, \textit{docker compose build} o \textit{docker compose ps}) que facilitan la orquestación de pilas de servicios en hosts únicos, siendo especialmente valiosa para entornos de desarrollo, pruebas automatizadas en CI/CD y despliegues monohost.

Entre sus beneficios destacan la rápida configuración mediante scripts YAML y variables de entorno, la portabilidad de la configuración entre equipos, la comunicación interna segura de los servicios a través de redes aisladas y la eficiencia en el uso de recursos al reutilizar contenedores y caches de configuración.

\textbf{Docker Compose} es una de las herramientas más poderosas que disponemos los programadores en la actualidad puesto que permite levantar una aplicación en cualquier máquina que tenga instalada docker, lo cual evita el tener que descargar manualmente todas las dependencias en cada máquina, aspecto que sin duda ahorra una enorme cantidad de tiempo y muchos quebraderos de cabeza.

Para el desarrollo de la aplicación se ha empleado \textbf{Docker Compose} para orquestar dos servicios: \textbf{app} y \textbf{db}.

\section{PostgreSQL}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.25\textheight, keepaspectratio]{img/postgre-sql-logo.png}
\caption{Logo de PostgreSQL}
\label{postgre-sql-logo:vv}
\end{figure}

\textbf{PostgreSQL}\footnote{Enlace de la página oficial de PostgreSQL: \textbf{\textit{\url{https://www.postgresql.org/}}}} es un sistema de gestión de bases de datos relacional de código abierto, altamente extensible y compatible con SQL,  el cual destaca por su robustez, cumplimiento de estándares y soporte para transacciones avanzadas. 

Para la base de datos dockerizada se ha empleado una imagen de \textbf{Postgres}.


\section{Mailtrap}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.15\textheight, keepaspectratio]{img/mailtrap-logo.png}
\caption{Logo de Mailtrap}
\label{mailtrap-logo:vv}
\end{figure}

\textbf{Mailtrap}\footnote{Enlace de la página oficial de Mailtrap: \textbf{\textit{\url{https://www.mailtrap.io}}}} es una plataforma de pruebas y entrega de correo electrónico que crea un buzón virtual aislado para capturar todos los mensajes enviados desde entornos de desarrollo, evitando así el envío accidental a usuarios reales. Se utiliza principalmente para previsualizar correos en distintos dispositivos, garantizando la fidelidad del diseño antes de su despliegue en producción. 

Entre sus fortalezas destacan la integración con API RESTful y SMTP para automatizar flujos de QA, la detección temprana de errores en el contenido y la posibilidad de realizar pruebas automatizadas en pipelines de CI/CD sin riesgos.

Sus casos de uso más comunes incluyen la verificación de emails de registro, restablecimiento de contraseñas y notificaciones transaccionales.

\textbf{Mailtrap} ha representado un bloque funcional \textbf{muy importante} ya que es ampliamente utilizado en un gran número de funcionalidades de la aplicación, en particular se usa para:

\begin{itemize}
    \item Recibir y mostrar correos de información enviados al paciente cuando un profesional médico le ha solicitado autorización de acceso a su historial.
    \item Recibir y mostrar correos  de información enviados al profesional médico cuando un paciente ha aceptado la solicitud de autorización.
    \item Recibir y mostrar correos de información enviados al profesional médico cuando un paciente ha denegado la solicitud de autorización.
    \item Recibir y mostrar correos de información enviados al profesional médico cuando un paciente ha desautorizado el acceso a su historial médico.
    \item Recibir y mostrar correos con la clave de acceso cuando un administrador registra a un centro médico.
    \item Cuando un centro médico registra a profesionales médicos a partir de un fichero \textbf{CSV}, \textbf{Mailtrap} se utiliza para recibir y mostrar correos enviados con las claves de acceso a cada uno de los profesionales médicos registrados.
    \item Cuando un paciente se registra, \textbf{Mailtrap} se utiliza para recibir y mostrar correos enviados con el código de confirmación.
\end{itemize}


\section{Spring Boot}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/spring boot logo.png}
\caption{Logo de Spring Boot}
\label{spring boot logo:vv}
\end{figure}

\textbf{Spring Boot}\footnote{Enlace de la página oficial de Spring Boot: \textbf{\textit{\url{https://spring.io/projects/spring-boot}}}} es un framework de código abierto desarrollado por Pivotal que simplifica la creación de aplicaciones Java independientes y listas para producción adoptando convenciones opinadas sobre la configuración del ecosistema Spring.

Spring Boot proporciona arranques automáticos (Starters), autoconfiguración y un servidor embebido que elimina la dependencia de servidores externos.

Los principales beneficios incluyen la reducción de la complejidad en la configuración inicial, la aceleración de los ciclos de desarrollo y la compatibilidad nativa con prácticas de integración y despliegue continuos (CI/CD ), permitiendo así desarrollar aplicaciones empresariales de alta disponibilidad.

Puesto que la seguridad es uno de los aspectos más fundamentales que se busca perseguir con \textbf{VitalSanity}, la principal razón por la que se ha elegido Springboot como framework para desarrollar la aplicación ha sido por \textbf{Spring Security}. 

Spring Security es una herramienta intregada dentro de \textbf{Spring Boot} la cual sirve para dotar a las aplicaciones de una capa muy robusta de seguridad.

Asimismo, también ha sido de gran utilidad su integración nativa con \textbf{X.509}, estándar en base al cual se generan todos los certificados electrónicos oficiales y con plena validez legal en España. Gracias a esto, ha resultado más sencillo integrar AutoFirma/Cliente móvil @firma, así como implementar la autenticación con certificado digital.

\section{Git y GitHub}


\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/git-y-github-logo.png}
\caption{Logos de Git y de GitHub}
\label{git-y-github-logo:vv}
\end{figure}

\textbf{Git}\footnote{Enlace de la página oficial de git: \textbf{\textit{\url{https://git-scm.com/}}}} es un sistema de control de versiones distribuido de código abierto ideado para registrar y gestionar los cambios realizados en los archivos de un proyecto a lo largo del tiempo.

\textbf{GitHub}\footnote{Enlace de la página oficial de GitHub: \textbf{\textit{\url{https://github.com/}}}} es una plataforma web que emplea el sistema de control de versiones de \textbf{Git} junto con herramientas integradas de colaboración, seguimiento de incidencias y gestión de proyectos, permitiendo llevar un seguimiento remoto de las diferentes versiones de una aplicación. 

Sin duda, estas dos herramientas han sido de las más útiles durante el desarrollo del proyecto. No me imagino ningún proyecto de Software de calidad que no haga uso de un sistema de control de versiones. Ambas me han permitido poder implementar VitalSanity de una forma muy esquemática y ordenada. A nivel personal, me daban la tranquilidad y la seguridad de saber que si en algún momento introducía algún \textbf{bug} muy específico en el código, siempre podría volver atrás a versiones anteriores empleando el comando \textbf{git reset --hard} (comando que he utilizado en muchas ocasiones y que me ha ahorrado muchos dolores de cabeza y muchísimas horas de trabajo).

Por último, mencionar que \textbf{Git} y \textbf{GitHub} han permitido el correcto devenir de la principal metodología empleada durante el desarrollo de la aplicación: \textbf{GitFlow con Versionado Semántico}.
Asimismo, también se ha empleado un tablero de GitHub para aplicar la metodología \textbf{KanBan}(todo esto será explicado con más detalle en el apartado de \textbf{Metodologías empleadas}). 


\section{Trello}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/Trello logo.png}
\caption{Logo de Trello}
\label{Trello logo:vv}
\end{figure}

\textbf{Trello}\footnote{Enlace de la página oficial de Trello: \textbf{\textit{\url{https://trello.com/}}}} es una aplicación web de gestión de proyectos basada que permite representar flujos de trabajo visualmente mediante tableros compuestos por listas y tarjetas.

Cada una de las tarjetas se distribuyen entre columnas (por ejemplo, “Por hacer”, “En progreso” y “Hecho”) para reflejar el estado actual de las actividades. Este enfoque intuitivo simplifica la organización de proyectos.

El uso de \textbf{Trello} ha permitido una organización mucho más sencilla y efectiva desde el proyecto, marcando desde un inicio una visón clara de las tareas que tenían que realizarse.

El uso de \textbf{Trello} sigue también la línea de la metodología \textbf{Kanban}. La diferencia con el \textbf{tablero de GitHub} es que en \textbf{Trello} se describían las tareas a nivel general, mientras que en el \textbf{tablero de GitHub} se trataba de dividir cada tarea en \textbf{subtareas} más pequeñas y detalladas. (todo esto será explicado con más detalle en el apartado de \textbf{Metodologías empleadas}). 


\section{HTML, CSS y JavScript}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/hmtl-css-js-logo.png}
\caption{Logos de HTML, CSS y JS}
\label{hmtl-css-js-logo:vv}
\end{figure}

\textbf{HTML} (HyperText Markup Language), \textbf{CSS} (Cascading Style Sheets) y \textbf{JavaScript} constituyen el trío fundamental para el desarrollo web

\begin{itemize}
    \item \textbf{HTML} se encarga de definir la estructura y el significado semántico de los contenidos, permitiendo organizar textos, imágenes, enlaces y formularios en un documento que los navegadores puedan interpretar.
    \item \textbf{CSS} se utiliza para estilizar esa estructura, controlando colores, tipografías, disposiciones y efectos visuales, de modo que el mismo contenido pueda presentarse de formas muy distintas según el dispositivo o las preferencias de diseño.
    \item \textbf{JavaScript} aporta la capa de interactividad y dinamismo, habilitando desde respuestas a eventos de usuario.
\end{itemize}

La utilidad de estas tres tecnologías en el proyecto es más que evidente: la combinación de estas tres tecnologías constituyen la piedra angular de todo producto software.


\section{Tailwind CSS}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/tailwind-logo.png}
\caption{Logo de Tailwind CSS}
\label{tailwind-logo:vv}
\end{figure}

\textbf{Tailwind}\footnote{Enlace de la página oficial de Tailwind CSS: \textbf{\textit{\url{https://tailwindcss.com/}}}} \textbf{CSS} es un framework utility-first de CSS que ofrece una amplia colección de clases de bajo nivel para componer diseños de forma rápida y coherente.

Se ha empleado para desarrollar la \textbf{homepage} de la aplicación.

\section{Figma}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.2\textheight, keepaspectratio]{img/Figma-Logo.png}
\caption{Logo de Figma}
\label{Figma-Logo:vv}
\end{figure}

\textbf{Figma}\footnote{Enlace de la página oficial de Figma: \textbf{\textit{\url{https://www.figma.com/}}}} es una plataforma de diseño colaborativo en la nube que permite crear, prototipar y compartir interfaces de usuario de forma simultánea y en tiempo real.

Se ha empleado \textbf{Figma} para desarrollar los \textbf{mockups} de la aplicación. El desarrollar en primer lugar los \textbf{mockups} ha facilitado mucho la posterior implementación de cada una de las vistas de la aplicación. Además, me ha sido de gran utilidad puesto que, gracias a los \textbf{mockups}, tenía en mi mente en todo momento la imagen de una aproximación de como quería que se viese la aplicación.



\chapter{Metodologías empleadas}



\section{Gitflow con Pull Requests}


GitFlow es una metodología ampliamente conocida la cual \textbf{describe el ciclo de lanzamiento del proyecto asignando roles específicos a distintas ramas} y definiendo \textbf{cuándo y cómo deben interactuar} entre sí. En este modelo se distinguen principalmente dos ramas permanentes: la rama \textbf{principal} (main), que almacena el historial oficial de lanzamientos estables, y la rama \textbf{de desarrollo} (develop), que es el punto de integración de las nuevas funcionalidades. 

A partir de ellas, GitFlow emplea ramas de soporte de vida corta para estructurar el trabajo: las ramas \textbf{de funcionalidad} (feature branches), creadas desde develop para desarrollar cada nueva característica o mejora; las ramas \textbf{de lanzamiento} (release branches), que se crean desde develop cuando se acumulan suficientes funcionalidades para preparar una versión pública, permitiendo pulir detalles finales (ej. corrección de bugs, documentación) sin detener el desarrollo de nuevas funciones; y las ramas \textbf{de corrección rápida} (hotfix branches), que se derivan directamente de master/main cuando es necesario corregir de urgencia un fallo en producción, aplicando el arreglo y luego fusionándolo tanto a master como a develop.

Para integrar cada una de las ramas tanto en \textbf{main} como en \textbf{develop} se ha hecho uso de \textbf{Pull Requests (PR)}. Una pull request es una petición formal para incorporar los cambios de una rama en otra, usualmente acompañada de una discusión o revisión de código.

Cuando una rama está lista, se crea una pull request para integrar su contenido. Las pull requests actúan de este modo como \textbf{puntos de control de calidad}: permiten revisar el código, comentar sobre él, etc. 

\subsection{Importancia de Gitflow para el desarrollo de la aplicación}

\textbf{Gitflow} ha sido de vital importancia para el desarrollo de la aplicación puesto que ha dotado en todo momento a \textbf{VitalSanity} de una gran trazabilidad, quedando reflejados en el repositorio de \textbf{GitHub} los cambios más relevantes que se han ido realizando durante el desarrollo. 

Asimismo, esta metodología agiliza mucho el proceso de corrección de bugs, por un lado al permitir crear ramas \textbf{hotfix} y por otra parte al permitir \textbf{GitHub} revertir \textbf{Pull requests}.

Gracias a todo esto, \textbf{Gitflow} ha proporcionado al \textbf{desarrollo de VitalSanity} una gran organización y trazabilidad, realzando de esta manera el rigor establecido durante la gestión del proyecto.

\subsection{Resultado de la aplicación de Gitflow}

En el repositorio de \textbf{Github} (el cual puede accederse desde este \href{https://github.com/cacs2-ua/TFG-VitalSanity-05988721G}{\textbf{\textit{enlace}}}) se han completado un total de \textbf{veinticuatro Pull Requests}, en las que se han aplicado tanto \textbf{feature branches} como \textbf{release branches} y  \textbf{hotfix branches}.

Por último, destacar que durante el desarrollo del proyecto las Pull Requests iban asociadas a \textbf{issues} y a \textbf{milestones} específicos, otorgando así una información más detallada sobre cada una de las funcionalidades. Asimismo, se han configurado cada una de las \textbf{Pull Requests} para que cuando se completasen, se cerrase automáticamente la \textbf{issue} asociada, automatizando de esta forma parte de la gestión del proyecto. 

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/metodologias/close-issue.png}
\caption{Pull Request cierra la  issue}
\label{close-issue:vv}
\end{figure}



\subsection{Versionado Semántico}
El uso de \textbf{Gitflow} se ha complementado con el empleo del \textbf{Versionado Semántico} (\textbf{Semantic Versioning} o \textbf{SemVer}) para asignar identificadores de versión a la aplicación. 

El versionado semántico es una convención ampliamente adoptada 
que define un formato \textbf{MAJOR.MINOR.PATCH} para los números de versión, donde cada componente numérico transmite información sobre la naturaleza de los cambios realizados. En concreto, la especificación \textbf{SemVer 2.0.0} establece las siguientes reglas:

\begin{itemize}
  \item \textbf{MAYOR (Major)}: Se incrementa la versión mayor cuando se introducen \textbf{cambios incompatibles o modificaciones muy relevantes} con respecto a versiones anteriores (por ejemplo, modificaciones que rompen la compatibilidad de la API o que agregan un bloque funcional amplio commpletamente nuevo).
  \item \textbf{MENOR (Minor)}: Se incrementa la versión menor cuando se añade \textbf{una nueva funcionalidad de forma compatible} con respecto a la versión existente. Es decir, mejoras o características adicionales que mantienen la compatibilidad hacia atrás y que no representan un cambio sustancialmente grande.
  \item \textbf{PARCHE (Patch)}: Se incrementa la versión parche cuando se realizan \textbf{correcciones de errores o cambios menores compatibles} con versiones previas. Son típicamente arreglos que no afectan la funcionalidad de forma sustancial ni rompen compatibilidad.
\end{itemize}

La esencia del versionado semántico es transmitir claramente el significado y alcance de los cambios a través del número de versión. Gracias al versionado semántico también se evita el denominado \textbf{infierno de dependencia}s al establecer expectativas claras sobre la compatibilidad de la aplicación.

\subsection{Importancia del versionado semántico para el desarrollo de la aplicación}
La aplicación de versionado semántico en VitalSanity ha tenido como objetivo el de proporcionar un \textbf{esquema claro y consistente} para identificar cada versión de \textbf{VitalSanity}. Dado que el proyecto ha constado de diferentes fases, etiquetar cada liberación con un número de versión semántica contribuye a obtener una mejor comprensión de la \textbf{relevancia de cada versión}. 

La elección del versionado semántico como metodología se justifica por ser un \textbf{estándar ampliamente reconocido} y por proveer un conjunto de reglas objetivo para establecer el versionado.  Un esquema de versionado claro facilita las discusiones sobre avances en el proyecto (por ejemplo, \textbf{en la versión 1.2.1 se incorporó la funcionalidad X}) y respalda la \textbf{trazabilidad} de la evolución del software. 

\subsection{Resultado de la aplicación del SemVer}

A continuación se muestra cada una de las versiones de la aplicación:

\begin{itemize}
    \item \textbf{v1.0.0:} Versión inicial de la aplicación (repositorio de \textbf{GitHub} recién creado). \textbf{Rama main}
    \item \textbf{v1.1.0}: Comienzo del desarrollo de la funcionalidad de \textbf{\textit{Inicio de sesión}}. \textbf{Rama develop}.
    \item \textbf{v1.1.1}: Funcionalidad de \textbf{Inicio de sesión} implementada.
    \item \textbf{v1.1.2:}  Implementado el \textbf{\textit{inicio de sesión con certificado digital}}.
    \item \textbf{v1.1.3:} Agregadas vistas \textbf{HTML} estáticas para la interacción entre el paciente y profesional médico.
    \item \textbf{v1.2.0:} Release con todas las funcionalidades implementadas de la autenticación.
    \item \textbf{v1.3.0:} Comienzo del desarrollo en \textbf{develop} del siguiente bloque funcional.
    \item \textbf{v1.3.1:} Implementado el registro del \textbf{paciente} y agregada la configuración de \textbf{mailtrap}.
    \item \textbf{v1.3.2:} Implementado el registro de los \textbf{centros médicos}.
    \item  \textbf{v1.3.3:} Implementado el registro de los \textbf{profesionales médicos} a partir de un fichero \textbf{CSV}.
    \item \textbf{v2.0.0:} Release con todos los sistemas de registro y de autenticación básica para todos los tipos de usuario junto con las vistas \textbf{HTML} estáticas de la interacción entre \textbf{paciente} y \textbf{profesional médico}.
    \item \textbf{v2.1.0:} Comienzo del desarrollo en \textbf{develop} del siguiente bloque funcional.
    \item \textbf{v2.1.1:}  Solicitud y \textbf{firma} por parte del \textbf{profesional médico} de la autorización al \textbf{historial médico centralizado}  de un paciente.
    \item \textbf{v2.1.2:} El paciente \textbf{acepta} o \textbf{deniega} la \textbf{solicitud de autorización} del profesional médico. En 
    \item \textbf{v2.1.3:} En esta versión se completaron el resto de funcionalidades asociadas a la interacción entre paciente y profesional médico.
    \begin{itemize}
        \item \textbf{Bloques funcionales asociados al profesional médico completados en esta versión:}
        \begin{itemize}
            \item Ver pacientes que han autorizado
            \item Ver solicitudes de autorización pendientes
            \item Ver pacientes que han desautorizado
            \item Volver a solicitar autorización a un paciente que ha desautorizado
        \end{itemize}
        \item \textbf{Bloques funcionales asociados al paciente completados en esta versión:}
        \begin{itemize}
            \item Ver profesionales autorizados
            \item Desautorizar a un profesional autorizado
        \end{itemize}
    \end{itemize}
    
    
    \item \textbf{v3.0.0:} Release con todos los nuevos bloques funcionales implementados.
    \item \textbf{v3.1.0:} Comienzo del desarrollo del bloque funcional.
    \item \textbf{v3.1.1:} Completar la lógica asociada a la subida y firma de informes médicos junto con sus documentos.
    
    \begin{itemize}
        \item \textbf{Bloques funcionales asociados al profesional médico completados en esta versión:}
        \begin{itemize}
            \item Acceder al historial médico centralizado de un paciente.
            \item Subir y firmar un informe médico al historial médico centralizado de un paciente.
            \item Editar y firmar un informe médico existente historial médico centralizado de un paciente.
        \end{itemize}
    \end{itemize}

    \begin{itemize}
        \item \textbf{Bloques funcionales asociados al paciente completados en esta versión:}
        \begin{itemize}
            \item El paciente accede a los informes de su historial médico centralizado.
            \item El paciente accede a los informes específicos agregados por un profesional médico.
        \end{itemize}


    \end{itemize}

\item \textbf{v3.1.2:} Subida y gestión de documentos asociados a los informes médicos.
   \begin{itemize}
        \item \textbf{Bloques funcionales asociados al profesional médico completados en esta versión:}
        \begin{itemize}
            \item Ver detalles de un informe médico.
            \item Adjuntar documentos a un informe médico propio (creado por el mismo profesional médico).
            \item Descargarse los documentos asociados a un informe médico.
        \end{itemize}
    \end{itemize}

    \begin{itemize}
        \item \textbf{Bloques funcionales asociados al paciente completados en esta versión:}
        \begin{itemize}
            \item Ver detalles de un informe médico.
            \item Descargarse los documentos asociados a un informe médico.
        \end{itemize}
    \end{itemize}
    
\item \textbf{v3.1.3:} Filtros de la aplicación.

   \begin{itemize}
        \item \textbf{Bloques funcionales asociados al profesional médico completados en esta versión:}
        \begin{itemize}
            \item Filtrar pacientes que han autorizado el acceso a su historial.
            \item Filtrar pacientes que han desautorizado el acceso a su historial.
            \item Filtrar informes dentro del historial de un paciente.
        \end{itemize}
    \end{itemize}

    \begin{itemize}
        \item \textbf{Bloques funcionales asociados al paciente completados en esta versión:}
        \begin{itemize}
            \item Filtrar informes dentro del historial médico centralizado.
        \end{itemize}
    \end{itemize}

   \item \textbf{v4.0.0:} Release con todos los nuevos bloques funcionales implementados.

   \item \textbf{v4.1.0:} Comienzo del desarrollo del bloque funcional.

   \item \textbf{v4.1.1:} Página Home y plantillas de error.

   \item \textbf{v4.1.2:} Pulir detalles finales.

\end{itemize}

Cada uno de los números de versión se han establecido siguiendo las reglas del versionado semántico que se han expuesto con anterioridad. 

Aquellas versiones cuyo número \textbf{menor} es par se corresponden con versiones que se publican directamente en la rama \textbf{main} (es decir, se corresponden con ramas de \textbf{release} o con ramas de \textbf{hotfix}). Por otra parte, aquellas versiones cuyo número \textbf{menor} es impar se corresponden con funcionalidades que se desarrollan desde develop (es decir, se corresponden con funcionalidades que se desarrollan en \textbf{feature branches} que provienen de develop).

También notamos que cada vez que se va a desarrollar una nueva funcionalidad, se establece una versión cuyo número de parche es igual a \textbf{cero} (nuevamente, siguiendo la convención establecida del \textbf{versionado semántico}). Por ejemplo, la versión \textbf{2.1.0} contiene una copia exacta de la versión \textbf{2.0.0} de la rama \textbf{main}.

El uso del versionado semántico se ha aplicado para nombrar los siguientes elementos:

\begin{itemize}
    \item Los \textbf{tags} de los commits que completaban una funcionalidad, corregían un bug o abrían una nueva release.
    \item Los milestones.
    \item Las diferentes imágenes subidas a \textbf{DockerHub} (se puede acceder al repositorio de \textbf{DockerHub} desde este \href{https://hub.docker.com/repository/docker/criscacs2/vitalsanity-05988721g}{\textbf{\textit{enlace}}}. Esto simplifica de forma notable el momento de puesta en producción. Disponer de una imagen de \textbf{Docker} en \textbf{DockerHub} por cada versión de la aplicación \textbf{acelera} la puesta en marcha y, al mismo tiempo, permite desplegar exactamente la versión que se necesite. 
\end{itemize}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/metodologias/dockerhub-imagenes.png}
\caption{Imágenes en DockerHub con las diferentes versiones de VitalSanity}
\label{dockerhub-imagenes:vv}
\end{figure}

Por último, destacar que, como se puede observar en las diferentes versiones de la aplicación, no se ha seguido un orden estrictamente lineal (por ejemplo, puede verse como la página \textbf{Home} se ha desarrollado prácticamente al final). Esto es así ya que desde un primer momento quise centrarme en implementar primero las funcionalidades más importantes dentro de la aplicación y aquellas que representasen un mayor cuello de botella. En línea con este aspecto se encuentra el hecho de que lo primero que hice de todo fue el establecer un proyecto mínimo base en el que funcionase bien \textbf{Autofirma}. Este proyecto se realizó antes de la creación del repositorio oficial de la aplicación. Esta mentalidad de \textbf{\textit{"hacer primero lo más difícil"}} me ha permitido tener una noción mucho más realista y precisa del tiempo y del avance verdadero del proyecto. Este proyecto mínimo base de \textbf{Autofirma} será analizado con más detalle en el apartado de \textbf{Desafíos afrontados}.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/conclusiones/AutoFirma ejemplo base.png}
\caption{Proyecto mínimo base creado para AutoFirma}
\label{AutoFirma ejemplo base:vv}
\end{figure}


\section{Kanban}

 Kanban es un marco de trabajo ágil que enfatiza la visualización continua del trabajo y la transparencia total del flujo de tareas, permitiendo una planificación y seguimiento efectivos. En Kanban, los elementos de trabajo (tareas, funcionalidades, etc.) se representan en tarjetas dispuestas en columnas que típicamente reflejan estados (como \textbf{Pendiente}, \textbf{En progreso}, \textbf{Terminado}, entre otras posibles opciones. Este tablero visual permite conocer de un vistazo el estado de cada tarea en cada momento. 

Esta metodología se ha empleado tanto en un tablero \textbf{Trello} (accesible desde este \href{https://trello.com/b/ADBzUWRJ/vitalsanity-trello}{\textbf{\textit{enlace}}}) como en el tablero de \textbf{GitHub} (accesible desde este \href{https://github.com/users/cacs2-ua/projects/2}{\textbf{\textit{enlace}}}) asociado al repositorio de la aplicación.


\subsection{Importancia de Kanban para el desarrollo de la aplicación} 
El uso de Kanban ha permitido llevar una organización mucho más efectiva del proyecto. Desde un comienzo organice y definí a nivel general cada una de las tareas principales que quería implementar en la aplicación. Gracias a esto he podido distribuirme el tiempo de un modo mucho más eficaz puesto que en todo momento \textbf{sabía} \textbf{qué} era aquello que tenía que hacer, sabía \textbf{qué} era aquello en lo que me encontraba trabajando en el presente y \textbf{qué} era aquello que aún me quedaba por hacer.


\subsection{Resultado de la aplicación de Kanban}
Como ya se ha mencionado, \textbf{Kanban} se ha aplicado en dos tableros diferentes: por una parte, en el \textbf{tablero de Trello} se definían las tareas a realizar de un modo más genérico, sin entrar en mucho detalle; por otra parte, en el \textbf{tablero de Github} se colocaban cada una de las issues del proyecto, donde cada tarea definida en el \textbf{tablero de Trello} se dividía en varias \textbf{issues} dentro del tablero de \textbf{Github}. De este modo, las \textbf{issues} servían para especificar en más detalle el objetivo final de cada una de las tareas existentes dentro del \textbf{tablero de Trello}.


\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/metodologias/tablero-trello.png}
\caption{Tablero de Trello}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/metodologias/tablero-github.png}
\caption{Tablero de Github}
\label{AutoFirma ejemplo base:vv}
\end{figure}
Por último, destacar que en el tablero de Github se han definido \textbf{workflows} con el objetivo de automatizar el movimiento de las issues entre las diferentes columnas (por ejemplo, que cuando una \textbf{Pull request} cierre una issue, dicha issue se mueva automáticamente a la columna \textbf{\textit{"Done"}}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/metodologias/github-workflow.png}
\caption{Ejemplo de workflow}
\label{github-workflow:vv}
\end{figure}

\section{Reuniones periódicas de seguimiento}
Es importante destacar también las \textbf{reuniones periódicas} de seguimiento y con mi tutor de \textbf{TFG Carlos}.

Dichas reuniones han resultado de \textbf{gran utilidad} para revisar el \textbf{progreso}, \textbf{resolver dudas}, \textbf{recibir orientación} y asegurar que el proyecto se iba encaminando hacia el cumplimiento de sus objetivos vitales. Asimismo, todas estas reuniones han servido para detectar riesgos o desviaciones a tiempo y proponer correcciones o mejoras en cada sesión.



\chapter{Análisis de requisitos}

En este capítulo se va a efectuar una \textbf{Especificación de Requisitos Software (ERS)}. Para ello, se ha considerado como referencia el estándar \textbf{\textit{IEEE Práctica Recomendada para Especificaciones de Requisitos Software ANSI/IEEE 830, 1998}}.

Mencionar que el apartado de \textbf{Perspectiva del producto} ya ha sido tratado con detalle en la \textbf{Introducción}, razón por la cual no se incluirá dentro del análisis de requisitos para así evitar redundancia de información.

\section{Requisitos de hardware}

La aplicación se desarrolla para poder ser ejecutada tanto desde un ordenador como desde un dispositivo móvil.

Por otra parte, destacar que el servidor debe alojarse en máquinas que tengan la capacidad de manejar un
gran número de solicitudes de forma simultánea.

\section{Requisitos de software}

Estos requisitos hacen referencia los requerimientos a nivel de software de la aplicación.

La mayoría de estos requisitos ya han sido mencionados en el apartado de \textbf{Teconlogías y herramientas utilizadas}. Para no repetir la misma información ya expuesta en ese apartado, simplemente se mencionará a continuación algunos detalles extras:

\begin{itemize}
    \item La aplicación ha sido desarrollada utilizando \textbf{Java 21}, \textbf{maven 3.9.9} y \textbf{Spring boot 3.4.0}. La base de datos ha sido dockerizada usando una imagen de \textbf{Postgres}.
    \item  El correcto funcionmiento de la aplicación (incluyendo aquellas funcionalidades críticas como \textbf{AutoFirma}) ha sido probado en los siguientes \textbf{sistemas operativos}: \textbf{Windows, Linux y MacOS}.
\end{itemize}

\section{Requisitos a nivel de interfaz de aplización}

Para todas las vistas de la aplicación se establece un estilo \textbf{atractivo} y \textbf{minimalista}. Al tratarse de una aplicación médica, la información debe de mostrarse de forma \textbf{sencilla} y \textbf{efectiva} para asegurar de este modo la correcta comprensión por parte del usuario.

Las principales características identificativas a nivel de interfaz de \textbf{VitalSanity} son las siguientes: 

\begin{itemize}
    \item El color y las tonalidades \textbf{púrpuras}.
    \item El uso de \textbf{tarjetas} para mostrar la información.
    \item El uso de \textbf{bordes redondeados} para la mayoría de elementos visuales (formularios, botones, tarjetas,...)
    \item El color \textbf{carmesí} para los mensajes de error.
\end{itemize}

\section{Requisitos funcionales}

Los \textbf{requisitos funcionales} son aquellos que describen manera precisa las capacidades, comportamientos y servicios que un producto software debe ofrecer para satisfacer las necesidades del usuario. 

Los requisitos funcionales se han agrupado por tipo de usuario: \textbf{usuario general, guest user, profesional médico, paciente, centro médico, administrador}.

Cada uno de los requisitos funcionales se rpesenta en forma de tabla. En cada una de las tablas aparecen los siguientes elementos:

\begin{itemize}
    \item \textbf{Identificador - nombre :} elementos identificativos del requisito.
    \item \textbf{Prioridad del requisito:} importancia de la realización del requisito.
    \item  \textbf{Justificación:} justificación principal del requisito y breve resumen de en qué consiste.
    \item \textbf{Precondiciones}: son las condiciones o estados que deben cumplirse o existir antes de que pueda ejecutarse la funcionalidad asociada al requisito. Se han establecido cuatro niveles: \textit{\textbf{'Muy alta', 'Alta', 'Media' y 'Baja'}}.
    \item \textbf{Datos de entrada:} datos que deben de introducirse para que pueda tener lugar la funcionalidad asociada al requisito. No todos los requisitos necesitan de datos de entrada.
    \item \textbf{Descripción:} descripción detallada del requisito.
    \item \textbf{Pruebas de aceptación:} conjunto de criterios y casos de prueba diseñados para verificar que la implementación cumple satisfactoriamente con lo especificado en el requisito. 
    \item \textbf{Postcondiciones:} condiciones o resultados que deben alcanzarse y mantenerse una vez completada la ejecución de la funcionalidad definida por el requisito. 
    \item \textbf{Restricciones:} limitaciones que deben de cumplirse para que pueda tener lugar la funcionalidad asociada al requisito.
\end{itemize}

Los requisitos funcionales se han agrupado por tipo de usuario: \textbf{usuario genérico, profesional médico, paciente, centro médico, administrador}.

Se han identificado un total de \textbf{31} requisitos funcionales.

Las tablas de cada uno de los requisitos funcionales se han incluido en \hyperref[apendices:funcionales]{\textbf{\textit{este apartado}}} dentro del apéndice.



\section{Requisitos no funcionales}

Los requisitos no funcinales son propiedades globales de la aplicación los cuales determinan la calidad con la que deben ejecutarse las funciones, sin definir a nivel específico qué hace el sistema.

Se debe de tener en cuenta que estos requisitos cobrarían especial importancia una vez que la aplicación se pusiese en \textbf{producción} y saliese de forma oficial al mercado. 

Los principales requisitos no funcionales a considerar son los siguientes:

\begin{itemize}
    \item \textbf{Seguridad:} La aplicación debe de garantizar una seguridad muy robusta para así asegurar el correcto tratamiento de todos los datos sensibles de los usuarios de \textbf{VitalSanity}, así como el sistema de autorizaciones y el manejo de los datos médicos.
    \item \textbf{Rendimiento:} La aplicación debe de ser capaz de manejar un número muy elevado de solicitudes de forma paralela.
    \item \textbf{Fiabilidad:} La versión oficial de \textbf{VitalSanity} debe de incorporar la suficiente \textbf{resiliencia} para poder recuperarse de forma rápida y eficaz ante la presencia de fallos y errores.
    \item \textbf{Disponibilidad:} El sistema deberá de estar disponible las \textbf{veinticuatro horas} durante \textbf{los siete días de la semana}.
    \item \textbf{Mantenibilidad:} \textbf{VitalSanity} debe de contar con un equipo de desarrolladores los cuales aseguren un mantenimeinto efectivo de la aplicación, realizando cuando sea conveniente actualizaciones y parches de errores sobre el sistema.
    \item \textbf{Portabilidad: } \textbf{VitalSanity} será configurada para ser levantada mediante \textbf{Docker Compose}, lo cual facilita de forma evidente las tareas de \textbf{mantenimiento} de los desarrolladores al poder ejecutar la aplicación desde cualquier sistema.
\end{itemize}

Mencionar que dentro de los requisitos no funcionales también se incluyen los \textbf{requisitos legales}, los cuales se mencionan en el capítulo siguiente. Del mismo modo, los requisitos de \textbf{seguridad} se explican con mayor detalle en el capítulo que viene a continuación de los \textbf{requisitos legales}. Los aspectos de seguridad vienen explicados desde una perspectiva más orientada a la \textbf{implementación final} de la aplicación (se explican los aspectos de seguridad que se han implementado en la última versión de \textbf{VitalSanity}). El enorme peso tanto de los requisitos \textbf{legales} como de los aspectos de \textbf{seguridad} dentro de la aplicación ha hecho que ambos aspectos sean desarrollados en capítulos aparte.




\chapter{Requisitos legales}



\textbf{
\section{Cumplimiento de protección de datos}
}

La aplicación \textbf{VitalSanity} debe ajustarse estrictamente a la \textbf{normativa de protección de datos}, en especial al \textbf{RGPD} (Reglamento UE 2016/679) \citep{eu2016rgpd_html} y a la \textbf{LOPDGDD} (\textbf{Ley Orgánica 3/2018}) \citep{espana2018lopdgddboe_html}. Los datos de salud se consideran categorías especiales de datos que requieren protección reforzada, por lo que su tratamiento solo es lícito si se cuenta con una \textbf{base jurídica} adecuada y garantías elevadas de \textbf{seguridad}.


En este sentido, se debe respetar el derecho a la \textbf{confidencialidad} de la información médica de cada paciente: la \textbf{Ley de Autonomía del Paciente} (\textbf{Ley 41/2002}) \citep{espana2002autonomia_html} establece que nadie puede acceder a datos sanitarios sin la debida \textbf{legitimación} o \textbf{autorización} previa del afectado. \textbf{VitalSanity} debe aplicar el principio de \textbf{\textit{privacidad desde el diseño},} implementando medidas \textbf{técnicas} y \textbf{organizativas} robustas (\textbf{control de accesos, cifrado, seudonimización}, etc.) para asegurar la \textbf{integridad} y \textbf{confidencialidad} de la información. 

Igualmente, se tiene que facilitar que los pacientes ejerzan sus derechos \textbf{ARSOP} (\textbf{acceso}, \textbf{rectificación}, \textbf{supresión}, \textbf{oposición}, \textbf{limitación del tratamiento }y \textbf{portabilidad}) sobre sus datos personales. En concordancia con el \textbf{principio de responsabilidad proactiva del RGPD \citep{eu2016rgpd_html}}, será necesario llevar un \textbf{registro} de actividades de tratamiento, realizar \textbf{evaluaciones} de riesgo y \textbf{notificar} a la \textbf{autoridad de protección} de datos \textbf{cualquier brecha de seguridad} relevante. 

Por último, si la escala o naturaleza del tratamiento lo requiere (p. ej., tratamiento masivo de datos de salud), se deberá designar un \textbf{Delegado de Protección de Datos (DPO)\footnote{El Delegado de Protección de Datos (DPO) es la persona o entidad encargada de asesorar a la organización en materia de protección de datos, supervisar el cumplimiento del RGPD y la normativa nacional, y actuar como punto de contacto con las autoridades de control y los interesados.}} para supervisar el cumplimiento normativo.

 \textbf{Posibilidad de revocación: }Asimismo, destacar que el consentimiento informado \textbf{no es irrevocable}; el paciente tiene derecho a retirarlo en cualquier momento. En consecuencia, \textit{\textbf{VitalSanity}} debe habilitar la \textbf{revocación ágil} de permisos previamente concedidos. Si un paciente decide \textbf{desautorizal el acceso} a cierto profesional, la aplicación debe hacer \textbf{efectiva} esa revocación inmediatamente, notificando al sistema para que el \textbf{profesional} ya no pueda consultar la historia clínica. Este mecanismo de revocación es parte \textbf{integral} del \textbf{respeto} a la \textbf{autonomía del paciente} y debe ser tan \textbf{sencillo} como lo fue otorgar el permiso.

\section{  Consentimiento informado del paciente
}

Todo acceso o uso de información clínica a través de \textbf{VitalSanity} debe estar amparado por el \textbf{consentimiento informado} del paciente. La \textbf{Ley 41/2002} \citep{espana2002autonomia_html} reconoce el derecho del paciente a ser plenamente informado de cualquier actuación médica y a decidir libremente sobre la misma, exigiendo que su aceptación conste por escrito mediante un consentimiento expreso.

En línea con este mandato, \textbf{VitalSanity} debe asegurarse de obtener un \textbf{consentimiento específico}, libre e informado del paciente antes de acceder a su historial clínico o compartir sus datos, una vez que el \textbf{paciente} haya sido adecuadamente informado sobre las finalidades y el alcance de dicho acceso. 

Este consentimiento se materializará de forma digital: la aplicación deberá integrar mecanismos de \textbf{firma electrónica} para que el paciente firme los documentos de consentimiento de manera \textbf{segura y legalmente válida}. En particular, el uso de la herramienta oficial \textbf{AutoFirma} y de  \textbf{Cliente móvil @firma} permitirá recabar la \textbf{firma electrónica avanzada o cualificada} del \textbf{paciente}, de conformidad con el \textbf{Reglamento eIDAS} \citep{eu2014eidas_html}, otorgándole a ese consentimiento digital la misma \textbf{validez jurídica} que tendría en papel.

De esta forma, se garantiza \textbf{la autenticidad del consentimiento} y se respeta plenamente \textbf{la autonomía del paciente}, dado que ningún profesional ajeno a su atención podrá acceder a sus datos de salud sin la debida autorización del propio paciente.



\textbf{
\section{Historia clínica (gestión, acceso y custodia)}
}

\textbf{VitalSanity} debe gestionar la \textbf{historia clínica digital} de cada paciente cumpliendo con los requisitos legales en materia de \textbf{documentación sanitaria}. La historia clínica es el conjunto de documentos e información relativa a la salud de un paciente, y tiene carácter \textbf{confidencial}. Solo el personal sanitario directamente implicado en la asistencia tiene permiso para acceder a ella, tal como señala la \textbf{Ley 41/2002} \citep{espana2002autonomia_html}.

En consecuencia, la aplicación debe garantizar que únicamente los \textbf{profesionales autorizados} puedan \textbf{consultar} o \textbf{modificar} el historial clínico, implementando \textbf{controles de acceso estrictos} y \textbf{registrando} toda actividad (accesos, incorporaciones de datos, etc.) para mantener \textbf{trazabilidad} y detectar \textbf{accesos indebidos}. 

Además, \textbf{VitalSanity} debe preservar la \textbf{integridad} y \textbf{autenticidad} de la información clínica: cualquier dato incorporado al historial debe permanecer \textbf{completo}, \textbf{fidedigno} y \textbf{asociado} al profesional que lo aportó, igual que ocurriría en un \textbf{expediente médico tradicional}.

Por otro lado, la \textbf{custodia} legal de la\textbf{ historia clínica} recae en el proveedor sanitario (hospital, clínica o profesional) que genera la documentación. \textbf{VitalSanity}, como herramienta, debe facilitar el cumplimiento de dichas obligaciones de custodia sin suplantarlas. 

Los \textbf{centros sanitarios} tienen el deber de \textbf{archivar} y \textbf{conservar} la documentación clínica en condiciones adecuadas de \textbf{seguridad}, al menos durante \textbf{cinco años} desde la fecha de alta de cada proceso asistencial (o plazos mayores según normativas autonómicas o del tipo de documento). La aplicación deberá apoyar esta conservación segura de los datos en \textbf{formato electrónico}, garantizando su disponibilidad cuando se requiera para la \textbf{asistencia} y su \textbf{protección} frente a \textbf{pérdidas} o \textbf{alteraciones}. 

Asimismo, debe respetarse el criterio de \textbf{unidad de la historia clínica}: cada paciente ha de tener un \textbf{registro unificado} por \textbf{centro sanitario} o por \textbf{profesional médico}, que incorpore todos sus episodios asistenciales relevantes. \textbf{VitalSanity} debe por tanto \textbf{integrarse} con los sistemas de información sanitarios existentes para \textbf{evitar la fragmentación} de la información, asegurando que el historial clínico digital que maneja sea \textbf{completo} y esté \textbf{sincronizado} con la \textbf{historia oficial} del centro. 

Finalmente, se debe recordar que el \textbf{paciente} tiene \textbf{derecho} a acceder a la información de su \textbf{propia historia clínic}a (salvo excepciones legales puntuales); la aplicación debe facilitar este derecho, cumpliendo en todo momento con las garantías de \textbf{seguridad} y \textbf{confidencialidad} previstas.

\section{Interoperabilidad entre sistemas sanitarios}

La legislación sanitaria española promueve la \textbf{interoperabilidad} de los sistemas clínicos, con el fin de garantizar la continuidad asistencial del paciente a través de \textbf{distintos niveles} y \textbf{centros de atención}. La propia \textbf{Ley 41/2002} \citep{espana2002autonomia_html}, en una disposición adicional, instó a desarrollar \textbf{sistemas compatibles} que permitieran el \textbf{uso compartido} de la \textbf{historia clínica} del \textbf{paciente} entre distintos establecimientos sanitarios, evitando duplicidades diagnósticas o pruebas innecesarias. 

Más adelante, la \textbf{Ley 16/2003 de Cohesión y Calidad del SNS} \citep{espana2003sns_boe_html}, en su \textbf{artículo 56}, encomendó al \textbf{Ministerio de Sanidad} coordinar con las \textbf{Comunidades Autónomas} los mecanismos de intercambio electrónico de información de salud, de forma que tanto los \textbf{profesionales sanitarios} que atienden al \textbf{paciente} como el propio \textbf{paciente} puedan acceder a los datos clínicos precisos para su asistencia, garantizando en todo caso la \textbf{confidencialidad} e \textbf{integridad} de la información.

En aplicación de este marco, se aprobó el \textbf{Real Decreto 1093/2010} \citep{rd1093_2010_html}, que establece el conjunto mínimo de datos comunes que deben contener ciertos informes clínicos (informes de alta, historias resumidas, etc.) en todo el \textbf{Sistema Nacional de Salud}.

Dicho estándar unifica el formato básico de la información para facilitar su intercambio entre los distintos servicios de \textbf{salud autonómicos}. 

En este contexto, \textbf{VitalSanity} debe ser capaz de \textbf{integrarse} e \textbf{interoperar} con otros sistemas sanitarios, tanto \textbf{públicos} como \textbf{privados}. Por un lado, la aplicación ha de adoptar los \textbf{estándares nacionales} mencionados (\textbf{estructuras de datos}, \textbf{terminologías clínicas}, \textbf{formatos de intercambio como HL7/FHIR} \citep{hl7_fhir_html}, etc.) para comunicarse eficazmente con la historia clínica digital de los servicios de salud (este aspecto se ha dejado para dejado como trabajo futuro). 

De esta forma, \textbf{VitalSanity} debe de cumplir con el hecho de que en \textbf{España} \textbf{no existen impedimentos legales} para el intercambio de información clínica entre el sector \textbf{público} y el \textbf{privado}. Para ello siempre debe de mediar el \textbf{consentimiento previo del paciente}. 

Esto implica que \textbf{VitalSanity} puede, con la \textbf{autorización} explícita del paciente, acceder a datos provenientes de diferentes fuentes (por ejemplo, historiales de un hospital \textbf{público} y de una clínica \textbf{privada}) y presentarlos de forma \textbf{unificada} al \textbf{profesional} o al propio \textbf{paciente}. La aplicación debe, por tanto, estar preparada para \textbf{respetar los protocolos de interoperabilidad} vigentes (p. ej. servicios web del Nodo de Intercambio del \textbf{SNS}) y a la vez \textbf{garantizar la seguridad} en esas transferencias de datos (\textbf{cifrado de las comunicaciones}, \textbf{autenticación de los sistemas que intercambian información}, etc.), de acuerdo con las \textbf{exigencias legales} y de las \textbf{políticas} de cada institución involucrada.




{
\section{Esquema Nacional de Seguridad (ENS):}
} 
Dada la naturaleza sensible de los datos de salud, es obligatorio aplicar medidas de seguridad de nivel elevado según el \textbf{ENS} cuando la aplicación se integra en el \textbf{sector público} o maneja información de \textbf{pacientes} de \textbf{servicios públicos}. El \textbf{ENS}, establecido por el \textbf{RD 3/2010} \citep{rd3_2010_html} (actualizado por \textbf{RD 311/2022} \citep{rd311_2022_html}), proporciona un marco de buenas prácticas de seguridad orientado a proteger la información en las administraciones públicas y sus sistemas asociados. \textbf{VitalSanity} debe alinearse con estas exigencias, implementando controles como \textbf{autenticación robusta} (ej. \textbf{autenticación con certificado digital}), \textbf{gestión estricta} \textbf{de} \textbf{permisos de usuario}, \textbf{cifrado de las comunicaciones}, \textbf{registro y monitorización de accesos}, \textbf{planes de respuesta ante incidentes}, \textbf{copias de seguridad}, entre otras medidas. Cumplir con el \textbf{ENS} garantiza un \textbf{nivel de protección} acorde al exigido en el \textbf{ámbito sanitario público} y refuerza la \textbf{confianza} en la aplicación.

\section{Reglamento eIDAS y firma electrónica}
 El \textbf{Reglamento (UE) n.º 910/2014 \textbf{eIDAS} sobre identificación electrónica y servicios de confianza}, junto con la \textbf{Ley 59/2003} \citep{espana2003firma_html} española de firma electrónica, establecen las condiciones bajo las cuales una \textbf{firma electrónica avanzada o cualificada} tiene el mismo valor legal que la \textbf{firma manuscrita} en documentos oficiales. En el contexto de \textbf{VitalSanity}, esto implica que los \textbf{consentimientos informados} y demás documentos clínicos \textbf{firmados digitalmente} a través de la aplicación (por ejemplo, utilizando certificados digitales reconocidos mediante \textbf{AutoFirma}) gozarán de \textbf{plena validez jurídica}. La plataforma debe, por tanto, utilizar \textbf{certificados} y \textbf{métodos de firma electrónica} que cumplan todos estos estándares. De esta forma, tanto pacientes como profesionales pueden firmar electrónicamente \textbf{consentimientos o autorizaciones}, y los profesionales médicos pueden firmar \textbf{informes}, todo con la certeza de que dichos actos tienen \textbf{eficacia legal y probatoria} equivalente a los tradicionales en papel.
 
 
\section{Consideraciones éticas}
 Más allá del cumplimiento legal, la gestión de datos de salud conlleva \textbf{importantes responsabilidades éticas}. \textbf{VitalSanity} debe adherirse a los \textbf{principios éticos} que rigen la relación \textbf{profesional-paciente} y el uso de información sensible. Esto incluye el respeto estricto del \textbf{secreto profesional} y la \textbf{privacidad} del \textbf{paciente}: toda persona que acceda a datos mediante la aplicación debe estar sujeta a \textbf{deberes de confidencialidad profesionales}. Igualmente, el principio de \textbf{autonomía del paciente} exige que las decisiones sobre el uso de sus datos estén centradas en su \textbf{consentimiento} y \textbf{preferencias}, evitando cualquier forma de \textbf{coerción} o\textbf{ uso indebido} de la información. La \textbf{beneficencia} y la \textbf{no maleficencia} han de guiar el diseño de la herramienta: todas las funcionalidades de \textbf{VitalSanity}  deben buscar \textbf{mejorar} la calidad de la atención sin causar perjuicios ni discriminar pacientes. Es altamente aconsejable que \textbf{VitalSanity} se desarrolle bajo un enfoque puro de\textbf{ \textit{ética de datos}}, asegurando \textbf{transparencia} en cómo se usan los datos, \textbf{minimizando la recopilación} a solo lo necesario y garantizando un uso \textbf{justo} y \textbf{responsable} de la información. 



\chapter{Aspectos de seguridad}


\section{Seguridad en la Firma Digital de Documentos}
La autenticación de usuarios en \textbf{VitalSanity} se realiza mediante certificados digitales \textbf{X.509}, integrados en la plataforma a través de \textbf{Spring Security} y aprovechando la integración \textbf{nativa} de Spring Security con el protocolo \textbf{X.509}. Cada usuario  debe \textbf{identificarse con un certificado digital reconocido} y su correspondiente clave privada, lo que proporciona un nivel alto de seguridad en la verificación de la identidad. En la práctica, esto implica que el sistema solo permite el acceso a quienes posean un certificado válido emitido por una Autoridad de Certificación de confianza (por ejemplo, el DNIe o certificados de la FNMT), aumentando significativamente la protección frente a accesos no autorizados o suplantación de identidad.


Cabe destacar de que en la aplicación también se ha incluido la opción tradicional de iniciar sesión con email y contraseña. Esto se ha realizado para poder realizar las pruebas pertinentes en la aplicación durante desarrollo (debido a que se necesitaba crear múltiples usuarios y trabajar con múltiples usuarios y roles para poder probar todas las funcionalidades de la aplicación). Cabe destacar de que en producción se eliminaría esta opción de iniciar sesión con email y contraseña, imponiendo a los usuarios el autenticarse mediante un certificado digital válido para así defenderse de forma robusta frente a accesos no autorizados o suplantación de identidad, consiguiendo de esta manera una seguridad muy potente a la hora de acceder al sistema.

Por otra parte, la plataforma verifica rigurosamente la validez del certificado presentado en cada inicio de sesión. Este proceso incluye la comprobación de que el certificado \textbf{no haya sido revocado} y que siga siendo \textbf{plenamente válido para identificar a su propietario}. Solo tras superar todas estas verificaciones, Spring Security \textbf{autentica al usuario} y le concede acceso a las funciones de la aplicación. Este mecanismo de autenticación basada en certificados digitales ofrece garantías de seguridad equiparables a la autenticación de múltiples factores, pues requiere algo que el usuario \textbf{posee} (su certificado y clave privada) y algo que el usuario \textbf{es} (su identidad avalada por el certificado). Gracias a ello, VitalSanity asegura que únicamente personas autorizadas puedan acceder a datos sensibles, evitando accesos indebidos.


\section{Seguridad en la Firma Digital de Documentos}
VitalSanity incorpora el uso de herramientas oficiales de \textbf{firma electrónica} proporcionadas por el Gobierno de España para garantizar la autenticidad e integridad de los documentos clínicos generados en la plataforma. En particular, se utiliza la aplicación \textbf{AutoFirma}, así como su \textbf{cliente móvil @firma}, para la firma digital de autorizaciones de pacientes y de informes médicos emitidos por los profesionales sanitarios. AutoFirma permite realizar la firma electrónica de documentos cumpliendo con estándares abiertos, \textbf{garantizando la interoperabilidad y la seguridad en las transacciones electrónicas}. De este modo, cada vez que un médico emite un informe o un paciente otorga una autorización en VitalSanity, el documento correspondiente es firmado digitalmente mediante un certificado electrónico reconocido, usando AutoFirma en entornos de escritorio o Cliente @firma en dispositivos móviles.


Como ya se ha mencionado en ocasiones anteriores, el empleo de \textbf{certificados digitales reconocidos} en la firma confiere a los documentos un nivel muy alto de protección: \textbf{validez}, puesto que la firma con certificado digital se ajusta a la normativa legal vigente y tiene pleno reconocimiento jurídico, equiparándose a la firma manuscrita; \textbf{integridad}, porque cualquier alteración posterior invalida la firma digital; \textbf{autenticidad}, porque vincula criptográficamente la identidad del firmante al documento; y \textbf{no repudio}, ya que el firmante no puede negar la autoría de la firma. Estas propiedades son cruciales tratándose de autorizaciones sanitarias e informes médicos, que requieren la máxima fiabilidad y validez legal. Cabe destacar que las soluciones de la suite @firma están alineadas con la normativa española y europea de firma electrónica (eIDAS), por lo que las firmas generadas a través de AutoFirma gozan de reconocimiento legal equivalente a la firma manuscrita. VitalSanity garantiza que todos los documentos críticos se firman digitalmente de forma segura y \textbf{formalmente válida}, fortaleciendo la confianza en la documentación clínica intercambiada a través de la aplicación.

\section{Protección de los Datos en el Almacenamiento}
En \textbf{VitalSanity}, los datos sensibles (historias clínicas, informes, consentimientos firmados, imágenes médicas, etc.) se almacenan de forma segura utilizando \textbf{Amazon Web Services (AWS)}, concretamente en \textbf{buckets de Amazon S3} dedicados. Estos repositorios de almacenamiento en la nube están configurados como privados y se han implementado controles estrictos para su acceso. La aplicación nunca expone directamente los contenidos almacenados; en su lugar, utiliza \textbf{URLs prefirmadas} de S3 para cualquier acceso a documentos. Una URL prefirmada es un enlace temporal generado por la aplicación que concede acceso limitado a un objeto (archivo) específico en S3, sin necesidad de revelar credenciales o permisos permanentes de AWS. Estas URLs prefirmadas incorporan \textbf{tokens de seguridad y expiración}: solo el usuario autorizado puede utilizar el enlace, y además este caduca tras un intervalo breve predefinido, impidiendo accesos posteriores no autorizados. Gracias a este mecanismo, si un tercero intenta acceder directamente a los buckets de S3 sin un enlace válido, la solicitud será denegada. En esencia, las URLs prefirmadas actúan como pases de acceso de un solo uso y con vigencia limitada, garantizando que los datos clínicos almacenados solo sean accesibles para quienes tengan derechos y solo durante el tiempo.


Por otro lado, VitalSanity protege la \textbf{confidencialidad de los datos en reposo} mediante cifrado robusto administrado con un \textbf{gestor de claves (KMS) personalizado a partir de una clave CMK}. Para todas las autorizaciones e informes almacenados en \textbf{AWS S3}, se habilita el \textbf{cifrado del lado del servidor con AWS}. Destacar que \textbf{AWS-KMS} es especialmente útil en entornos de producción.

Asimismo, se ha asegurado en todo momento de cumplir con el \textbf{Principio de Mínimos Privilegios} , definiendo \textbf{roles IAM} con \textbf{políticas de acceso estrictas} (aspecto que será tratado con más detalle en el apartado de \textbf{Detalles de implementación)}.

Por último, destacar que los datos se almacenan en \textbf{España} (se configura la región del bucket para ello). Con esto se asegura el cumplimiento de la normativa vigente al tratarse \textbf{AutoFirma} y \textbf{Cliente móvil @firma} de aplicaciones desarrolladas por el Gobierno de España.

Todo este conjunto de medidas asegura que toda la información médica en la aplicación quede robustamente protegida,  alcanzando un nivel de seguridad acorde a la naturaleza crítica de dichos datos.

\section{Detalles generales de seguridad}
Como es evidente, también se han contemplado aquellos aspectos de seguridad más básicos y comunes a toda aplicación software como por ejemplo el uso de \textbf{middlewares} para proteger las rutas de la aplicación tanto por autenticación como por rol de usuario.






\chapter{Diseño}

\section{Diagrama EER}

Para la representación del modelo de datos de la aplicación se ha realizado un diagrama \textbf{entidad-relación}.


\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/diseño/diagrama-EER/eer1-tipos -usuario.png}
\caption{Modelado de los tipos de usuario de la aplicación}
\label{Modelado de los tipos de usuario de la aplicación:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/diseño/diagrama-EER/eer2-modelado-autorizacion.png}
\caption{Modelado del proceso de autorización al historial médico centralizado}
\label{Modelado del proceso de autorización del historial del paciente:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.375\textheight, keepaspectratio]{img/diseño/diagrama-EER/eer3-informes.png}
\caption{Modelado de los informes del historial médico centralizado}
\label{AutoFirma ejemplo base:vv}
\end{figure}

En términos específicos se puede destacar lo siguiente:
\begin{itemize}
    \item Todas las entidades principales (\textbf{Usuario}, \textbf{Solicitud Autorización}, \textbf{Informe} y \textbf{Documento}) tienen un campo \textbf{uuid} como \textbf{clave alternativa}. El \textbf{uuid} permite identificar a todas estas entidades de forma \textbf{inequívoca} y sin exponer datos relevantes o sensibles de las mismas. Por esta razón, en los parámetros de las \textbf{URL} de la aplicación siempre se ha hecho uso de los \textbf{uuid} en lugar de los \textbf{id} autogenerados. Asimismo, también se usan \textbf{uuid} para nombrar a los archivos correspondientes a las autorizaciones e informes firmados. La razón por la cual se mantienen los \textbf{id} autogenerados como clave \textbf{primaria} es debido a que estos \textbf{id} son los utilizados por \textbf{Spring boot} para modelar correctamente las entidades de la base de datos y sus relaciones mediante \textbf{JPA}.
    \item  Las dos relaciones de \textbf{autorización} y \textbf{desautorización} entre \textbf{Paciente} y \textbf{Profesional} son \textbf{exluyentes} entre sí. A nivel de base de datos se ha implementado de tal forma que cuando un paciente \textbf{autoriza} a un profesional médico, dicho profesional médico se mueve desde la lista de \textbf{profesionales desautorizados} (si estuviese previamente desautorizado) a la lista de \textbf{profesionales autorizados del paciente} (y lo mismo cuando un paciente \textbf{autoriza} a un \textbf{profesional médico}). Destacar que las relaciones de \textbf{muchos a muchos} se establecen en \textbf{JPA} mediante una \textbf{join table}.
    \item Destacar también que en un diagrama \textbf{EER} no siempre aparecen las \textbf{claves} \textbf{primarias} y las \textbf{claves alternativas} destacadas con su abreviatura entre paréntesis. Aquí he decidio hacerlo de este modo para que el diagrama pueda entenderse mejor y para que pueda ser visto con mayor claridad en el PDF.
\end{itemize}

\section{Prototipado}
Antes de comenzar con la implementación del proyecto, se realizó un prototipo de la aplicación haciendo uso de la herramienta \textbf{Figma}\footnote{Enlace de la página oficial de Figma: \textbf{\textit{https://www.figma.com/}}}. Como ya se comentó en el apartado de \textbf{Tecnologías utilizadas}, el haber realizado los \textbf{mock ups} ha permitido durante el \textbf{desarrollo} de \textbf{VitalSanity} el tener una idea mucho más clara en todo momento acerca de a qué se tenía que aproximar la versión \textbf{final} de la aplicación.


Se puede acceder al proyecto de Figma con los mockups desde este \href{https://www.figma.com/design/C6HbUzbPMusPoAc5d3a4XL/VitalSanity-Mockups?node-id=0-1t=LxyKeYVzMwgrq6Td-1}{\textbf{enlace}}.






\chapter{Implementación}

En este apartado se describirán los detalles más significativos e importantes a nivel de código que presenta la aplicación desarrollada



\section{Modelo Vista Controlador}

Se ha empleado una arquitectura \textbf{MVC} para desarrollar VitalSanity. En Springboot, esta arquitectura se materializa de la siguiente manera:


\begin{enumerate}
    \item \textbf{Modelo}
    \begin{itemize}
        \item Representa la \textbf{lógica de negocio} y los \textbf{datos} de la aplicación: entidades JPA, DTOs, servicios, repositorios. 
        \item Encapsula el acceso a la base de datos y las reglas de negocio, aislando el estado de la aplicación de la presentación. 
    \end{itemize}


    \item \textbf{Vista}
    \begin{itemize}
        \item Define la \textbf{interfaz de usuario}, en este caso, plantillas Thymeleaf.
        \item Se encarga únicamente de mostrar los datos que recibe del controlador y de capturar la interacción del usuario. 
    \end{itemize}


    \item \textbf{Controlador}
    \begin{itemize}
        \item Gestiona las \textbf{peticiones HTTP} entrantes (\textit{@Controller} / \textit{@RestController}). 
        \item Invoca los servicios del modelo para procesar datos, y devuelve la vista adecuada junto con el \textbf{modelo de datos} (un \textit{Model} o un objeto JSON). 
    \end{itemize}
\end{enumerate}


Las principales ventajas de aplicar el patrón \textbf{MVC} son la \textbf{reutilización, la testabilidad, la escalabilidad y el cumplimiento del principio de Separación de responsabilidades} (Cada capa del sistema presenta una única función bien definida, de forma que nunca se mezclan la lógica de negocio, la lógica de acceso a datos y la lógica de presentación).


\section{Autenticación con certificado digital}

\subsection{Configuración del conector extra HTTPS  }

\begin{itemize}
\item La clase \textit{\textbf{config/AdditionalHttpsConnectorConfig}}, anotada con \textit{\textbf{@Configuration}}, se encarga de añadir un conector HTTPS adicional al servidor embebido de Tomcat en Spring Boot, configurando tanto el almacén de claves del servidor (keystore) como el almacén de confianza (truststore, el cual contiene los certificados de autoridad) para habilitar  TLS mutuo con verificación obligatoria del certificado de cliente. 
\item En primer lugar, se inyectan mediante \textbf{\textit{@Value}} las propiedades relativas al almacén de claves del servidor (ruta, contraseña, tipo y alias) y al almacén de confianza para validar certificados de cliente. A través del método \textit{\textbf{servletContainer(}}) se crea un \textbf{\textit{TomcatServletWebServerFactory}} al que se agrega un conector personalizado definido en \textbf{\textit{createSslConnector()}}. Este conector escucha en el puerto 8059, fuerza el esquema \textbf{\textit{https}} y activa SSL en el protocolo \textbf{\textit{Http11NioProtocol}}. 
\item A continuación, se construye un \textbf{\textit{SSLHostConfig}} que impone la verificación de certificado de cliente (\textbf{\textit{required}}),  incorpora una lista de revocación de certificados (CRL), y se asocia el truststore para validar las cadenas de certificado entrantes. 
\item Despúes, se crea un \textbf{\textit{SSLHostConfigCertificate}} de tipo RSA, que carga el keystore del servidor con sus credenciales y alias, y se añade a la configuración SSL del conector. De este modo, la aplicación autentica de forma mutua tanto al cliente como al servidor antes de procesar cualquier petición relacionada con la autenticación por certificado digital. 
\end{itemize}

\subsection{Filtro de preautenticación X.509}

\begin{itemize}
    \item La clase \textbf{\textit{SecurityConfig}} configura, con la máxima prioridad, una cadena de filtros dedicada exclusivamente a la autenticación mediante certificado digital en el endpoint \textbf{\textit{/login/certificate}}. 
    \item En su método \textbf{\textit{certificateFilterChain}}, se crea un extractor de sujeto X.509 \\(\textbf{\textit{SubjectDnX509PrincipalExtractor}}) que extrae el NIF del DN del certificado mediante una expresión regular, y se instancia un \textbf{\textit{X509AuthenticationFilter}} al que se le asigna dicho extractor, un manejador de éxito \\(\textbf{\textit{CertificateAuthenticationSuccessHandler}}) y se indica que, si la autenticación por certificado falla, continúe la cadena de filtros sin interrumpir la petición. 
    \item Para validar las credenciales preautenticadas del certificado se utiliza un \textbf{\textit{PreAuthenticatedAuthenticationProvider}} conectado a un \textbf{\textit{UserDetailsService}} personalizado (CertificateUserDetailsService), envolviéndolo en un \textbf{\textit{ProviderManager}} que actúa como \textbf{\textit{AuthenticationManager}} del filtro. 
    \item Finalmente, el filtro se añade al \textbf{\textit{HttpSecurity}} limitado únicamente al patrón \textbf{\textit{/login/certificate}}, se establece una política de creación de sesión “si es necesario” y, dado que en entorno de desarrollo he empleado un certificado SSL autogenerado (el cual impide al navegador abrir el selector de certificados bajo protección CSRF), se deshabilita la protección CSRF para este único endpoint, permitiendo así la extracción y validación del certificado sin conflictos, mientras que todas las peticiones quedan autorizadas tras este filtro.
    \item Cabe destacar que en producción no sería necesario desactivar la protección CSRF para ese endpoint puesto que en producción se estaría utilizando un certificado SSL de confianza.

\end{itemize}

\subsection{Servicio de detalles de usuario  }

\begin{itemize}
    \item La clase \textbf{\textit{UserDetailsService}} se encarga de buscar en la base de datos un usuario cuyo NIF/NIE coincida con el extraído del certificado digital correspondiente. En el caso de que dicho usuario exista, crea un UserDetails con rol \textbf{\textit{ROLE\_USER}}; en caso contrario, se lanza la excepción \textbf{\textit{UsernameNotFoundException}}.
    \item El \textbf{\textit{UserDetails}} es necesario para que \textbf{\textit{Spring Security}} pueda completar el paso de pre-autenticación X.509 y poblar el principal de la sesión de seguridad.
\end{itemize}

\subsection{Manejador de éxito de autenticación  }

La clase \textbf{\textit{config/CertificateAuthenticationSuccessHandler}} se encarga de obtener el NIF/NIE extraído y de consultar el repositorio de usuarios. Si no hay coincidencias, redirige a \textbf{\textit{/login?error=usuario\_no\_encontrado}}. Si hay coincidencia, entonces se termina de autenticar al usuario y se completa de forma exitosa el proceso de autenticación.


\section{Firma y cofirma de los documentos PDF}

\subsection{Generación del PDF a partir de iText}
La clase \textbf{\textit{service/autofirma/GenerarPdf.java}} se encarga de generar el PDF que debe ser \textbf{firmado} o \textbf{cofirmado} a partir de los datos recopilados de un formulario. Los datos del formularios son recogidos y se crea un \textbf{PDF} con un formato acorde y atractivo y en el que incluye toda la información relevante en materia de protección de datos, aludiendo en todo momento tanto a la \textbf{LOPDGDD } \citep{espana2018lopdgddboe_html} y al \textbf{RGPD} \citep{eu2016rgpd_html}.

\subsection{autoscript.js}
El fichero \textbf{\textit{autoscript.js}} representa la “biblioteca de despliegue” del Cliente @firma: al cargarlo dentro del \textbf{\textit{<head>}} de un HTML, se logra aportar un objeto global AutoScript que expone toda la API JavaScript necesaria para invocar todas operaciones de firma disponibles(firma simple, cofirma, contrafirma, firma de lotes, selección de certificado, etc.), encapsulando de este modo los detalles de comunicación con la aplicación nativa. Este fichero forma parte de la API oficial de @firma y puede obtenerse directamente en el repositorio de GitHub de @firma


\subsection{signer-invoke.js}
El fichero \textbf{\textit{signer-invoke.js}} orquesta de manera genérica el flujo de firma y co-firma de documentos en la interfaz web. 

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/carga-de-auto-script-y-de-signer-invoke.png}
\caption{Carga de autoscript.js y de signer-invoke.js}
\label{carga-de-auto-script-y-de-signer-invoke:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/carga-app-autofirma.png}
\caption{Carga de la app de AutoFirma/Cliente móvil @firma}
\label{carga-app-autofirma:vv}
\end{figure}


Al pulsar sobre el botón correspondiente a “Firmar”, se recogen los datos del formulario, se llama al método de controlador correspondiente para que se devuelva un PDF en Base64 y se invoca a \textbf{\textit{AutoScript.sign(...)}} para que se abra AutoFirma (o su versión para móvil), se abra el selector de certificados y el usuario pueda firmar el fichero correspondiente. 


El método \textit{AutoScript.sign()} recibe los siguientes parámetros en el siguiente orden:

\begin{itemize}
    \item Cadena con los datos del PDF a firmar, codificada en Base64. 
    \item El algoritmo criptográfico con el que se genera la firma. En este caso, \textbf{SHA-512} para el hash y \textbf{RSA} para la \textbf{firma asimétrica} (\textbf{SHA512withRSA}).
    \item El formato de la firma. '\textbf{PAdES}' indica que se produce una \textbf{firma embebida} en PDF conforme al perfil \textbf{PAdES}. \textbf{PAdES} es el \textbf{perfil} de firma electrónica avanzada para documentos \textbf{PDF} que garantiza la \textbf{integridad}, \textbf{autenticidad}, \textbf{validez} y \textbf{no repudio} a largo plazo de la \textbf{firma incrustada} conforme a la norma \textbf{ETSI EN 319 142}.
    \item Un objeto para pasar parámetros específicos al proceso de firma (p. ej. \textbf{políticas}, \textbf{visibilidad de la firma}, \textbf{posición}, etc.). Con \textbf{null} se usan los valores por defecto. 
    \item Función que se invoca cuando la firma termina correctamente (\textbf{callback de éxito}). Recibe como argumentos: La \textbf{firma resultante} en \textbf{Base64}, El \textbf{certificado} del firmante en \textbf{Base64}, Un objeto \textbf{extraInfo} (por ejemplo, nombre original del fichero).
    \item Función que se invoca si ocurre \textbf{algún fallo} durante la firma (\textbf{callback de error}). Recibe como argumentos: \textbf{un código o texto} que identifica el tipo de error y un \textbf{mensaje descriptivo} del error.
\end{itemize}

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/autoscript-sign.png}
\caption{AutoScript.sign}
\label{autoscript-sign:vv}
\end{figure}

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/selector-de-certificados.png}
\caption{Selector de certificados de AutoFirma}
\label{selector-de-certificados:vv}
\end{figure}

Durante el tiempo en el que se está completando  la firma se muestra por pantalla un \textbf{overlay} con el mensaje \textbf{'Procesando... por favor, espere'} para indicarle al usuario que se está procesando la operación de firma.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/overlay-autofirma.png}
\caption{Overlay para el procesamiento de la firma}
\label{overlay-autofirma:vv}
\end{figure}

Tras recibir la firma en Base64, se envía de nuevo al servidor el documento firmado: Por una parte, en la base de datos se almacenan los siguientes metadatos asociados al documento: nombre, uuid (aleatorio), s3Key (aws), el tipo dearchivo, el tamaño y la fecha de creación.
Por otra parte, el documento completo se sube a aws a partir de la S3 key correspondiente. Se utiliza el uuid para nombrar al documento dentro del bucket para así evitar que se revele metainforación asociada al nombre real del documento.  


Una vez que se ha almacenado los metadatos del fichero y se ha subido a aws, se le muestra al usuario un enlace para poder descargar el PDF recién firmado. Dicho enlace contiene una URL prefirmada para acceder de forma privada al contenido del bucket (todo lo asociado a AWS se explica más adelante con más detalle).

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/mensaje-descarga-firma.png}
\caption{Mensaje con el enlace de descarga para la firma}
\label{mensaje-descarga-firma:vv}
\end{figure}

Se puede verificar que la firma del PDF es válida abriendo el propio PDF con \textbf{Adobe Acrobat Reader}

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/pdf-firmado.png}
\caption{PDF firmado}
\label{mensaje-descarga-firma:vv}
\end{figure}


El proceso de cofirma es análogo al proceso ya descito de firma normal. Lo único que cambia es la llamada al fichero AutoScript.js, que ahora pasa a ser \textbf{\textit{AutoScript.cosign(...)}}  (se cambia la función \textbf{sign(...)} por \textbf{cosign(...)}).



De igual modo, cuando el paciente cofirma, se recupera del servidor el PDF ya firmado, se invoca a \textbf{\textit{AutoScript.cosign(...) }}para añadir la firma sin sobreescribir la firma ya establecida del profesional médico y sube el resultado para posteriormente mostrar el enlace de descarga del \textbf{PDF cofirmado} . 

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/autoscript-cosign.png}
\caption{AutoScript.cosign}
\label{autoscript-cosign:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.4\textheight, keepaspectratio]{img/pdf-cofirmado.png}
\caption{PDF cofirmado (con dos firmas)}
\label{pdf-cofirmado:vv}
\end{figure}

Este flujo descrito de \textbf{AutoFirma} se repite de forma análoga para todas las siguientes funcionalidades:

\begin{itemize}
    \item Firma de la autorización de acceso por parte del profesional médico.
    \item Cofirma de la autorización de acceso por parte del paciente.
    \item     Firma de un nuevo informe subido por un profesional médico.
    \item Firma de un nuevo informe editado por un profesional médico
\end{itemize}
Cabe destacar que cualquiera de estas acciones puede ser realizada tanto con \textbf{AutoFirma} como con \textbf{Cliente móvil @firma }.


\subsection{Cliente móvil @firma}


Para conseguir que las funcionalidades de firma y cofirma sigan funcionando en dispositivos móviles, ha sido necesario realizar una serie de cambios \textbf{importantes} y \textbf{no triviales}.

En primer lugar, se ha sustituido el canal de comunicación por sockets (el modo por defecto de AutoFirma) por el mecanismo de "servidor intermedio".

Como se explica en el \textbf{Manual Integrador de AutoFirma}, en un ordenador el JavaScript \textit{autoscript.js} puede abrir un \textit{socket} local  y comunicarse directamente con la aplicación nativa \textbf{AutoFirma} que está escuchando en ese puerto. Este canal bidireccional es rápido y no atraviesa la red, por lo que en en un ordenador resulta la opción más conveniente. 

No obstante, en dispositivos móviles, esta técnica deja de funcionar debido a dos motivos principales:

\begin{itemize}
    \item \textbf{Restricciones de los navegadores y del propio sistema operativo:} Ni \textbf{Android} ni \textbf{iOS} permiten que una página web abra un puerto de escucha local ni que una app nativa exponga un \textit{socket} accesible desde el navegador. El único puente soportado es lanzar la app nativa mediante un esquema de URL \textit{}\textbf{\textit{afirma://…}} y, después, volver al navegador a través de una navegación HTTP/S. 
    \item \textbf{Carencia de la JVM y de la librería de sockets en las versiones móviles del cliente :} Los clientes móviles de @firma no incluyen un servicio que permanezca escuchando; se abren “puntualmente” cuando el navegador invoca el esquema \textit{afirma://}. 
\end{itemize}

Por todo esto, cuando el usuario firma desde \textbf{Android} o \textbf{iOS}, el flujo debe cambiar al mecanismo llamado “\textbf{servidor intermedio}”: 


\begin{itemize}
    \item El JavaScript envía los datos a firmar al \textbf{StorageService} del servidor.
    \item La app móvil recupera esos datos, genera la firma y sube el resultado al mismo servidor.
    \item Finalmente, la página web los recoge a través del \textbf{RetrieveService}.
\end{itemize}


El propio \textbf{manual integrador} lo resume de esta manera en la \textbf{sección 5.3.1}:

“\textit{Los servicios de almacenamiento y recuperación en servidor son necesarios … Cuando el usuario utilice un dispositivo móvil y los clientes móviles Android o iOS}.” 


Habiendo explicado todo lo anterior, para conseguir establecer el mecanismo de \textbf{servidor intermedio} para las operaciones de firma cuando se esté empleando un dispositivo móvil, hay que realizar los siguientes cambios:

\begin{itemize}
    \item Se agrega en \textit{signer-invoke.js} el siguiente fragmento de código encargado de forzar a utilizar el modo de \textbf{servidor intermedio} cuando se está utilizando un dispositivo móvil. Además, este fragmento de código también se encarga de configurar las URLs de los servicios necesarios: \textbf{StorageService} para almacenar los datos que se van a firmar y \textbf{RetrieveService } para recuperar los datos una vez firmados.
\end{itemize}


\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/autofirma-movil.jpg}}
\caption{Se fuerza el uso del modo "servidor intermedio" para móviles} \label{fig:autofirma-movil}
\end{figure}

\begin{itemize}
    \item Se despliega un Tomcat externo protegido con TLS el cual se encarga de desplegar los \textbf{WAR} \textit{afirma-signature-storage.war } y \textit{afirma-signature-retriever.war } que implementan los servlets \textit{StorageService} y \textit{RetrieveService} responsables de almacenar y devolver temporalmente los datos firmado.
    \item Para garantizar que las peticiones se cursen siempre dentro del mismo dominio de la aplicación \textbf{VitalSanity} –condición necesaria para evitar bloqueos de tipo XSS/CORS– se ha colocado por delante un \textit{\textbf{Nginx}} para actuar como un \textit{\textbf{proxy inverso}} que expone el puerto 443 y redirige selectivamente las rutas \textit{/vital-sanity/afirma-signature-storage/}, \textit{/…-retriever/} y \textit{/…-triphase-signer/} hacia \textbf{Tomcat}, reenviando el resto del tráfico de la aplicación Spring Boot al puerto 8058; 
    \item Este \textit{\textbf{reverse proxy}} unifica URL y política de seguridad, y añade la directiva CSP que permite el esquema \textbf{\textit{afirma://*}}, requisito necesario de los \textbf{navegadores móviles }.
\end{itemize}

Con todo esto, se consigue que en la aplicación se pueda firmar y cofirmar documentos tanto desde un ordenador (utilizando \textbf{AutoFirma}) como desde un dispositivo móvil (utilizando \textbf{\textbf{Cliente móvil @firma }}).

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=0.5\textheight, keepaspectratio]{img/selector-certificados-movil.png}
\caption{Selector de Certificados en el móvil}
\label{selector-certificados-movil:vv}
\end{figure}


\section{Configuración de AWS}

\subsection{Objetos que se almacenan en el bucket}
En el bucket de AWS asociado a \textbf{VitalSanity} se almacenan los siguientes documentos asociados con el flujo principal de la aplicación:
\begin{itemize}
    \item Autorizaciones firmadas (en \textit{autorizaciones/firmadas})
    \item     Autorizaciones cofirmadas (en \textit{autorizaciones/cofirmadas})
    \item Informes firmados (en \textit{informes/firmados})
    \item Documentos médicos asociados a los informes (en \textit{informes/documentos})
\end{itemize}

\subsection{Dependencias agregadas}

Se ha agregado en el \textbf{POM} la dependencia \textit{software.amazon.awssdk:s3 } la cual habilita todo el sistema de gestión de archivos en la nube mediante Amazon S3. 

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/aws-dependencia-pom.jpg}}
\caption{Dependencia de AWS para Spring Boot} \label{fig:aws-dependencia-pom}
\end{figure}

\subsection{Gestión de credenciales AWS }

Para gestionar las credenciales de AWS de forma segura, se ha ejecutado el comando \textbf{aws configure} (la aplicación se ha desarrollado en Windows). Este comando crea un directorio oculto \textbf{.aws} en el perfil de usuario con dos archivos principales:

\begin{itemize}
    \item \textbf{credentials}: almacena el par \textbf{Access Key ID} y \textbf{Secret Access Key}.
    \item \textbf{config}: define la región por defecto (region = \textbf{eu-south-2}) y formato de salida.
\end{itemize}

Gracias a esto, no se incrustan las credenciales en el código fuente ni en los ficheros de configuración de la aplicación, reduciendo el riesgo de exposición. 


En el código, el SDK de AWS emplea el proveedor por defecto (\textit{DefaultCredentialsProvider}), que busca automáticamente las credenciales en este archivo oculto, o en variables de entorno.

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/aws-default-credential-providers.jpg}}
\caption{Proveedor de credenciales en el código} \label{fig:aws-default-credential-providers}
\end{figure}

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.65\paperwidth]{img/vv.png}}
\caption{Proveedor de credenciales en el código} \label{fig:vv}
\end{figure}



\subsection{Subida de archivos}

Se utilizan dos métodos principales de la clase \textit{S3VitalSanityService} para la subida de archivos: uno sube un archivo de tipo \textbf{MultipartFile } y otro que sube un archivo de tipo \textit{byte[]}.

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/aws-subirFicheroo-multipaart.jpg}}
\caption{Subir fichero de tipo MultipartFile} \label{aws-subirFicheroo-multipaart:vv}
\end{figure}

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/aws-subirFichero-Bytes.jpg}}
\caption{Subir fichero de tipo byte[]} \label{aws-subirFichero-Bytes.jpg:vv}
\end{figure}

Los ficheros en el bucket no se almacenan con su nombre real, sino que se almacenan con un UUID aleatorio para así ocultar cualquier posible metainformación existente en el nombre real que pudiese revlar cualquier información (aunque sea mínima) a un atacante.

 Se especifica \textit{ServerSideEncryption.AWS-KMS}, delegando la gestión de claves al bucket (SSE-KMS) mediante una clave \textbf{CMK} personalizada (esto se explica más adelante con más detalle)

 \subsection{Generación de URLs pre-firmadas}

 Cada vez que se trata de descargar cualquier docuemtno subido al bucket de aws, se genera una URL prefirmada. Esto permite descargar objetos de S3 sin exponer públicamente el bucket ni requerir credenciales \textbf{AWS}. De esta manera, la URL pública de cualquier objeto dentro del bucket permanece privada, de forma que incluso si un atacante lograse acceso a una de estas URLs y la copiase en el navegador, aún así no podría descargar el documento asociado ya que estaría protegido. Únicamente se puede acceder a los objetos del bucket  a partir de las \textbf{URLs prefirmadas}.


\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/aws-url-prefirmadas.jpg}}
\caption{Método para generar una URL prefirmadas} \label{aws-url-prefirmadas:vv}
\end{figure}

\begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/ejemplo-bucket-inaccesible.jpg}}
\caption{Error: acceso directo a url pública del bucket} \label{ejemplo-bucket-inaccesible:vv}
\end{figure}


Por otra parte, este otro método se utiliza para obtener los bytes de un fichero a partir de su S3Key. Este método es empelado para recuperar la autorización firmada de aws en forma de array de bytes para que el paciente pueda cofirmar dicha autorización.
 \begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625\paperwidth]{img/obtener-bytes-fichero.jpg}}
\caption{Método usado para obtener los bytes de un fichero a partir de su S3Key} \label{obtener-bytes-fichero:vv}
\end{figure}


\subsection{Subida de múltiples ficheros a AWS}



Para la subida de múltiples ficheros en AWS se emplea un método de controlador el cual recibe un array de \textbf{MultipartFile}. Por cada fichero se obtiene su nombre, tipo y tamaño, crea en la base de datos un registro (DocumentoData) asociado al informe; se extrae la clave S3 generada (\textbf{s3Key}) y, mediante los métodos que ya hemos visto del servicio \textbf{s3VitalSanityService}, se sube el archivo al bucket de AWS.

Para que todo esto funcione correctamente, en el HTML se agrega un formulario con \textit{enctype="multipart/form-data"} el cual permite el envío de varios ficheros.
Asimismo, se agrega un atributo \textit{accept} para restringir los tipos de los documentos que se pueden subir a \textbf{pdf, jpg, jpeg y png} .

Este método se utiliza para la subida de documentos asociados a un informe médico.

 \begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=0.625 \paperwidth]{img/aws-subir-multiples-documentos.jpg}}
\caption{Método usado para subir múltiples ficheros a AWS} \label{aws-subir-multiples-documentos:vv}
\end{figure}



\section{Configuración específica de AWS}

\subsection{Principio de Mínimos Privilegios}

Uno de los principales objetivos de la configuración del \textbf{bucket} de \textbf{AWS} ha sido el de cumplir con el \textbf{Principio de Mínimos Privilegios} (Conocido en inglés como \textbf{\textit{the principle of least privilege }} o \textbf{\textit{PoLP}}).

Este principio consiste en otorgar a cada identidad (usuario, rol o servicio) únicamente los permisos estrictamente necesarios para realizar sus tareas, reduciendo así el riesgo de acceso no autorizado .

\subsection{Privacidad del bucket}
Otro de los principales objetivos ha sido el de proteger las URLs públicas de cada uno de los objetos del bucket de forma que dichos objetos sean accesibles mediante la generación de \textbf{URLs prefirmadas con tiempos cortos de expiración} (procedimiento ya descrito en la sección de implementación).

Para ello, se ha activado dentro del bucket la opción de \textbf{\textit{Bloquear \textit{todo} el acceso público} }. De esta forma, nadie podrá acceder directamente a un objeto del bucket a través de su \textbf{URL pública}. Para acceder a estos objetos se requiere siempre de una \textbf{URL prefirmada}.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/bucket-privado.jpg}
\caption{Bloquear todo el acceso público al bucket}
\label{bucket-privado:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/ejemplo-bucket-inaccesible.jpg}
\caption{Error: acceso directo a url pública del bucket}
\label{ejemplo-bucket-inaccesible.jpg:vv}
\end{figure}


\subsection{IAM}

\textbf{IAM} \textbf{(Identity and Access Management) }es el servicio de \textbf{AWS} que  permite gestionar de forma segura el acceso a los recursos de una cuenta de \textbf{AWS}. En el caso de \textbf{VitalSanity}, \textbf{IAM} se ha utilizado para configurar el acceso a los documentos del bucket. 

 \begin{figure}[H]
\centering
\noindent\makebox[\textwidth]{\includegraphics[width=5cm,height=3cm,keepaspectratio]{img/IAM-logo.jpg}}
\caption{Icono de AWS IAM} \label{IAM-logo:vv}
\end{figure}

\begin{itemize}
    \item Por un lado, se ha creado un grupo de usuarios IAM. En AWS, un \textbf{grupo} es una colección de usuarios IAM; permite asignar permisos de forma centralizada a todos sus miembros en lugar de hacerlo usuario por usuario.\\Para la aplicación se ha creado un grupo de usuarios denominado \textbf{Desarrolladores} con permisos de lectura/escritura en buckets de desarrollo y otro grupo denominado \textbf{Administradores} el cual tendría acceso a los buckets en producción. \\Los grupos de usuarios permiten aplicar el \textbf{principio de mínimos privilegios} y segregar accesos para que los desarrolladores solo manejen entornos de pruebas mientras los administradores gestionan producción, reduciendo así riesgos y simplificando la administración de permisos y la futura puesta en producción.
    \item Por otra parte, se ha creado un usuario IAM dentro de cada uno de los dos grupos de usuario anteriormente mencionados. Los usuarios IAM representan a entidades a las que se les conceden permisos específicos para poder ejecutar determonadas acciones.
    \item Por último a cada uno de estos usuarios se les ha asignado políticas especifícas para concederles permisos concretos. Las políticas son documentos \textbf{JSON} de permisos incrustados directamente en la definición de un usuario concreto. Las políticas no son reutilizables por otras entidades. A cada uno de los usuarios se les ha asignado una política creada manualmente asegurando en todo momento que se cumpliese el \textbf{Principio de Mínimos Privilegios}.
\end{itemize}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/aws-politica-personalizada.jpg}
\caption{Política Personalizada de AWS}
\label{aws-politica-personalizada:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/aws-json-politica-personalizada.jpg}
\caption{JSON de Política Personalizada de AWS}
\label{aws-json-politica-personalizada:vv}
\end{figure}

\subsection{Claves personalizadas CMKs}
Las claves \textbf{CMKs} (Customer-Managed Keys) son claves maestras creadas y administradas por el propietario del bucket. Estas claves permiten una gran personalización gracias a su manejo en AWS Key Management Service: permiten cifrar y descifrar datos con control detallado sobre rotación, acceso y auditoría. 

\begin{figure}[H]
\centering
\includegraphics[width=0.25\textwidth, height=0.25\textheight, keepaspectratio]{img/AWS-KMS-Logo.jpg}
\caption{Icono de AWS KMS}
\label{AWS-KMS-Logo.jpg:vv}
\end{figure}
Al establecer en el bucket estas claves personalizadas \textbf{CMK}, se logra conseguir un mayor control y personalización tanto de las autorizaciones como de los documentos e informes médicos, lo que permite obtener una seguridad mucho más robusta.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/clave-cmk-personalizada.jpg}
\caption{Clave CMK personalizada}
\label{clave-cmk-personalizada:vv}
\end{figure}


\subsection{Región del bucket}
Se ha cambiado la región por defecto del bucket para que la región del bucket sea \textbf{eu-south-2 } (Madrid, España, dado que la VitalSanity se sitúa dentro del ámbito nacional español). 

Con esto se consigue garantizar que los datos personales almacenados permanezcan físicamente dentro del territorio español, facilitando así el cumplimiento del \textbf{RGPD} \citep{eu2016rgpd_html} y de la \textbf{LOPDGDD} \citep{espana2018lopdgddboe_html}  al evitar transferencias internacionales de datos que exigirían requisitos legales adicionales. Además, también se mejora la latencia para usuarios nacionales a la par que se refuerza la confianza en la gestión segura de información sensible. 

\vspace{1em}

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/aws-region-y-arn-bucket.jpg}
\caption{Región y ARN del bucket}
\label{aws-region-y-arn-bucket:vv}
\end{figure}


\section{Base de datos dockerizada}

Durante todo el desarrollo de la aplicación se ha empleado una base de datos \textbf{dockerizada} de \textbf{PostgreSQL}. Esta se articula en primer lugar mediante el despliegue de un contenedor Docker dedicado, configurado con variables de entorno \textit{(\textit{POSTGRES\_USER, POSTGRES\_PASSWORD, POSTGRES\_DB})} y mapeo de puertos \textbf{(-p 5058:5432)}, lo cual garantiza un entorno aislado, reproducible y alineado con las dependencias de producción. 

Para poder utilizar esta base de datos \textbf{dockerizada}, se ha creado un perfil de Springboot denominado \textit{"postgres"}, el cual se activa mediante \\\textit{spring.profiles.active=postgres} en el fichero de configuración \textit{application.properties}.

Para el manejo del perfil de \textbf{Postgres} se ha creado un fichero llamado \textit{application-postgres.properties}.

Todo esto permite conmutar \textbf{dinámicamente} la configuración de la capa de \textbf{persistencia}: se redefinen \textbf{la URL de conexión}, las credenciales de acceso y el dialecto de \textbf{Hibernate} (\textbf{PostgreSQLDialect}), asegurando que el ciclo de vida de la base de datos concuerde con el esquema y las prácticas de producción.

Esta separación de perfiles no solo favorece la claridad y mantenibilidad del proyecto (pues aísla la configuración de \textbf{desarrollo (H2 en memoria) de la de integración (PostgreSQL)}), sino que también refuerza la \textbf{portabilidad} y la \textbf{escalabilidad}, al permitir que equipos multidisciplinares reproduzcan con facilidad el entorno real sin \textbf{“ruido”} de \textbf{configuración local} (evitando de esta manera problemas clásicos del estilo "\textbf{en \textbf{mi ordenador} sí que funcionaba}").

Asimismo, en el archivo de configuración \textit{application.properties} se establece la propiedad \textit{spring.jpa.hibernate.ddl-auto=update} , gracias a la cual se le indica a \textbf{Hibernate} que, al arrancar la aplicación, compare las \textbf{entidades JPA} con el esquema de la base de datos y aplique automáticamente las modificaciones necesarias para mantenerlos sincronizados. 

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/application-postgres-properties.png}
\caption{Archivo de configuración \textit{application-postgres.properties}}
\label{application-postgres-properties:vv}
\end{figure}

Por último, mencionar que todo esto se ha replicado de forma análoga para la ejecución de tests (se ha creado tanto un fichero \textit{application.properties.java} como un fichero \textit{application-postgres.properties.java}  independientes) para poder ejecutar los tests de forma \textbf{aislada} y sobre una \textbf{base de datos separada} de la \textbf{base de datos de desarrollo}. Mencionar que, aunque en la aplicación solo se haya incluido un único test de prueba, esta medida sería de gran utilidad si en el futuro se plantease agregar un elevado número de tests para la aplicación. 

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/application-postgres-tests-properties.png}
\caption{Archivo de configuración \textit{application-postgres.properties}}
\label{application-postgres-tests-properties:vv}
\end{figure}


\section{Docker Compose}

\textbf{Docker Compose} actúa como un orquestador que permite levantar todo el proyecto mediante un único y sencillo comando:  \textbf{docker-compose up}. Gracias a esto se dota a la aplicación de \textbf{portabilidad} y evitan problemas de configuración \textbf{local} (evitando de esta manera problemas clásicos del estilo \textit{'en mi ordenador sí que funcionaba'}).

Cuando se invoca el comando \textbf{docker-compse up}, \textbf{Compose} primero procesa el servicio \textbf{app}, el cual utiliza un \textbf{Dockerfile} de dos etapas: en la fase \textbf{builder}, un contenedor \textbf{Maven} (imagen maven:3.9.9-eclipse-temurin-21) se sitúa en \textbf{/app}, copia el \textbf{pom.xml }y \textbf{el código fuente}, y ejecuta \textbf{mvn clean package -DskipTests} para generar el \textbf{JAR final}; en la fase runtime, la imagen \textbf{eclipse-temurin:21-jdk-alpine} crea un usuario no privilegiado (\textbf{appuser}), copia el artefacto \textit{/app/target/*.jar }a \textit{/app/app.jar} y expone el puerto \textbf{8058}.

Mediante CMD \textit{["java", "-jar", "app.jar", "--spring.profiles.active=docker"]}, \textbf{Compose} arranca la aplicación con el perfil “\textbf{docker}”. 

 La configuración del perfil (“application-docker.properties”) inyecta variables de entorno (\texttt{POSTGRES\_HOST=db, DB\_USER=vital, DB\_PASSWD=vital})
 que redefinen la conexión \textbf{JDBC} a PostgreSQL. A su vez, el servicio \textit{db} levanta la imagen oficial \textbf{postgres:15}, expone internamente el puerto 5432 (mapeándolo al 5058 del \textbf{host}), establece \textbf{credenciales}, y utiliza un \textbf{volumen} \textbf{Docker (db-data)} para \textbf{persistir} los datos en \textit{/var/lib/postgresql/data.}

 Establecer un \textbf{volumen de docker} es de \textbf{vital importancia} ya que garantiza  la persistencia y aislamiento de los datos más allá del ciclo de vida del contenedor, facilitando además su respaldo y migración.

 Por otra parte, \textbf{Compose} monta un \textbf{script de inicialización SQL} en \textit{/docker-entrypoint-initdb.d/}, lo que permite poblar \textbf{la bd con datos de desarrollo} en cuanto el contenedor arranca. Antes de ejecutar el script, \textbf{Compose} comprueba si la base de datos ya estaba poblada de antes.

 Ambos servicios se unen a la red personalizada \textit{app\_network} \textbf{(driver bridge)}, garantizando \textbf{aislamiento de red} y \textbf{comunicación directa por nombre de servicio}, mientras que la directiva \textit{depends\_on} asegura el siguiente orden de arranque: \textbf{primero db, luego app}.

 Gracias al establecimiento de \textbf{Docker Compose} se logra \textbf{reproducibilidad absoluta del entorno}, \textbf{versionado de la infraestructura junto al código}, \textbf{consistencia entre equipos y entornos}, \textbf{escalabilidad}, \textbf{aislamiento de dependencias} y \textbf{reducción drástica de la complejidad en la instalación manual de bases de datos}, \textbf{variables de entorno y configuraciones específicas}.

 Basta con ejecutar el comando \textbf{docker-compose down} para desmontar todo sin dejar residuos en el host, lo que facilita las pruebas, el despliegue continuo y el paso de desarrollo a producción con los mínimos cambios posibles.

 Sin duda, \textbf{Docker Compose} es una de las herramientas que más dolores de cabeza nos ahorra a cualquier desarrollador.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/application-docker-properties.png}
\caption{Archivo de configuración \textit{application-docker.properties}}
\label{application-docker-properties.png:vv}
\end{figure}


\section{Mailtrap}

Dentro del desarrollo de \textbf{VitalSanity}, se ha empelado el “\textbf{sandbox}” de \textbf{Mailtrap} como servidor \textbf{SMTP} de pruebas, lo cual permite interceptar y visualizar de forma segura los correos generados por la aplicación sin enviarlos a destinatarios reales. 

Para ello, en el fichero de configuración \textit{application.properties} se definen las propiedades específicas de \textbf{Mailtrap}: \\\textit{spring.mail.host=sandbox.smtp.mailtrap.io}, \textit{spring.mail.port=2525}, \textit{spring.mail.username} y \textit{spring.mail.password} con las credenciales proporcionadas por \textbf{Mailtrap}, además de habilitar el protocolo \textbf{SMTP} y \textbf{STARTTLS} \\(\textit{spring.mail.properties.mail.smtp.auth=true} y \textit{\\spring.mail.properties.mail.smtp.starttls.enable=true}) para garantizar una comunicación cifrada.



En el \textbf{pom.xml} se incluye la dependencia \textit{spring-boot-starter-mail}, que integra automáticamente el bean \textbf{JavaMailSender} y el soporte para \textbf{SimpleMailMessage}, lo que permite construir y enviar mensajes sencillos de \textbf{manera programática}.

En la clase de servicio \textbf{EmailService}, se inyecta \textbf{JavaMailSender} mediante \textbf{@Autowired} y se implementa un método unificado \textit{send(String to, String subject, String text) }que crea un objeto \textbf{SimpleMailMessage}, establece el remitente fijo \\\textbf{(“vital@sanity.es”)}, el destinatario, el asunto y el contenido del mensaje, y lo envía invocando \textit{mailSender.send(message)}.

Asimismo, para evitar bloqueos en el hilo principal de la aplicación, la invocación a \textbf{\textit{emailService.send(...)}} se realiza dentro de un \textbf{nuevo hilo} \textit{(new Thread(() -> { ... }).start();)}, asegurando así operaciones de envío \textbf{no bloqueantes}. Este aspecto es de \textbf{vital importancia}, puesto que aumenta el rendimiento de forma muy significativa en funcionalidades \textbf{críticas} tales como el \textbf{registro de profesionales médicos} a partir de un \textbf{fichero CSV} o todas aquellas operaciones que involucran \textbf{el flujo de firma} mediante \textbf{AutoFirma} o \textbf{Cliente móvil @firma}.

\textbf{Mailtrap} ha representado un bloque funcional \textbf{muy importante} ya que es ampliamente utilizado en un gran número de funcionalidades de la aplicación, en particular se usa para:

\begin{itemize}
    \item Recibir y mostrar el correo de información enviado al paciente cuando un profesional médico le ha solicitado autorización de acceso a su historial.
    \item Recibir y mostrar el correos de información enviado al profesional médico cuando un paciente ha aceptado la solicitud de autorización.
    \item Recibir y mostrar el correos de información enviado al profesional médico cuando un paciente ha denegado la solicitud de autorización.
    \item Recibir y mostrar el correo de información enviado al profesional médico cuando un paciente ha desautorizado el acceso a su historial médico.
    \item Recibir y mostrar el correo con la clave de acceso enviados a un centro médico recién registrado por un administrador
    \item Cuando un centro médico registra a profesionales médicos a partir de un fichero \textbf{CSV}, se usa mailtrap para recibir y mostrar los correos con las claves de acceso a cada uno de los profesionales médicos registrados.
    \item Cuando un paciente se registra, se usa mailtrap para recibir y mostrar el correo con el código de confirmación.
\end{itemize}
Por último, cabe destacar que aunque \textbf{Mailtrap} es una opción \textbf{excelente} y muy \textbf{intuitiva} de utilizar en \textbf{desarrollo}, para\textbf{ entornos de producción} resultaría más conveniente utilizar algún \textbf{proveedor de correo transacciona}l con características y garantías específicas como por ejemplo \textbf{Amazon SES}, \textbf{SendGrid}, \textbf{Mailgun}, \textbf{SparkPost}, \textbf{Postmark}, entre otros.


Para la utilización de \textbf{Mailtrap} en el proyecto se ha incluido la siguiente dependencia en el \textbf{pom.xml}:

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/mailtrap-pom-dependency.png}
\caption{Archivo de configuración \textit{Dependencia de Mailtrap en el pom.xml}}
\label{mailtrap-pom-dependency:vv}
\end{figure}


\section{Registro de usuarios}

Es de vital importancia destacar que en la versión definitiva de producción de \textbf{VitalSanity}, en todos los flujos de registro y de inicio de sesión no se haría uso de email y contraseña sino que se haría uso en todo momento de \textbf{certificados digitales} para así garantizar el cumplimiento de todo lo establecido en los requisitos \textbf{legales} y de \textbf{seguridad}.

\subsection{Registro de centros médicos}

Los \textbf{administradores} (los cuales ya están previamente registrados en la aplicación) se encargan de registrar a los \textbf{centros médicos} a partir de un sencillo formulario. 

Cada vez que se registra un nuevo \textbf{centro médico}, se le envía al email de dicho \textbf{centro médico} una \textbf{clave de acceso aleatoria} compuesta por doce caracteres. 

Con dicha clave de acceso, el \textbf{centro médico }podrá iniciar sesión la primera vez. No obstante, la primera vez que haya iniciado sesión, se le forzará al \textbf{centro médico} a cambiar la contraseña por una propia. El \textbf{centro médico} no podrá realizar \textbf{ninguna otra acción} dentro de la aplicación hasta que no haya cambiado su contraseña. Se \textbf{obliga} que la contraseña introducida sea de al menos ocho caracteres.

Con esta \textbf{medida} nos aseguramos de que no ocurra n\textbf{ingún riesgo} incluso si se \textbf{intercepta} la \textbf{primera} clave de acceso durante la \textbf{transmisión} del mail.

\subsection{Registro de profesionales médicos}

Los \textbf{centros médicos} son los encargados de registrar sus \textbf{profesionales médicos}. Para ello, el centro médico introduce un \textbf{fichero CSV} con todos los datos de todos los \textbf{profesionales médicos} que se quiere registrar.

Para cada \textbf{profesional médico}, primero se comprueba si dicho \textbf{profesional médico} ya estaba registrado en la base de datos para así evitar problemas de \textbf{integridad referencial}. 

Para todos aquellos \textbf{profesionales médicos} nuevos se les envía una clave de acceso. El funcionamiento de la lógica asociada a esta \textbf{clave de acceso} es \textbf{análogo} al \textbf{ya descrito} para el registro de centros médicos.

El poder registrar los profesionales médicos \textbf{a partir de un fichero CSV} es un aspecto de \textbf{gran importancia} ya que en la vida real cada centro médico está compuesto por \textbf{varios miles de profesionales médicos},  y gracias a esta funcionalidad cada centro puede registrar este elevado número de profesionales médicos de golpe, tardando \textbf{menos de un segundo} esta operación en completarse.

\subsection{Registro de pacientes}

Los \textbf{pacientes} se registran directamente desde la aplicación a través de un \textbf{sencillo formulario}. Ellos mismos introducen su \textbf{propia contraseña}. Se \textbf{obliga} a \textbf{los pacientes }que la \textbf{contraseña} introducida sea de al menos ocho caracteres.

Cuando un \textbf{paciente} termina de rellenar todos los datos del formulario, se le envía un \textbf{correo} con un \textbf{código de confirmación} conformado por \textbf{seis dígitos}. El \textbf{paciente} debe de introducir en la aplicación dicho \textbf{código de confirmación} para poder \textbf{finalizar} su \textbf{registro}.

Una vez introducido el \textbf{código de confirmación}, se le pedirá al \textbf{paciente} que complete de forma opcional sus \textbf{datos de residencia}. De esta forma, se distribuye la \textbf{carga manual} que tiene que realizar el \textbf{paciente} para \textbf{teminar de registrarse} (esquema \textbf{lazy registration}).


\chapter{Resultados}

En este capítulo se mostrará la versión final de \textbf{VitalSanity}. Para ello, se adjuntarán imágenes de cada una de las vistas de la aplicación, tanto de la versión para \textbf{ordenador} como de la versión para \textbf{móvil}. Asimismo, se incluirán explicaciones de aquellos aspectos más relevantes, centrándose en explicar los detalles específicos a nivel del flujo de la interfaz de la aplicación. Cabe mencionar que, para evitar redundancias, las explicaciones incluidas en este capítulo son más breves que aquellas explicaciones correspondientes a capítulos anteriores para así evitar volver a detallar aspectos que ya habían sido explicados con anterioridad. 

Destacar que se ha logrado integrar de forma completa \textbf{AutoFirma} y \textbf{Cliente móvil @firma}, así como el resto de funcionalidades mencionadas el capítulo de \textbf{Aspectos de seguridad}. Con ello, se han logrado cumplir con la mayor parte de los objetivos establecidos desde un inicio, tanto a nivel de  \textbf{legal} como a nivel de \textbf{seguridad}.

\subsection{Página home}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home1.png}
\caption{Página home: introducción}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home2.png}
\caption{Página home: beneficios}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home3.png}
\caption{Página home: funcionamiento de VitalSanity}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home4.png}
\caption{Página home: reseñas de usuarios}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home5.png}
\caption{Página home: formulario de contacto}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/navbar.png}
\caption{Navbar de la aplicación (profesional médico logeado)}
\label{Navbar de la aplicación:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/home6.png}
\caption{Footer de la aplicación}
\label{AutoFirma ejemplo base:vv}
\end{figure}

Cabe destacar que tanto la \textbf{navbar} como el \textbf{footer} aparecen en \textbf{todas} las vistas de la aplicación.


\subsection{Vistas del Guest User}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.5\textheight, keepaspectratio]{img/version-final-ordenador/login-form.png}
\caption{Formulario de inicio de sesión}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/register-form.png}
\caption{Formulario de registro como paciente}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/guest-user/login-errors.png}
\caption{Formulario de login mostrando un error}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/guest-user/x509-login.png}
\caption{Inicio de sesión con certificado digital}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\subsection{Gestión del acceso al historial médico centralizado por parte del profesional}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/profesional-solicita-acceso.png}
\caption{Profesional médico busca a un paciente}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/profesional-solicita-acceso-ya-existe.png}
\caption{Paciente que ya tiene una solicitud de autorizacion}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/solicitud-autorizacion.png}
\caption{Formulario para la solicitud de autorizacion}
\label{AutoFirma ejemplo base:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/solicitud-autorizacion-v2.png}
\caption{Instrucciones para realizar la firma}
\label{AutoFirma ejemplo base:vv}
\end{figure}

Estas instrucciones aparecen cuando se ha rellenado el formulario de solicitud de la autorización y cuando se pulsa sobre \textbf{\textit{Aceptar}}. En estas instrucciones se incluye además \textbf{información básica sobre protección de datos}, así como el enlace a la \textbf{política de privacidad} de la aplicación.

Si se presiona el botón de \textbf{\textit{Firmar y enviar}} sin haber marcado la casilla de \textbf{protección de datos}, entonces el navegador mostrará un aviso.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/aviso-no-haber-pulsado-casilla.png}
\caption{Aviso por no haber marcado la casilla de protección de datos}
\label{Aviso por no haber marcado la casilla de protección de datos:vv}
\end{figure}

Tras haber marcado la casilla de protección de datos y pulsado el botón, es justo ahí cuando entra en juego \textbf{AutoFirma}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/pop-up-autofirma.png}
\caption{Pop up de AutoFirma}
\label{Pop up de AutoFirma:vv}
\end{figure}

Tras abrirse, \textbf{AutoFirma} muestra el selector de certificados.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/selector-certificados-autofirma.png}
\caption{Selector de certificados}
\label{Pop up de AutoFirma:vv}
\end{figure}

Tras haber elegido el certificado con el que se quiere firmar la autorización, se muestra un \textbf{overlay} por pantalla mientras se completa el proceso de firma.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/overlay-autofirma.png}
\caption{Selector de certificados de AutoFirma}
\label{Pop up de AutoFirma:vv}
\end{figure}

Tras haberse completado el proceso de firma, se le muestra al profesional médico un mensaje de confirmación y se le permite descargarse el \textbf{PDF} firmado con la autorización recién firmada. Asimismo, el \textbf{paciente} recibe un \textbf{email} indicándole que ha recibido una nueva solicitud de autorización de acceso a su historial.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/ok-firma.png}
\caption{Firma de la autorización realizada correctamente}
\label{Firma realizada correctamente:vv}
\end{figure}

Al abrir el \textbf{PDF} desde \textbf{Adobe Acrobat Reader} se puede verificar como en efecto se ha firmado correctamente.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/pdf-firmado.png}
\caption{PDF de la autorización firmado correctamente}
\label{PDF de la autorización firmado correctamente:vv}
\end{figure}

El \textbf{profesional médico} puede acceder al listado de los \textbf{pacientes que han autorizado}. Para cada uno de los \textbf{pacientes}, \textbf{el profesional médico} puede acceder a su \textbf{historial médico centralizado}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/ver-pacientes-que-han-autorizado.png}
\caption{Listado de pacientes que han autorizado el acceso}
\label{PDF de la autorización firmado correctamente:vv}
\end{figure}

El \textbf{profesional médico} también puede ver el listado de solicitudes de autorización que tiene \textbf{pendientes de confirmación}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/solicitudes-de-autorizacion-pendientes.png}
\caption{Solicitudes de autorización pendientes de confirmación}
\label{PDF de la autorización firmado correctamente:vv}
\end{figure}

Asimismo, el \textbf{profesional} también puede ver aquellos \textbf{pacientes} que han desautorizado el acceso al \textbf{historial médico centralizado}. Para cada uno de estos \textbf{pacientes}, el \textbf{profesional médico} puede o bien volver a solicitar acceso o bien acceder a los informes que \textbf{ese mismo} \textbf{profesional médico} agregó en el pasado al historial del \textbf{paciente} (es decir, tras una \textbf{desautorización}, el profesional médico pierde acceso a los informes de otros profesionales médicos pero no pierde el acceso a los informes \textbf{propios}).

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/ver-pacientes-que-han-desautorizado.png}
\caption{Ver pacientes que han desautorizado}
\label{Ver pacientes que han desautorizado:vv}
\end{figure}

\subsection{Gestión del acceso al historial médico centralizado por parte del paciente}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/solicitudes-autorizacion.png}
\caption{Solicitudes de autorización del paciente}
\label{Solicitudes de autorización del paciente:vv}
\end{figure}

Cuando un paciente le da al botón de  \textbf{\textit{Autorizar}}, entonces se le muestra el recuadro con \textbf{las instrucciones de la firma}, con \textbf{la información sobre protección de datos} y el enlace con \textbf{la política de privacidad} (de forma análoga a como se le mostraba al profesional médico). En este caso, toda esta información se muestra en forma de \textbf{pop up}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/pop-up-cofirma-autorizacion-paciente.png}
\caption{Instrucciones de la firma en forma de pop up}
\label{Instrucciones de la firma en forma de pop up:vv}
\end{figure}

Cuando el paciente firma, se muestra el \textbf{pop up de AutoFirma}, el \textbf{selector de certificados}  y el \textbf{overlay de espera}, todo de forma análoga a como se mostraba al \textbf{profesional médico}.


\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/pop-up-autofirma.png}
\caption{Pop up de AutoFirma}
\label{Pop up de AutoFirma:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/selector-certificados.png}
\caption{Selector de certificados}
\label{selector-certificado:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/overlay-de-espera.png}
\caption{Overlay de espera}
\label{Overlay de espera:vv}
\end{figure}


Cuando se completa el proceso de firma, se le muestra el mensaje de confirmación al paciente con el enlace de descarga de la autorización \textbf{cofirmada} (dicha autorización \textbf{cofirmada} también se sube a \textbf{AWS}). Tras haberse cofirmado la autorización, el profesional médico recibe un email indicándole que ya tiene acceso al historial médico del paciente.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/autorizacion-cofirmada-con-exito.png}
\caption{Cofirma realizada correctamente}
\label{Cofirma realizada correctamente:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/pdf-cofirmado-ok.png}
\caption{PDF cofirmado (con dos firmas)}
\label{Cofirma realizada correctamente:vv}
\end{figure}

Por otra parte, el paciente también puede \textbf{denegar} solicitudes de autorización:

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/denegar-solicitud-autorizacion.png}
\caption{Pop up para denegar una solicitud de autorización}
\label{Pop up para denegar una solicitud de autorización:vv}
\end{figure}

El paciente puede acceder al listado de \textbf{profesionales médicos} que ha autorizado y desde ahí puede o bien acceder a los informes agregados por un profesional médico o bien puede \textbf{desautorizar} a un profesional médico.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/ver-profesionales-autorizados.png}
\caption{Listado de profesionales médicos autorizados del paciente}
\label{Listado de profesionales médicos autorizados del paciente:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/desautorizar-profesional-medico.png}
\caption{Pop up para desautorizar a un profesional médico}
\label{Pop up para desautorizar a un profesional médico:vv}
\end{figure}

\subsection{Profesional médico: informes y documentos médicos dentro del historial}

El profesional médico puede acceder al \textbf{historial completo} de informes y \textbf{documentos médicos} de aquellos \textbf{pacientes} que hayan \textbf{autorizado} el acceso. Esto incluye el acceso a todos los informes y documentos médicos, con independencia del profesional médico que los haya creado y con independencia del centro médico en el que trabaje dicho profesional. Asimismo, el profesional médico podrá agregar nuevos informes al historial del paciente que ha autorizado.



\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/informes-de-un-paciente.png}
\caption{Ver informes de un paciente}
\label{Ver informes de un paciente:vv}
\end{figure}

Para cada uno de los informes, el profesional médico puede acceder a los detalles completos de dicho informe.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/ver-detalles-de-un-informe.png}
\caption{Ver detalles de un informe}
\label{Ver detalles de un informe:vv}
\end{figure}

Dentro de los detalles de un informe médico, el profesional puede descargarse y visualizar los documentos médicos de dicho informe.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/ver-documentos-de-un-informe.png}
\caption{Ver documentos de un informe}
\label{Ver documentos de un informe:vv}
\end{figure}

Asimismo (como aparece en la imagen de arriba), si el profesional médico en cuestión ha sido el creador de dicho informe, entonces dicho profesional médico podrá agregar unos documentos asociados en dicho informe. Los documentos pueden estar en formato \textbf{PDF}, \textbf{JPG}, \textbf{PNG} o \textbf{JPEG}. Todos estos documentos se almacenan de forma segura en el \textbf{bucket} de \textbf{AWS}.

En el caso de que el profesional médico no haya sido el creador de dicho informe, entonces no podrá adjuntar documentos nuevos. 

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/no-aparece-adjuntar.png}
\caption{El botón de Adjuntar no aparece si el informe no es propio}
\label{El botón de Adjuntar no aparece si el infore no es propio:vv}
\end{figure}

De forma parecida, el profesional médico podrá editar todos aquellos informes que hayan sidos creados por él mismo. En aquellos informes pertenecientes a otros profesionales médicos no se mostrará el botón de \textbf{\textit{Editar}}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/no-aparece-editar.png}
\caption{El botón de Editar no aparece si el informe no es propio}
\label{El botón de Editar no aparece si el informe no es propio:vv}
\end{figure}


En cuanto a la creación y a la edición de informes, el procedimiento es análogo al ya descrito para el proceso de autorización de acceso al historial (salvo que en este caso no hay \textbf{cofirma} puesto que los informes son únicamente firmados por el profesional médico).

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/creacion de un nuevo informe.png}
\caption{Formulario para la creación de un nuevo informe}
\label{Formulario para la creación de un nuevo informe:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/instrucciones-de-la-firma.png}
\caption{Instrucciones para la creación del informe}
\label{Instrucciones para la creación del inform:vv}
\end{figure}

Cuando se acepta la casilla de \textbf{protección de datos} y se le da a \textbf{\textit{Firmar y Enviar}}, se sigue el mismo flujo ya descrito con anterioridad: se muestra el pop up de \textbf{AutoFirma}, se muestra el \textbf{selector de certificados} y aparece el \textbf{overlay} de espera hasta que se completa el proceso de firma (no se vuelven a poner las imágenes para evitar redundancia).

Cuando se completa el proceso de firma, se le muestra al profesional médico el mensaje de confirmación y el enlace para poder descargarse el \textbf{PDF} firmado asociado a la información introducida del informe. Asimismo, el profesional médico recibe un email de confirmación de que se ha subido su nuevo informe con éxito al historial del paciente.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/pdf-informe-firmado.png}
\caption{PDF firmado del informe}
\label{PDF firmado del informe:vv}
\end{figure}

La edición del informe sigue exactamente el mismo funcionamiento. Cuando se le da al botón de \textbf{\textit{Editar}}, aparece el formulario con los datos precargados del informe que se quiere editar.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/profesional-medico/informes-historial-medico/editar-informe.png}
\caption{Editar un informe}
\label{Editar un informe:vv}
\end{figure}


\subsection{Paciente: informes y documentos médicos dentro del historial}

El paciente puede visualizar todos los informes que se han agregado a su \textbf{historial médico centralizado}, tanto de profesionales \textbf{autorizados} como de los profesionales que \textbf{ha desautorizado}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/historial-medico-centralizado/ver-mis-informes.png}
\caption{Lista de informes del historial del paciente}
\label{Lista de informes del historial del paciente:vv}
\end{figure}

El paciente puede acceder a los detalles de cada uno de los informes.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/historial-medico-centralizado/ver-detalles-informe.png}
\caption{Ver detalles de un informe}
\label{Ver detalles de un informe:vv}
\end{figure}

Dentro de los detalles de cada informe el paciente puede descargarse y visualizar cada uno de los documentos adjuntados a dicho informe.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/paciente/historial-medico-centralizado/ver-documentos-informes.png}
\caption{Ver documentos de un informe}
\label{Ver documentos de un informe:vv}
\end{figure}

\subsection{Registro de centros médicos}

Los usuarios administradores son los encargados de registrar a los centros médicos.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.4\textheight, keepaspectratio]{img/version-final-ordenador/registro-centros-medicos/form-registro-centro-medico.png}
\caption{Formulario para registrar un centro médico}
\label{Formulario para registrar un centro médico:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.3\textheight, keepaspectratio]{img/version-final-ordenador/registro-centros-medicos/confirmacion-registro-ok.png}
\caption{Confirmación del registro}
\label{Confirmación del registro:vv}
\end{figure}

Al registrar el \textbf{centro médico}, se le envía un \textbf{email} con una contraseña de acceso. Dicha contraseña le permite al centro médico \textbf{inicar sesión} por primera vez. Cuando el centro médico se autentique por primera vez, entonces se le fuerza a cambiar la contraseña por una que el propio centro médico elija (debe de elegir una contraseña de al menos 8 caractres)

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.4\textheight, keepaspectratio]{img/version-final-ordenador/registro-centros-medicos/contraseña-acceso-actualizar.png}
\caption{Cambiar la contraseña del centro médico}
\label{Cambiar la contraseña del centro médico:vv}
\end{figure}

\subsection{Registro de profesionales médicos}

Cada centro médico es el responsable de registrar a sus profesionales médicos. Esta acción se realiza a partir de un \textbf{fichero CSV} con los datos de todos los profesionales médicos que se quiere registrar. Como ya se ha comentado en el apartado de \textbf{\textit{Detalles de implementación}}, esta funcionalidad tiene en cuenta aquellos profesionales médicos del fichero \textbf{CSV} que ya estuviesen registrados previamente en la \textbf{base de datos}.

\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.4\textheight, keepaspectratio]{img/version-final-ordenador/registro-profesionales-medicos/registro-profesionales-medicos.png}
\caption{Registro de profesionales médicos}
\label{Registro de profesionales médicos:vv}
\end{figure}

De igual forma a como ocurría con los \textbf{centros médicos}, a los \textbf{profesionales médicos} recién registrados se les envía por \textbf{email} una contraseña de acceso la cual posteriormente tienen que cambiar por una propia que ellos mismos elijan. 




\subsection{Registro de pacientes}

Ya se ha mostrado con anterioridad el formulario de registro de los pacientes. Los pacientes se registran ellos mismos en la aplicación.

\subsection{Página home}



\begin{figure}[H]
\centering
\includegraphics[width=0.5\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/register-form.png}
\caption{Formulario de registro como paciente}
\label{AutoFirma ejemplo base:vv}
\end{figure}

Cuando un paciente se registra, se le envía por correo un \textbf{código de confirmación} compuesto por seis dígitos. Se debe de introducir correctamente dicho código para poder completar el registro.



\begin{figure}[H]
\centering
\includegraphics[width=0.5\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/registro-pacientes/codigo-confirmacion.png}
\caption{Código de confirmación del registro del paciente}
\label{AutoFirma ejemplo base:vv}
\end{figure}

Cuando el paciente introduce correctamente el código, se le pide que ingrese los datos de residencia (esquema \textbf{lazy-registration})

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-ordenador/registro-pacientes/completar-datos-residencia.png}
\caption{Formulario para completar los datos de residencia}
\label{Formulario para completar los datos de residencia:vv}
\end{figure}

\subsection{Plantillas de error}

Cuando aparece un error \textbf{HTTP}, en lugar de mostrar el mensaje de error en \textbf{bruto}, se ha configurado la aplicación para que se carguen automáticamente \textbf{plantillas de error personalizadas}. \textbf{Spring boot} permite realizar esta acción de una forma muy sencila: nombrar a la plantilla de error que se quiera utilizar para el \textbf{ERROR HTTP 404} como \textbf{404.html} (y lo mismo para el resto de errores).

El error \textbf{HTTP 404} se muestra cuando se intenta acceder a una ruta que no existe y también cuando se intenta acceder a una ruta sin tener los permisos suficientes (\textbf{middlewares por autenticación y por roles de usuario}. Cuando un usuario sin suficientes permisos intenta acceder a un recurso, es preferible mostrar un error \textbf{HTTP 404 Not Found} antes que un error que haga referencia a un acceso no autorizado puesto que el error \textbf{404} revela menos información (por ejemplo, si se mostrase un error \textbf{HTTP 401 Unauthorized}, entonces ya se estaría revelando que el recurso al que se intenta acceder sí que existe).

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-ordenador/errores/404.png}
\caption{Plantilla personalizada para el error HTTP 404}
\label{Formulario para completar los datos de residencia:vv}
\end{figure}

Para el resto de errores típicos (\textbf{400}, \textbf{403}, \textbf{500},...) se han configurado plantillas de error análogas a la ya mostrada.



\section{Versión móvil de VitalSanity}

En este apartado se mostrará la versión móvil de la aplicación. Destacar que, con el objetivo de evitar redundancia, únicamente se mostrarán aquellas vistas que supongan cambios significativos con respecto a su versión de escritorio (por ejemplo, no se volverán a mostrar las vistas correspondientes a los formularios puesto que el aspecto se mantiene prácticamente igual en ambas versiones).


\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home1.png}
\caption{Página home responsive: introducción}
\label{Página home: introducción:vv}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home2.png}
\caption{Página home responsive: beneficios}
\label{Página home: beneficios:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home3.png}
\caption{Página home responsive: funcionamiento de VitalSanity}
\label{Página home: beneficios:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home4.png}
\caption{Página home responsive: funcionamiento de VitalSanity}
\label{Página home: beneficios:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home5.png}
\caption{Página home responsive: reseñas de usuarios}
\label{Página home: reseñas de usuarios:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home6.png}
\caption{Página home responsive: información de contacto}
\label{Página home: información de contacto:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/home7.png}
\caption{Página home responsive: formulario de contacto}
\label{Página home: formulario de contacto:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/footer.png}
\caption{Página home responsive: footer}
\label{Página home: footer:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=0.7\textheight, keepaspectratio]{img/version-final-movil/footer2.png}
\caption{Página home responsive: footer}
\label{Página home: footer:vv}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/navbar1.png}
\caption{Navbar responsive}
\label{Página home: footer:vv}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/buscar-paciente.png}
\caption{Buscar paciente responsive}
\label{Página home: footer:vv}
\end{figure}


\begin{figure}[H]
\centering
\includegraphics[width=0.975\textwidth, height=0.4\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/selector-certificados-movil.png}
\caption{ Selector de certificados en el móvil}
\label{Selector de certificados de Cliente móvil @firma:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/listado-de-pacientes.png}
\caption{Información de pacientes responsive}
\label{Información de pacientes versión responsive:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/filtros.png}
\caption{Filtros responsive}
\label{Filtros versión responsivee:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/desautorizados-responsive.png}
\caption{Lista de profesionales médicos autorizados responsive}
\label{Profesionales médicos desautorizados versión responsive:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/listado-informes.png}
\caption{Listado de informes responsive}
\label{Listado de informes versión responsive:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/detalles-informe.png}
\caption{Detalles de informe responsive}
\label{Detalles de informe versión responsive:vv}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.4\textwidth, height=1\textheight, keepaspectratio]{img/version-final-movil/resto-de-imagenes/documentos-del-informe.png}
\caption{Documentos del informe responsive}
\label{Documentos del informe versión responsive:vv}
\end{figure}




\chapter{Conclusiones}
En este último apartado se destacarán mejoras potenciales que pueden agregarse en versiones futuras de \textbf{VitalSanity} y se concluirá con una \textbf{reflexión final} en la que se destacará todo el \textbf{aprendizaje extraído} gracias a la realización de este proyecto.

\section{Trabajo Futuro}

Existen varios aspectos interesantes los cuales podrían desarrollarse en versiones futuras de \textbf{VitalSanity}. A continuación, destaco aquellos que he considerado más relevantes.

\begin{itemize}
    \item Uso de \textbf{firma trifásica} para acelerar el \textbf{tiempo de ejecución} del proceso de firma en \textbf{dispositivos móvile}s.
    \item Integrar la aplicación con \textbf{FiRe} para poder realizar operaciones de \textbf{firma} de \textbf{forma remota} en la nube al mismo tiempo que se agrega una \textbf{capa extra de seguridad}.
    \item \textbf{Internacionalizar} la aplicación. Esto implicaría reconsiderar \textbf{los aspectos legales} establecidos. Asimismo, habría que sustituir \textbf{AutoFirma} por una aplicación \textbf{análoga} pero que sea de \textbf{ámbito global}. Por otra parte, habría que implementar en la aplicación mecanismos que permitiesen intercambiar de forma \textbf{segura} información médica entre \textbf{diferentes países}.
    \item Adaptar la aplicación para cumplir con todos los estándares nacionales de intercambio de datos clínicos mencionados en el capítulo de \textbf{requisitos legales} (como \textbf{HL7/FHIR)}.
    \item Agregar sistemas de \textbf{auditorías} y de \textbf{backups automáticos}. Esto le agregaría una capa extra importante de seguridad a la aplicación.
    \item Puesta en producción de la aplicación. En esta etapa se aproveharía también para darle un uso más avanzado a la gestión de \textbf{AWS-KMS} y las claves de cifrado \textbf{CMK}.
    \item Implementar un sistema de gestión de \textbf{incidencias}.
    \item Implementar \textbf{tests automatizados}.
\end{itemize}


\section{Desafíos afrontados}

En este apartado trataremos sobre los \textbf{principales desafíos} que se han tenido que afrontar durante el desarrollo de la aplicación.

\subsection{Integración con AutoFirma}

Sin duda, integrar la aplicación con \textbf{AutoFirma} ha supuesto para mí el mayor desafío a la hora de desarrollar \textbf{VitalSanity}.

El primer problema que afronté fue la poca información que existía en Internet sobre como integrar AutoFirma en una aplicación. Únicamente están presentes el repositorio de GitHub de @firma así como el pdf con el Manual Integrador. No logré encontrar ningún ejemplo mínimo ya hecho que integrase AutoFirma y que me sirviese como base para poder utilizarlo con VitalSanity. 

Aún así he de decir que, pese a la poca información que había en \textbf{Internet}, el \textbf{Manual Integrador} poseía explicaciones muy claras y detalladas y asimismo ofrecía ejemplos de fragmentos de código, los cuales, aunque eran independientes entre sí (no había ningún ejemplo que sirviese por sí mismo para ejecutarlo directamente), estos ejemplos esclarecían bastante bien todos los conceptos detrás de los diferentes mecanismos de firma que se describían dentro del manual.

En resumidas cuentas, mi \textbf{mayor desafío} a la hora de integrar \textbf{AutoFirma} fue el de obtener un \textbf{ejemplo mínimo} que se pudiese ejecutar y que sirviese como base para poder hacer todo lo demás. Es por esta razón que lo primero que desarrollé a nivel de código, antes incluso de haber creado el repositorio de \textbf{GitHub} de la aplicación, fue precisamente el desarrollar este \textbf{ejemplo mínimo base}. 



Este \textbf{ejemplo base} consistía en un simple formulario con tres campos y un botón de firmar.

Cuando se pulsaba el botón de firmar, se creaba un PDF con los tres campos escritos del formulario, se guardaba este PDF en memoria y se abría \textbf{AutoFirma} en el navegador para poder firmar el PDF recién creado. 

Cuando se seleccionaba el certificado y se completaba el proceso de firma, se mostraba un enlace para poder descargar el PDF firmado y asimismo aparecía otro botón que permitía cofirmar el PDF firmado (el cual también se almacenaba en memoria). 

Cuando se pulsaba sobre el botón de \textbf{cofirmar} se repetía el mismo flujo: se abría \textbf{AutoFirma} en el navegador, se pedía seleccionar el certificado con el que se quería confirmar y, una vez completada la cofirma, se mostraba un enlace para poder descargar el PDF cofirmado.


\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/conclusiones/AutoFirma ejemplo base.png}
\caption{Proyecto mínimo base creado para AutoFirma}
\label{AutoFirma ejemplo base:vv}
\end{figure}

Este ejemplo básico me sirvió para conseguir una comprensión sólida sobre el funcionamiento de \textbf{AutoFirma}. Asimismo, me sirvió para simular a nivel básico el flujo completo de la interacción entre el profesional médico (\textbf{firma}) y paciente (\textbf{cofirma}). 

El haber desarrollado desde un primer momento este \textbf{ejemplo básico} me ha permitido implementar las funcionalidades de \textbf{firma} y \textbf{cofirma} en la aplicación real de una forma mucho más rápida y ágil. Además, al no estar este ejemplo acoplado con más código, este ejemplo me permitía consultar de forma instantánea cualquier detalle que se me olvidase acerca de la integración.

\subsection{Integración con Cliente Móvil @firma}

Otro de los desafíos más importantes ha sido el de integrar la versión \textbf{móvil} de \textbf{AutoFirma}. Como se ya se comentó en la sección de \textbf{“Detalles de implementación”}, para conseguir integrar \textbf{Cliente móvil @firma}, había que realizar una serie de cambios \textbf{no triviales}: pasar al modo de \textbf{Servidores Intermedios}, configurar un \textbf{Tomcat Externo} para desplegar los archivos \textbf{WAR} correspondientes a estos servidores intermedios y configurar un \textbf{Nginx} que actuase como \textbf{reverse proxy} para redirigir el tráfico del \textbf{Tomcat} al mismo dominio bajo el que se encuentra la aplicación VitalSanity (para así evitar problemas de \textbf{CORS}). 

Por otra parte, mencionar que la aplicación móvil de \textbf{AutoFirma} me ha dado bastantes problemas en general, ya que había veces en las que de repente dejaba funcionar y me veía en la obligación de tener que realizar soluciones “\textit{mágicas}” para que todo volviese a funcionar. Un ejemplo claro de esto es que cada vez que reiniciaba el ordenador, arrancaba la aplicación y arrancaba el \textbf{Tomcat Externo} y el \textbf{Nginx}, para que la integración con la versión móvil volviese a funcionar, tenía que firmar manualmente un fichero local desde la propia aplicación \textbf{Cliente móvil @firma}.

Esto sucedía porque cada vez que reinicaba el ordenador se vaciaba la carpeta \textbf{temp} del \textbf{Tomcat externo} y, al parecer, la aplicación móvil de AutoFirma trataba de utilizar \textbf{identificadores antiguos} para volver a comunicarse con el \textbf{Tomcat externo}. 

Al no estar ya presentes estos identificadores externos por haberse vacíado la carpeta \textbf{temp}, la comunicación entre la versión \textbf{móvil de AutoFirma} y el \textbf{Tomcat Externo} fallaba. Al firmar manualmente un fichero local directamente desde \textbf{Cliente Móvil @firma}, se reiniciaba el mecanismo interno de solicitud de identificadores, de forma que la próxima vez que la versión móvil se tratase de comunicar con el \textbf{Tomcat externo}, en este caso utilizaba un identificador nuevo en lugar de tratar de usar un identificador antiguo, razón por la cual la comunicación volvía a funcionar.

Para solucionar este problema y evitar tener que firmar un fichero local manualmente cada vez que reiniciase el ordenador, cambié la configuración del \textbf{Tomcat externo} para que el contenido de la carpeta \textbf{temp} se almacenase en un \textbf{directorio persistente} de forma que dicho contenido no se eliminase  tras cada reinicio del ordenador.

Este enfoque de directorio persistente también en funcionaría en producción, puesto que evitaría nuevamente que se \textbf{eliminase} el contenido temporal del \textbf{Tomcat} desplegado.

Pese a que sea una solución sencilla, lo complicado era \textbf{diagnosticar} cuál el problema en primer lugar, para lo que tuve que analizar meticulosamente los \textbf{logs} mostrados por el \textbf{Tomcat externo}, además de agregarle un toque de imaginación.

\subsection{Autenticación con certificado digital}

Después de la integración con \textbf{AutoFirma} y su \textbf{versión móvil}, esta ha sido la siguiente funcionalidad más desafiante a la que me he enfrentado en este proyecto.

Para poder implementarla de forma correcta he tenido que comprender de forma muy precisa el funcionamiento del protocolo \textbf{X.509}, de su integración con \textbf{Spring Security} y del manejo de un \textbf{keystore} y un \textbf{truststore}. En particular, el \textbf{mayor} reto ha sido manejar la \textbf{negociación TLS} entre el segundo \textbf{Tomcat embebido} de la aplicación (el cual corría en el puerto  \textbf{8059}) y la propia aplicación de \textbf{VitalSanity} la cual se ejecuta en el puerto \textbf{8058}.

De primeras logré que la autenticación con certificado digital funcionase solo la primera vez, en el sentido de que al principio podía iniciar sesión con el certificado digital, pero si cerraba sesión y volvía a intentar autenticarme con \textbf{certificado digital} entonces recibía un error \textbf{HTTP 403}. Esto se debía a que, de primeras, una vez que se establecía la \textbf{negociación TLS} entre el \textbf{Tomcat embebido} y la aplicación (es decir, la primera vez que iniciaba sesión con certificado digital), cuando volvía a tratar de volver a autenticarme con \textbf{certificado digital} fallaba ya que esta \textbf{conexión TLS} no se volvía a renegociar, es decir, se mantenía puesto que ya se había establecido la negociación \textbf{TLS} una primera vez. Por culpa de esto, los intentos posteriores de autenticación con \textbf{certificado digital} fallaban puesto que, directamente, no se abría el \textbf{selector de certificados}.

La razón por la cual tras cerrar sesión y volver a tratar de autenticarse con certificado digital fallaba era porque, directamente el método normal de \textbf{cerrar sesión} estaba \textbf{incompleto}. 

De primeras, lo único que estaba haciendo en el método de \textbf{logout} era establecer el \textbf{id} del \textbf{usuario autenticado} a nulo, pero en ningún momento \textbf{anulaba} la sesión del usuario. 

Por culpa de este aspecto, la sesión seguía manteniéndose activa, razón por la cual no se volvía a establecer una nueva \textbf{renegociación TLS}, razón por la cual no se abría \textbf{el selector de certificados}, y por lo tanto al no seleccionarse ningún certificado, la autenticación fallaba, dando como resultado el error \textbf{HTTP 403}. Una vez que agregue que la sesión se invalidase en el método de \textbf{cerrar sesión}, todo ya funcionó a la \textbf{perfección}.

\begin{figure}[H]
\centering
\includegraphics[width=0.885\textwidth, height=1\textheight, keepaspectratio]{img/conclusiones/commit-cert-digital-bug.png}
\caption{Commit que solucionó el bug}
\label{commit-cert-digital-bug:vv}
\end{figure}

Este error, aunque simple a primera vista, me llevó más del \textbf{50\%} del tiempo de implementación de la funcionalidad de \textbf{autenticación con certificado digital}. La dificultad de este bug radicaba en que se encontraba en un \textbf{método independiente} y el cual ya había desarrollado \textbf{con anterioridad} y el cual no se me ocurría que estuviese implementado de forma incompleta.

Todo esto pone de manifiesto la \textbf{vital importancia} que tiene \textbf{el aspecto conceptual en la programación}. Hay ocasiones en las que si no eres capaz de comprender al 100\% lo que estás haciendo, entonces no vas a ser capaz de avanzar y te vas a quedar atrapado en un bucle. 



\subsection{Configuración de Amazon Web Services}

Otro de los desafíos a los que me he enfrentado ha sido con \textbf{Amazon Web Services}.

Este proyecto ha representado la primera vez que he tocado \textbf{AWS}. No obstante, a pesar de que \textbf{AWS} ha sido algo \textbf{nuevo} para mí, debo de mencionar que no ha sido un proceso demasiado complicado, ya que la interfaz de configuración de AW\textbf{}S es muy \textbf{intuitiva}, hay una \textbf{gran cantidad }de información en \textbf{Internet} y las librerías de \textbf{Spring Boot} para \textbf{AWS} son muy \textbf{eficaces} y \textbf{directas}. 

A diferencia de lo ocurrido con \textbf{AutoFirma/Cliente móvil @firma} y con la \textbf{autenticación con certificado digital}, a la hora de utilizar \textbf{AWS} para mi proyecto todo ha sido bastante directo y no me he encontrado con ningún problema que me haya resultado excesivamente complejo.

En este caso, lo que más tiempo me ha llegado a quitar no ha sido a nivel de \textbf{código}, sino a nivel de \textbf{concepto}, en el sentido de pensar como configurar \textbf{AWS} para establecerlo de forma \textbf{congruente} con el nivel de \textbf{seguridad} y de \textbf{legalidad} que busco imponer en \textbf{VitalSanity}. Por este motivo, el \textbf{cuello de botella} referente al \textbf{tiempo} dedicado para \textbf{AWS} se distribuye entre los siguientes razonamientos:

\begin{itemize}
    \item Razonamiento efectuado para valorar la importancia de otorgar los \textbf{mínimos permisos} posibles para los accesos a los objetos del \textbf{bucket} (\textbf{Principio de Mínimos Privilegios}).
    \item Razonamiento efectuado para valorar la necesidad de proteger el \textbf{acceso público} a los objetos del \textbf{bucket} (uso de \textbf{URLs prefirmadas}).
    \item Razonamiento efectuado para valorar la importancia de emplear una clave de \textbf{cifrado personalizada (CMK}) a través del gestor de claves \textbf{AWS-KMS}.
    \item Razonamiento efectuado para valorar la importancia de establecer la \textbf{región} del \textbf{bucket} dentro de \textbf{España} (para cumplir con la \textbf{LOPDGDD} \citep{espana2018lopdgddboe_html} y el \textbf{RGPD} \citep{eu2016rgpd_html}, así como para mejorar la \textbf{latencia}, todo esto justificado con el hecho de que VitalSanity está adscrita al ámbito \textbf{nacional español} y que \textbf{AutoFirma} es una aplicación desarrollada por el \textbf{Gobierno de España}).
\end{itemize}

Vuelvo a hacer énfasis en que lo que más me ha costado aquí ha sido establecer los propios razonamientos, de valorar su importancia y de comprenderlo todo bien a nivel \textbf{conceptual}. Una vez que había comprendido de forma completa el concepto, implementarlo a nivel de código o configurarlo en \textbf{AWS} era un proceso directo el cual apenas me quitaba tiempo.

\subsection{Compatibilidad con otras asignaturas}

Considero que este es uno de los aspectos comunes de todos los estudiantes que más afecta a la hora de la realización del \textbf{TFG}. El hecho de tener que realizar el \textbf{TFG} en paralelo junto con otros proyectos de bastantes asignaturas más establece una dificultad añadida: \textbf{la gestión efectiva del tiempo}. 

Debido a que tienes que sacar todo adelante en conjunto, uno tiene que ser mucho más perspicaz a la hora de medir los recursos dedicados a cada proyecto. Es decir, la dificultad reside en encontrar el perfecto equilibrio para poder sacar todas las asignaturas adelante a la vez que no se descuida ninguna de ellas y al mismo tiempo que no se le dedica un tiempo excesivo extra a algún proyecto en particular. Mencionar que en este aspecto, la aplicación de la metodología \textbf{Kanban} me ha sido de gran utilidad para poder organizarme de un modo mucho más \textbf{eficaz} y \textbf{planificado}.

Debo de mencionar que para mí \textbf{VitalSanity} ha sido uno de los proyectos \textbf{más importantes }que he realizado en mi vida, representando un gran valor a nivel de \textbf{superación personal}. Por esta razón, en mí caso sí que he priorizado mi \textbf{TFG} por encima de otras asignaturas. Aún así, sí que me ha afectado bastante el hecho de tener que seguir trabajando en paralelo en el resto de proyectos con el fin de poder sacarlo adelante todo, viéndome en la obligación de haber tenido que dejar algunos objetivos atrás, lo cual me causa una impotencia inmensa, en especial cuando me tocaba tener que dedicarle tiempo a asignaturas que para mí no eran de interés.

Yo siempre he defendido aquella frase que versa: “\textbf{el que mucho abarca, poco aprieta}”. Sin duda, si el número de asignaturas de cuarto fuese más reducido, entonces los estudiantes tendríamos la oportunidad de llevar los TFG a niveles aún más altos.

Como \textbf{opinión personal}, pienso que el TFG debería de establecerse de forma única en un año académico separado, como si fuese una \textbf{“mini-tesis”}. Con esto se lograría evitar la dispersión excesiva de conocimiento inconexo, y además se le daría la oportunidad al alumnado de mostrar de una forma mucho más infalible y congruente las habilidades que verdaderamente ha interiorizado a lo largo de todo el grado.

\subsection{Maquetación de las vistas de la aplicación}
Este también ha sido un aspecto que me ha supuesto \textbf{un desafío}. En mis proyectos web anteriores yo me dedicaba sobre todo de la parte más puramente relacionada con el \textbf{backend}. Por está razón, el hecho de tener que desarrollar todas las vistas por mí mismo ha sido una tarea que también me ha consumido bastante tiempo. No obstante, ha sido algo que he cogido con muchas ganas desde el principio ya que desde hace un tiempo me apetecía también probar esta cara del desarrollo web. Asimismo, esto me ha servido para afianzar de forma más robusta mis conocimientos sobre HTML y CSS y sobre todo me ha servido para aprender a realizar \textbf{diseños responsive}, algo que prácticamente no había tocado antes.

\subsection{Resto de funcionalidades}

Con respecto al resto de funcionalidades de la aplicación, mencionar que prácticamente ninguna de ellas me ha supuesto una dificultad excesiva. Ya tenía experiencia previa desarrollando aplicaciones web en Spring Boot, lo cual me ha permitido realizar las funcionalidades de carácter genérico de una forma mucho más rápida.


Dentro de las funcionalidades genéricas, también me gustaría destacar el registro de profesionales médicos a partir de un \textbf{fichero CSV}. Pese a que esta funcionalidad es sencilla por sí misma, me hizo darme cuenta de \textbf{un detalle muy importante}: los emails deben de enviarse en \textbf{otro hilo en paralelo}, puesto que la tarea de enviar un email es \textbf{una acción bloqueante} la cual tarda bastante tiempo en terminar de ejecutarse.

Me di cuenta de este aspecto cuando, por ejemplo, trataba de registrar a \textbf{cuatro profesionales médicos}. Enviando los mails con la contraseña de acceso de forma \textbf{secuencial}, esta tarea tardaba unos \textbf{veinticinco segundos} en completarse, aspecto que evidentemente no es admisible, ya que en un caso de uso real se registraría un número mucho más elevado de profesionales médicos. Al haber cambiado para que se enviasen los mails en \textbf{un hilo aparte}, la reducción en el tiempo de ejecución fue más que notable: ahora el registro de \textbf{mil profesionales médicos} me tardaba a penas un segundo en completarse.

Cabe destacar que he aplicado esta técnica de enviar los emails en un hilo aparte en todos los fragmentos de código correspondientes (incluyendo en aquellos que involucran el flujo de AutoFirma/Cliente móvil @firma, reduciéndose así de forma notable el tiempo en el que se obtiene el enlace de descarga del documento firmado/cofirmado).

Esto me sirvió para reafirmar el hecho de que una funcionalidad aparentemente separada del resto puede ser de gran utilidad para optimizar el funcionamiento de otras funcionalidades ya implementadas.


\section{Reflexión final}

Este trabajo ha representado uno de mis \textbf{mayores retos} a \textbf{nivel personal}. A diferencia de una práctica convencional de cualquier otra asignatura, considero que un \textbf{buen TFG} posee un elemento \textbf{característico}, \textbf{único} e \textbf{indistinguible}: \textbf{la incertidumbre}. 

Esforzarse en hacer un \textbf{buen TFG} implica explorar \textbf{nuevos horizontes} y salirse del\textbf{ esquema convencional}. Al ir un paso más allá te encuentras con \textbf{desafíos} los cuales no vas a tener la certeza de si vas a poder superarlos, empezando por el hecho de que ni siquiera sabes si aquellos objetivos que estás buscando cumplir realmente se pueden hacer en primer lugar. 

Esto es precisamente lo que me ha ocurrido a mí con \textbf{AutoFirma} y \textbf{Cliente móvil @firma}. El primer día en el que yo y mi tutor Carlos tuvimos la idea de utilizar \textbf{AutoFirma} para el flujo de la aplicación, en mi mente surgió la pregunta: \textit{"¿es esto realmente posible?"}

En una práctica convencional de cualquier asignatura, tú ya sabes de antemano que el enunciado planteado es algo que puedes hacer simplemente con esfuerzo, que es algo que ya tiene solución. Esto es un hecho que no sucede en un \textbf{verdadero TFG}. En mi caso con \textbf{AutoFirma}, al no existir en Internet ningún ejemplo base hecho, tuve que empezar todo desde cero sin tener la certeza de si todo el esfuerzo que iba a invertir se iba a ver recompensado. Tuve que \textbf{arriesgar} y poner \textbf{ingenio}.

Estuve alrededor de tres semanas para lograr que funcionase el \textbf{proyecto mínimo base} con \textbf{AutoFirma} (proyecto anterior a la creación del repositorio de GitHub de VitalSanity). Durante esas tres semanas, hubo varios momentos en los que me plantee el abandonar la funcionalidad de \textbf{AutoFirma} y sustituirla por otra más sencilla. No obstante, yo era plenamente consciente de que si lo que quería era destacar, entonces tenía que seguir adelante. Gracias a este pensamiento constante de querer sobresalir y de querer hacer un \textbf{TFG} de calidad fue que tras un intenso periodo de dudas logré al fin cumplir el objetivo y conseguir que el proyecto base con \textbf{AutoFirma} funcionase.

Ese momento fue \textbf{determinante}. Me sirvió a mí mismo para demostrarme que mis límites iban \textbf{mucho más allá} de lo que yo pensaba. A partir de este punto me llené de una \textbf{motivación indescriptible} y supe que tenía que seguir agregando funcionalidades que \textbf{rompiesen} con el esquema de lo común.

Es por todo esto que la siguiente funcionalidad que implementé fue la \textbf{autenticación con certificado digital}. Nuevamente se repitió el mismo patrón de no saber si lo que yo tenía en mente era algo factible y si se podía implementar. Y de nuevo, tras aproximadamente semana y media de trabajo, logré sacar a flote también esta funcionalidad.

Este esquema de \textbf{"sobresalir y vencer a la incertidumbre"} ha sido mi arma \textbf{más poderosa} durante toda la realización del proyecto y gracias a la cual he podido completar el resto de las funcionalidades de la aplicación. El no haberme conformado con lo simple y básico me ha permitido poder alcanzar niveles que para mi yo del pasado eran insospechados. 

\textbf{VitalSanity} es un proyecto al cual le he invertido una \textbf{enorme} cantidad de \textbf{esfuerzo} y \textbf{cariño}, y de forma completamente \textbf{honesta} pienso que cualquier persona con la \textbf{suficiente dedicación} podría también desarrollar un \textbf{proyecto} de \textbf{gran calibre}. 

Destacar que tampoco considero que \textbf{VitalSanity} sea una aplicación extremadamente compleja y cuyo nivel sea \textbf{inalcanzable}. Sencillamente, \textbf{VitalSanity} es una aplicación a la que se le ha dedicado \textbf{muchas}, \textbf{muchas horas}.

En síntesis, el mayor aprendizaje que me llevo con este proyecto es la \textbf{autosuperación}, la \textbf{resiliencia} al fallo, la \textbf{constancia} y, sobre todo, \textbf{el vencimiento del miedo a lo desconocido}. 

Como seres humanos estamos \textbf{programados biológicamente} para seguir la vía segura, la vía que menos riesgos presente. Por \textbf{razones evolutivas} esto se ha mantenido de esta manera ya que era lo que maximizaba las probabilidades de supervivencia en nuestro pasado \textbf{prehistórico}. Sin embargo, hace ya bastante tiempo que dejamos atrás el \textbf{mundo de las cavernas} (algo que sabía muy bien \textbf{Platón}).

Es por este principio que, siempre que se quiera \textbf{destacar}, sea en el ámbito que sea, entonces uno debe de estar dispuesto a \textbf{arriesgarse}. Debemos aprender a \textbf{reprogramar nuestra mente} para \textbf{disfrutar de lo desconocido}. 

Para \textbf{triunfar} en la vida, debemos de volvernos \textbf{adictos} a la \textbf{exploración} y a la \textbf{autosuperación}. Para triunfar, debemos de aniquilar por completo el conformismo, y es por todo esto que…

\textit{\textbf{La única forma de romper con el esquema de lo común es abrazar a la incertidumbre, asumir nuevos riesgos, aprender y disfrutar de cada fracaso y, sobre todo, aventurarse en el eterno mundo de lo desconocido.}}


\appendix
\nocite{*}                                % sigue incluyendo todas las entradas del .bib

\makeatletter
\renewcommand\bibsection{%
  \cleardoublepage           % nueva página impar
  \phantomsection            % punto de enlace
  \addcontentsline{toc}{chapter}{Bibliografía}%
  \chapter*{Bibliografía}%   título real
  \@mkboth{Bibliografía}{Bibliografía}% cabeceras
}
\makeatother

\bibliographystyle{apacite}
\bibliography{bibliography}

\chapter{Apéndices y Anexos}           % <-- Apéndice A
% ahora vendrán tus secciones A.1, A.2, etc.,
% p.ej.:
\section{Tablas de requisitos funcionales}\label{apendices:funcionales}

\subsection{Requisitos funcionales comunes}

\textbf{\textit{'RFUG'}} hace referencia a \textbf{\textit{'Requisitos funcionales para un usuario genérico'}}

\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUG1 - Iniciar sesión con email y contraseña.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a los usuarios el autenticarse en la aplicación con email y contraseña\\
\hline
\textbf{Precondiciones} & El usuario debe de tener una cuenta en VitalSanity y debe de conocer sus credenciales de acceso.\\
\hline
\textbf{Datos de entrada} & Correo electrónico del usuario y contraseña de usuario\\
\hline
\textbf{Descripción} & El usuario completa el formulario de inicio de sesión introduciendo su email y contraseña.\\
\hline
\textbf{Pruebas de aceptación} & Verificar que una persona con usuario registrado pueda autenticarse en VitalSanity\\
\hline
\textbf{Postcondiciones} & Se crea una sesión en el servidor\\
\hline
\textbf{Restricciones} & Únicamente pueden iniciar sesión aquellos usuarios con cuenta registrada.\\
\hline
\end{tabular}
\caption{Requisito funcional ’RFUG1’ : 'Iniciar sesión con credenciales de acceso'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre}& RFUG2 - Iniciar sesión con certificado digital.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a los usuarios el autenticarse mediante un certificado digital emitido por una autoridad certificadora \textbf{(CA)} oficial. \\
\hline
\textbf{Precondiciones} & El usuario debe de tener una cuenta registrada en la aplicación. El usuario debe de disponer de un certificado digital emitido por una autoridad certificadora oficial. \\
\hline
\textbf{Datos de entrada} & El certificado seleccionado para la autenticación\\
\hline
\textbf{Descripción} & El usuario pulsa sobre el botón de \textbf{'Acceder con certificado digital'}. El usuario selecciona el certificado con el que quiere autenticarse\\
\hline
\textbf{Pruebas de aceptación} & Verificar que una persona con usuario registrado  y con un certificado dígital válido pueda autenticarse en VitalSanity. \\
\hline
\textbf{Postcondiciones} & Se crea una sesión en el servidor para el usuario autenticado. \\
\hline
\textbf{Restricciones} & Únicamente pueden iniciar sesión aquellos usuarios con cuenta registrada y que dispongan de un certificado digital válido emitido por una autoridad certificadora oficial.\\
\hline
\end{tabular}
\caption{Requisito funcional ’RFUG2’ : 'Iniciar sesión con certificado digital'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre}& RFUG3 - Registrarse como paciente.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier persona que use la aplicación el poder registrarse como paciente. \\
\hline
\textbf{Precondiciones} & No hay. \\
\hline
\textbf{Datos de entrada} & Nombre completo, fecha de nacimiento, género, Nº del documento de identidad, Nº de teléfono, país, email, contraseña.\\
\hline
\textbf{Descripción} & El usuarió pulsa sobre \textbf{\textit{'Registrarse'}} en la \textbf{navbar} para acceder al formulario de registro como paciente. Tras haber completado el formulario, se le envía al usuario un código de confirmación de seis dígitos a su email. A continuación se le pide al usuario que introduzca dicho código. Tras haberlo introducido, si el código es correcto entonces se completa el registro del usuario y se hace un \textbf{login automático}. Tras el \textbf{login automático}, se le pide al usuario que introduzca sus datos completos de residencia de forma opcional (provincia, localidad y dirección).\\
\hline
\textbf{Pruebas de aceptación} & Verificar que tras haber completado el formulario de registro se almacena en la base de datos toda la información del nuevo usuario paciente de forma correcta y que se gestionan sus credenciales de forma segura. \\
\hline
\textbf{Postcondiciones} & Un nuevo usuario paciente registrado en la base de datos. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional ’RFUG3’ : 'Registrarse como paciente'}
\label{tab:requisitos-pacientes}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUG4 - Cerrar sesión.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a los usuarios cerrar sesión una vez se hayan autenticado.\\
\hline
\textbf{Precondiciones} & El usuario debe de tener una cuenta en VitalSanity y debe de conocer sus credenciales de acceso. El usuario debe de haber iniciado sesión. \\
\hline
\textbf{Datos de entrada} & No hay.\\
\hline
\textbf{Descripción} & El usuario ha iniciado sesión previamente. El usuario pulsa sobre \textbf{\textit{'Cerrar sesión'}} en la \textbf{navbar}. \\
\hline
\textbf{Pruebas de aceptación} & Verificar que se invalida y se elimina por completo la sesión del usuario.\\
\hline
\textbf{Postcondiciones} & La sesión del usuario queda invalidada y eliminada.\\
\hline
\textbf{Restricciones} & Únicamente pueden cerrar sesión aquellos usuarios con cuenta registrada y que hayan iniciado sesión en primer lugar.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUG4': 'Cerrar sesión'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre}& RFUG5 - Acceder a la página \textbf{home}.\\
\hline
\textbf{Prioridad} & Media.\\
\hline
\textbf{Justificación} & Se debe de poder permitir a cualquier usuario el poder acceder a la página \textbf{home} de la aplicación. \\
\hline
\textbf{Precondiciones} & No hay \\
\hline
\textbf{Datos de entrada} & No hay\\
\hline
\textbf{Descripción} & El usuarió pulsa sobre \textbf{\textit{'VitalSanity'}} en la \textbf{navbar} para acceder a la página \textbf{home}.\\
\hline
\textbf{Pruebas de aceptación} & Verificar que se muestra la página \textbf{home} de forma correcta para cualquier usuario de la aplicación. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional ’RFUG5’ : 'Acceder a la página home'}
\label{tab:requisitos-pacientes}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUG6 - Cambiar la contraseña de acceso.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a los centros médicos y profesionales recién registrados cambiar la contraseña al iniciar sesión por primera vez. \\
\hline
\textbf{Precondiciones} & El usuario debe de tener una cuenta registrada en el sistema. Debe de ser la primera vez que dicho usuario inicia sesión en la aplicación. \\
\hline
\textbf{Datos de entrada} & Nueva contraseña, confirmar contraseña. \\
\hline
\textbf{Descripción} & El introduce la nueva contraseña tanto en el campo de \textbf{\textit{Contraseña}} como en el campo de \textbf{\textit{Confirmar contraseña}}. Si la contraseña en ambos campos no coincide o si la contraseña introducida tiene menos de 8 caracteres, entonces se muestra un mensaje de error. \\
\hline
\textbf{Pruebas de aceptación} & Verificar que el usuario puede iniciar sesión con la nueva contraseña. \\
\hline
\textbf{Postcondiciones} & Contraseña del usuario cambiada en la base de datos.\\
\hline
\textbf{Restricciones} & La contraseña introducida debe de tener al menos 8 caracteres.\\
\hline
\end{tabular}
\caption{Requisito funcional ’RFUG6’ : 'Cambiar la contraseña de acceso'}
\label{tab:requisitos-pacientes}
\end{table}


\subsection{Requisitos funcionales de los profesionales médicos}

\textbf{\textit{'RFUPFM'}} hace referencia a \textbf{\textit{'Requisitos funcionales para un usuario que sea profesional médico'}}

\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre}& RFUPFM1 - Buscar paciente para solicitar acceso a su historia.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier profesional médico el buscar a un paciente para solicitarle acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Nº del documento de identidad del \textbf{paciente}\\
\hline
\textbf{Descripción} & El profesional médico introduce el Nº del documento de identidad del paciente. Si no se encuentra el paciente con ese Nº de documento de identidad entonces se muestra un mensaje informando de ello. Si se encuentra el paciente entonces se muestran sus datos. Los datos que se muestran del paciente son el \textbf{Nº del documento de identidad}, el \textbf{género} y la \textbf{edad}. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el profesional médico puede ver los datos de un paciente existente en la base de datos. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Los usuarios pacientes no pueden buscar los datos de otros pacientes.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM1': 'Buscar paciente'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM2 - Rellenar formulario de solicitud de acceso al historial de un paciente \textbf{paciente}.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier profesional médico tener la posibilidad de solicitar acceso al historial de los pacientes. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Nº del documento de identidad del \textbf{paciente}, motivo de la solicitud y descripción de la solicitud.\\
\hline
\textbf{Descripción} & El profesional médico introduce el Nº del documento de identidad del paciente. Si no se encuentra el paciente con ese Nº de documento de identidad entonces se muestra un mensaje informando de ello. Si se encuentra el paciente pero dicho paciente ya tiene asignada una solicitud de autorización válida, entonces se muestran los datos del paciente pero no el profesional no puede volver a solicitarle acceso. Si se encuentra el paciente y no tiene ninguna solicitud de autorización válida, entonces el profesional médico sí tiene la opción de solicitarle acceso a su historial. Los datos que se muestran del paciente son el \textbf{Nº del documento de identidad}, el \textbf{género} y la \textbf{edad}. El profesional médico pulsa el botón de \textbf{\textit{'Solicitar acceso'}}. Tras pulsar dicho botón, se le muestra al profesional médico el formulario de la solicitud. En dicho formulario, el profesional debe de introducir el \textbf{motivo} y la \textbf{descripción} de la solicitud de autorización.  \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el profesional médico puede ver los datos de un paciente existente en la base de datos. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Solo los profesionale médicos pueden solicitar acceso al historial médico centralizado de los pacientes.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM2': 'Rellenar formulario de solicitud de acceso al historial de un paciente'}
\label{tab:requisitos-pacientes}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM3 - Firmar y enviar solicitud de acceso al historial de un \textbf{paciente}.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} tener la posibilidad de solicitar acceso al historial de los pacientes. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema, debe tener instalado \textbf{AutoFirma} o su versión para \textbf{móvil} y debe de tener un certificado digital válido \\
\hline
\textbf{Datos de entrada} & Por un lado, la información de la solicitud de autorización: motivo y descripción de la solicitud, la información del \textbf{profesional médico} (nombre, NIF/NIE, y especialidad); información del \textbf{centro médico} en el que trabaja el profesional (NIF, nombre, provincia, municipio, dirección); información del \textbf{paciente} (nombre, NIF/NIE). Por otro, el certificado digital elegido por el profesional.  \\
\hline
\textbf{Descripción} & El profesional médico busca al paciente y le da a \textbf{\textit{Solicitar acceso}}. Allí, introduce el \textbf{motivo} y la \textbf{descripción} Después de pulsar sobre\textbf{\textit{'Aceptar'}}, haber leido las instrucciones de firma, haber marcado la casilla de protección de datos, y haberle dado a firmar, entonces se abre \textbf{AutoFirma}. El profesional elige el certificado y espera a que se complete el proceso de firma. Cuando el proceso se ha completado, se le muestra al profesional un mensaje de confirmación y se le muestra un enlace para descargarse el \textbf{PDF} firmado asociado a la autorización. Asimismo, se le envía al paciente un email informándole de que ha recibido una nueva \textbf{solicitud de autorización} de acceso a su \textbf{historial}    \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la solicitud de autorizacion se registra bien en \textbf{BD} y que el documento se sube bien a \textbf{AWS}. \\
\hline
\textbf{Postcondiciones} & Una nueva solicitud de autorización registrada. \\
\hline
\textbf{Restricciones} & Solo los profesionales médicos pueden solicitar acceso al historial médico centralizado de los pacientes.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM3': 'Firmar y enviar solicitud de acceso al historial del paciente'}
\label{tab:requisitos-profesionales-medicos}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM4 - Ver pacientes que han autorizado el acceso a su historial.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder ver el listado de pacientes que han autorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay  \\
\hline
\textbf{Descripción} & El \textbf{profesional} pulsa sobre \textbf{\textit{'Pacientes que han autorizado'}} en la \textbf{navbar}. Tras esa acción, se le muestra al profesional el listado de pacientes que le han autorizado el acceso al historial médico centralizado. Si no tiene ningún paciente autorizado, entonces se le muestra un mensaje informando de ello. Para cada uno de los pacientes que han autorizado el acceso a su historial se muestran los siguientes datos: \textbf{Nº del documento de identidad}, \textbf{género} y \textbf{edad}. Asimismo, dentro de la \textbf{card} con la información del paciente aparecer un botoón \textbf{\textit{'Acceder al historial'}} \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la lista de pacientes que han autorizado cambia cuando nuevos pacientes autorizan o desautorizan el acceso a su historial \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM4': 'Ver pacientes que han autorizado el acceso a su historial'}
\label{tab:requisitos-profesionales-medicos}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM5 - Ver solicitudes de autorización pendientes.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder ver las solicitudes de autorización pendientes de confirmar. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay  \\
\hline
\textbf{Descripción} & El \textbf{profesional} pulsa sobre \textbf{\textit{'Solicitudes de autorización pendientes'}} en la \textbf{navbar}. Tras esa acción, se le muestra al profesional sus solicitudes de autorización pendientes de confirmar. Si no tiene ninguna solicitud pendiente, entonces se le muestra un mensaje informándole de ello. Para cada una de las solicitudes pendientes se muestran los siguientes datos: \textbf{Nº del documento de identidad del paciente}, \textbf{edad del paciente}, \textbf{motivo de la solicitud}, \textbf{descripción de la solicitud}, \textbf{fecha de creación de la solicitud}.   \\

\hline
\textbf{Pruebas de aceptación} & Verificar que una solicitud de autorización deja de aparecer en pendientes cuando el \textbf{paciente} da su respuesta. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM5': 'Ver solicitudes de autorización pendientes'}
\label{tab:requisitos-profesionales-medicos}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM6 - Ver pacientes que han desautorizado el acceso a su historial.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder ver el listado de pacientes que han desautorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay  \\
\hline
\textbf{Descripción} & El \textbf{profesional} pulsa sobre \textbf{\textit{'Pacientes que han desautorizado'}} en la \textbf{navbar}. Tras esa acción, se le muestra al profesional el listado de pacientes que le han desautorizado el acceso al historial médico centralizado. Si no tiene ningún paciente que haya desautorizado, entonces se le muestra un mensaje informando de ello. Para cada uno de los pacientes que han desautorizado el acceso a su historial se muestran los siguientes datos: \textbf{Nº del documento de identidad}, \textbf{género} y \textbf{edad}. Asimismo, dentro de la \textbf{card} con la información del paciente aparece un botón de \textbf{\textit{Volver a solicitar acceso}} y otro botón de \textbf{\textit{Ver informes propios}}. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la lista de pacientes que han desautorizado cambia cuando nuevos pacientes autorizan o desautorizan el acceso a su historial \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM6': 'Ver pacientes que han desautorizado el acceso a su historial'}
\label{tab:requisitos-profesionales-medicos}
\end{table}





\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM7 - Filtrar listado de pacientes que han autorizado.\\
\hline
\textbf{Prioridad} & Media.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder filtrar el listado de pacientes que han autorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Los siguientes datos asociados paciente: \textbf{nombre, NIF/NIE, Edad mínima, Edad máxima}.  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede al listado de \textbf{pacientes} que han autorizado acceso a su historial. Desde ahí puede aplicar los filtros. El profesional médico puede filtrar el listado de \textbf{pacientes} por \textbf{nombre} (se filtra por el comienzo de la string), por \textbf{NIF/NIE} (case insensitive) y por rango de edades (edad mínima y edad máxima). Todos estos filtros son compatibles entre sí y pueden ser aplicados de forma simultánea. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el filtro se aplica correctamente sobre la lista de pacientes mostrados. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM7': 'Filtrar listado de pacientes que han autorizado el acceso a su historial'}
\label{tab:requisitos-profesionales-medicos}
\end{table}





\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM8 - Filtrar listado de pacientes que han desautorizado el acceso a su historial.\\
\hline
\textbf{Prioridad} & Media.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder filtrar el listado de pacientes que han desautorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Los siguientes datos asociados paciente: \textbf{nombre, NIF/NIE, Edad mínima, Edad máxima}.  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede al listado de \textbf{pacientes} que han desautorizado acceso a su historial. Desde ahí puede aplicar los filtros. El profesional médico puede filtrar el listado de \textbf{pacientes} por \textbf{nombre} (se filtra por el comienzo de la string), por \textbf{NIF/NIE} (case insensitive) y por rango de edades (edad mínima y edad máxima). Todos estos filtros son compatibles entre sí y pueden ser aplicados de forma simultánea. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el filtro se aplica correctamente sobre la lista de pacientes mostrados. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM8': 'Filtrar listado de pacientes que han desautorizado'}
\label{tab:requisitos-profesionales-medicos}
\end{table}




\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM9 - Ver informes del historial médico centralizado de un paciente.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder acceder a los informes de aquellos pacientes que le hayan autorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede al listado de \textbf{pacientes} que han autorizado el acceso a su historial. Desde ahí, elige el paciene en concreto y pulssa el botón \textbf{\textit{'Acceder al historial'}}. Tras esta acción, se le mostrarán al profesional médico todos los informes existentes dentro del historial del paciente. Se le muestra todos los informes de todos los profesionales médicos dentro del historial del paciente, con independencia del centro médico en el que operen dichos profesionales.  \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la lista de informes que aparece se corresponde con los informes agregados para ese paciente en concreto. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Únicamente los profesionales médicos autorizados podrán acceder al historial médico centralizado de un paciente. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM9': 'Ver informes del historial médico centralizado de un paciente'}
\label{tab:requisitos-profesionales-medicos}
\end{table}




\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM10 - Filtrar listado de informes del historial del paciente.\\
\hline
\textbf{Prioridad} & Media.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder filtrar el listado de informes de aquellos pacientes que hayan autorizado su acceso al historial. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Identificador público del informe, Nombre del centro médico, nombre del profesional médico, especialidad, fecha inicio, fecha fin, informes propios (booleano).  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede al listado de \textbf{pacientes} que han autorizado el acceso a su historial. Desde ahí, selecciona los filtros que desea efectuar y presiona el botón de \textbf{\textit{'Aplicar filtros'}}. Tras esta acción, el filtrado se habrá realizado con éxito. En caso de que no haya ninguna coincidencia que satisfaga el filtro aplicado, se mostrará un mensaje informando de ello. Se puede filtrar por Identificador público del informe, por el nombre del centro médico, por el nombre del profesional médico que ha creado el informe (para estos tres primeros se comprueba que coincida el comienzo de la string introducida), por especialidad, por rango de fechas de creación (\textbf{Fecha desde} y \textbf{Fecha hasta}) y por los informes propios (creados por el profesional médico que está visualizando los informes).  Todos estos filtros son compatibles entre sí y pueden
ser aplicados de forma simultánea \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la lista de informes que aparece se corresponde con los filtros aplicados. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Únicamente los profesionales médicos autorizados podrán acceder y filtrar los informes del historial de un paciente. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM10': 'Filtrar listado de informes del historial del paciente'}
\label{tab:requisitos-profesionales-medicos}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM11 - Firmar y registrar un informe en el historial de un \textbf{paciente}.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} tener la posibilidad de registrar y firmar informes dentro del historial de los pacientes. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema, debe tener instalado \textbf{AutoFirma} o su versión para \textbf{móvil} y debe de tener un certificado digital válido \\
\hline
\textbf{Datos de entrada} & Por un lado, la información del informe (título, descripción y observaciones); la información del \textbf{profesional médico} (nombre, NIF/NIE, y especialidad); información del \textbf{centro médico} en el que trabaja el profesional (NIF, nombre, provincia, municipio, dirección); información del \textbf{paciente} (nombre, NIF/NIE). Por otro, el certificado digital elegido por el profesional.  \\
\hline
\textbf{Descripción} & El profesional accede al historial del \textbf{paciente} y pulsa sobre \textbf{\textit{Crear nuevo informe}}. Se muestra el formulario y el profesional introduce el \textbf{título}, la \textbf{descripción} y las \textbf{observaciones} del informe. Despúes de pulsar sobre \textbf{\textit{'Aceptar'}}, haber leido las instrucciones de firma, haber marcado la casilla de protección de datos, y haberle dado a firmar, entonces se abre \textbf{AutoFirma}. El profesional elige el certificado y espera a que se complete el proceso de firma. Cuando el proceso se ha completado, se le muestra al profesional un mensaje de confirmación y se le muestra un enlace para descargarse el \textbf{PDF} firmado asociado al informe. Asimismo, se le envía al paciente un email al paciente informándole de que se le ha agregado un nuevo \textbf{informe} a su historial médico. El PDF firmado se sube a \textbf{AWS}    \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el informe se registra bien en \textbf{BD} y que el documento se sube bien a \textbf{AWS}. \\
\hline
\textbf{Postcondiciones} & Un nuevo informe dentro del historial del paciente. \\
\hline
\textbf{Restricciones} & Solo los profesionales médicos autorizados pueden subir informes dentro del historial del paciente.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM11': 'Firmar y registrar un informe en el historial de un paciente'}
\label{tab:requisitos-profesionales-medicos}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM12 - Editar un informe del historial de un \textbf{paciente}.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} tener la posibilidad de editar informes propios dentro del historial de los pacientes. \\
\hline
\textbf{Precondiciones} & El profesional médico debe de tener una cuenta registrada en el sistema, debe tener instalado \textbf{AutoFirma} o su versión para \textbf{móvil} y debe de tener un certificado digital válido. \\
\hline
\textbf{Datos de entrada} & Por un lado, la información del informe (título, descripción y observaciones); la información del \textbf{profesional médico} (nombre, NIF/NIE, y especialidad); información del \textbf{centro médico} en el que trabaja el profesional (NIF, nombre, provincia, municipio, dirección); información del \textbf{paciente} (nombre, NIF/NIE). Por otro, el certificado digital elegido.  \\
\hline
\textbf{Descripción} & El profesional accede al historial del \textbf{paciente} y pulsa sobre \textbf{\textit{Editar informe}}. Se muestra el formulario y el profesional introduce el \textbf{título}, la \textbf{descripción} y las \textbf{observaciones} del informe a editar. Despúes de pulsar sobre \textbf{\textit{'Aceptar'}}, haber leido las instrucciones de firma, haber marcado la casilla de protección de datos, y haberle dado a firmar, entonces se abre \textbf{AutoFirma}. El profesional elige el certificado y espera a que se complete el proceso de firma. Cuando el proceso se ha completado, se le muestra al profesional un mensaje de confirmación y se le muestra un enlace para descargarse el \textbf{PDF} firmado asociado al informe editado. Asimismo, se le envía al paciente un email al paciente informándole de que se ha editado un informe \textbf{informe} de su historial médico. El PDF firmado se sube a \textbf{AWS}    \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el informe se actualiza bien en \textbf{BD} y que el documento se sube bien a \textbf{AWS}. \\
\hline
\textbf{Postcondiciones} & Un informe editado dentro del historial del paciente. \\
\hline
\textbf{Restricciones} & Solo los profesionales médicos autorizados pueden editar informes \textbf{propios} dentro del historial.\\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM12': 'Editar un informe del historial de un \textbf{paciente}'}
\label{tab:requisitos-profesionales-medicos}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM13 - Ver los detalles de un informe.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder acceder a los detalles de un informe perteneciente a un paciente que haya autorizado el acceso a su historial. \\
\hline
\textbf{Precondiciones} & El \textbf{profesional médico} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede al listado de \textbf{pacientes} que han autorizado el acceso a su historial. Desde ahí, elige el paciente en concreto y pulsa el botón \textbf{\textit{'Ver detalles'}}. Tras esta acción, se le mostrarán al profesional médico toda la información correspondiente a dicho informe: \textbf{Identificador público del informe, título, descripcón, observaciones, fecha de creación, nombre del paciente, edad del paciente, NIF/NIE del paciente, nombre del profesional médico, especialidad médica, NIF/NIE del profesional médico, NIF del centro médico, provincia del centro médico, municipio del centro médico, dirección del centro médico}. Asimismo, se muestran los documentos adjuntados a dicho informe, los cuales pueden descargarse (a partir de \textbf{URL} prefirmadas de \textbf{S3}). Además, si el informe ha sido creado por el \textbf{profesional médico} en cuestión, entonces dicho profesional también podrá adjuntar desde esta vista nuevos documentos al informe.  \\

\hline
\textbf{Pruebas de aceptación} & Verificar que los detalles del informe se corresponden con la información que hay almacenada en la \textbf{BD} asociada a dicho informe. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Únicamente los profesionales médicos autorizados podrán acceder a los detalles de los informes del paciente. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM13': 'Ver los detalles de un informe'}
\label{tab:requisitos-profesionales-medicos}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPFM14 - Adjuntar documentos a un informe.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{profesional médico} el poder adjuntar documentos médicos a los informes que dicho profesional haya creado. \\
\hline
\textbf{Precondiciones} & El \textbf{profesional médico} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{profesional} accede a los detalles del informe al cual quiere adjuntar documentos. El profesional baja hasta abajo y pulsa sobre el botón de \textbf{\textit{'Adjuntar'}}. El profesional médico elige los ficheros que desea adjuntar, los cuales pueden estar en formato \textbf{PDF, JPG, JPEG o PNG}. Cuando el profesional médico ha elegido los documentos, dichos archivos se agregan al informe del paciente. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que los nuevos documentos se agregan correctamente al \textbf{bucket de AWS} y verificar que son accesibles tanto por el paciente como por el resto de profesionales médicos \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & Únicamente los profesionales médicos autorizados podrán adjuntar documentos y únicamente a aquellos \textbf{informes} creados por él mismo. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPFM14': 'Ver los detalles de un informe'}
\label{tab:requisitos-profesionales-medicos}
\end{table}


\subsection{Requisitos funcionales de los pacientes}

\textbf{\textit{'RFUPA'}} hace referencia a \textbf{\textit{'Requisitos funcionales para un usuario que sea paciente'}}

\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA1 - Ver solicitudes de autorización.\\
\hline
\textbf{Prioridad} & Muy Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder visualizar las solicitudes de autorización a su historial médico centralizado. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{paciente} pulsa sobre \textbf{\textit{'Solicitudes de autorización'}} en la \textbf{navbar}. Tras dicha acción, se le muestra al paciente todas sus \textbf{solicitudes de autorización} de acceso a su \textbf{historial médico centralizado}. Dentro de cada solicitud de autorización se muestra los siguientes datos: \textbf{especialidad del profesional médico}, \textbf{NIF/NIE} \textbf{del profesional médico}, \textbf{motivo de la solicitud}, \textbf{descripción de la solicitud}, \textbf{fecha de creación de la solicitud}, \textbf{nombre del centro médico}, \textbf{NIF del centro médico}, \textbf{provincia del centro médico}, \textbf{municipio del centro médico}, \textbf{dirección del centro médico}. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que cualquier paciente puede visualizar de forma satisfactoria el listado de sus solicitudes de autorización. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA1': 'Ver solicitudes de autorización.'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA2 - Aceptar solicitud de autorización y cofirmar la autorización.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier paciente el aceptar y cofirmar cualquier \textbf{solicitud de autorización} a su \textbf{historial médico centralizado}. \\
\hline
\textbf{Precondiciones} & El paciente debe de tener una cuenta registrada en el sistema, debe tener instalado \textbf{AutoFirma} o su versión para \textbf{móvil} y debe de tener un certificado válido. \\
\hline
\textbf{Datos de entrada} & Por un lado, la información de la solicitud de autorización: motivo y descripción de la solicitud, la información del \textbf{profesional médico} (nombre, NIF/NIE, y especialidad); información del \textbf{centro médico} en el que trabaja el profesional (NIF, nombre, provincia, municipio, dirección); información del \textbf{paciente} (nombre, NIF/NIE). Por otra parte, el certificado digital elegido por el paciente.  \\
\hline
\textbf{Descripción} & El paciente accede al listado de solicitudes y pulsa sobre \textbf{\textit{'Aceptar'}} en la solicitud correspondiente. Después de pulsar sobre \textbf{\textit{'Aceptar'}}, de haber leido las instrucciones de firma (en forma de pop up), haber marcado la casilla de protección de datos, y haberle dado a firmar, entonces se abre \textbf{AutoFirma} o su versión para \textbf{móvil}. El paciente elige el certificado y espera a que se complete el proceso de firma. Cuando el proceso se ha completado, se le muestra al paciente un mensaje de confirmación y se le muestra un enlace para descargarse el \textbf{PDF} cofirmado asociado a la autorización. Asimismo, se le envía al profesional médico un email informándole de el paciente ha autorizado su acceso  \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la solicitud de autorizacion \textbf{cofirmada} se registra bien en \textbf{BD} y que el documento se sube bien a \textbf{AWS}. \\
\hline
\textbf{Postcondiciones} & Una nueva solicitud de autorización \textbf{cofirmada} registrada corretamente. Un nuevo profesional médico con acceso autorizado al historial del paciente. \\
\hline
\textbf{Restricciones} & Solo se puede firmar con un certificado emitido por una \textbf{CA} válida. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA2': 'Aceptar solicitud de autorización y cofirmar la autorización'}
\label{tab:requisitos-pacientes}
\end{table}






\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA3 - Denegar solicitud de autorización.\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier paciente el poder denegar cualquier solicitud de autorización de acceso a su historial. \\
\hline
\textbf{Precondiciones} & El paciente debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & La información de la solicitud de autorización: motivo y descripción de la solicitud, la información del \textbf{profesional médico} (nombre, NIF/NIE, y especialidad); información del \textbf{centro médico} en el que trabaja el profesional (NIF, nombre, provincia, municipio, dirección); información del \textbf{paciente} (nombre, NIF/NIE).  \\
\hline
\textbf{Descripción} & El paciente accede al listado de solicitudes y pulsa sobre \textbf{\textit{'Denegar'}} en la solicitud correspondiente. Tras esa acción, se le muestra al paciente un \textbf{pop up} para confirmar la denegación. El paciente pulsa sobre \textbf{confirmar y denegar autorización}. Tras esa acción, la solicitud de acceso queda denegada y el \textbf{profesional médico} no adquiere acesso al historial del paciente. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que el profesional médico se agrega a la lista de \textbf{profesionales desautorizados del paciente}. Verificar que el profesional médico no tiene acceso al historial del paciente. \\
\hline
\textbf{Postcondiciones} & La solicitud de autorización se marca como \textbf{denegada} en la \textbf{base de datos}. El \textbf{profesional médico} se agrega a la lista de \textbf{profesionales desautorizados} del paciente \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA3': 'Denegar solicitud de autorización'}
\label{tab:requisitos-pacientes}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA4 - Ver informes médicos del historial.\\
\hline
\textbf{Prioridad} & Muy Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder visualizar los informes médicos existentes dentro de su hisorial. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{paciente} pulsa sobre \textbf{\textit{'Mis informes'}} en la \textbf{navbar}. Tras dicha acción, se le muestra al paciente todos los informes que posee dentro de su \textbf{historial médico centralidado}. El paciente puede ver los informes tanto de los \textbf{profesionales médicos que ha autorizado} como de los \textbf{profesionales médicos que ha desautorizado} pero que en el pasado agregaron algún informe dentro de su historial.\\
\hline
\textbf{Pruebas de aceptación} & Verificar que cualquier paciente puede visualizar de forma satisfactoria la lista de informes de su historial médico centralizado. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA4': 'Ver informes médicos del historial.'}
\label{tab:requisitos-pacientes}
\end{table}





\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA5 - Filtrar listado de informes del historial del paciente.\\
\hline
\textbf{Prioridad} & Media.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder filtrar el listado de informes existentes dentro de su historial médico centralizado. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & \textbf{Identificador público del informe, Nombre del centro médico, nombre del profesional médico, especialidad, fecha inicio, fecha fin. } \\
\hline
\textbf{Descripción} & El \textbf{paciente} accede al listado de los informes de su historial. Desde ahí, selecciona los filtros que desea efectuar y presiona el botón de \textbf{\textit{'Aplicar filtros'}}. Tras esta acción, el filtrado se habrá realizado con éxito. En caso de que no haya ninguna coincidencia que satisfaga el filtro aplicado, se mostrará el mensaje \textbf{\textit{'No existe ningún informe que cumpla con los criterios establecidos'}}. Se puede filtrar por \textbf{Identificador público del informe, por el nombre del centro médico, por el nombre del profesional médico que ha creado el informe (para estos tres primeros se comprueba que coincida el comienzo de la string introducida), por especialidad, por rango de fechas de creación }(\textbf{Fecha desde} y \textbf{Fecha hasta}).  Todos estos filtros son \textbf{compatibles} entre sí y pueden
ser aplicados de \textbf{forma simultánea}. \\

\hline
\textbf{Pruebas de aceptación} & Verificar que la lista de informes que aparece se corresponde con los filtros aplicados. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA5': 'Filtrar listado de informes del historial del paciente'}
\label{tab:requisitos-pacientes}
\end{table}




\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA6 - Ver detalles de un informe médico.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder visualizar los detalles completos de cualquier informe dentro de su historial. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. El \textbf{paciente} debe de tener algún informe agregado dentro de su historial. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{paciente} accede al listado de los informes de su historial. Tras dicha acción, se le muestra al paciente toda la información asociada a dicho informe: \textbf{Identificador público del informe, título, descripcón, observaciones, fecha de creación, nombre del paciente, edad del paciente, NIF/NIE del paciente, nombre del profesional médico, especialidad médica, NIF/NIE del profesional médico, NIF del centro médico, provincia del centro médico, municipio del centro médico, dirección del centro médico}. Asimismo, se muestran los documentos adjuntados a dicho informe, los cuales pueden descargarse (a partir de URL prefirmadas de \textbf{S3} de \textbf{AWS}). \\
\hline
\textbf{Pruebas de aceptación} & Verificar que los detalles del informe se corresponden con la información que hay almacenada en la BD asociada a dicho informe. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA6': 'Ver informes médicos del historial.'}
\label{tab:requisitos-pacientes}
\end{table}


\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA7 - Ver profesionales médicos autorizados.\\
\hline
\textbf{Prioridad} & Alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder visualizar el listado de profesionales médicos con acceso autorizado a su historial. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{paciente} pulsa sobre \textbf{\textit{'Profesionales autorizados'}} en la navbar. Tras dicha acción, se muestra el listado de los \textbf{profesionales médicos autorizados}. Para cada uno de los profesionales se muestran los siguientes datos: \textbf{Nombre, especialidad, NIF/NIE, nombre del centro médico, NIF del centro médico, provincia del centro médico, municipio del centro médico, dirección del centro médico.} Dentro de esta vista, el \textbf{paciente} también podrá \textbf{desautorizar} a un profesional o \textbf{ver los informes} agregados por dicho profesional. \\
\hline
\textbf{Pruebas de aceptación} & Verificar que se muestra la información correcta de los profesionales médicos \textbf{autorizados}. \\
\hline
\textbf{Postcondiciones} & No hay. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA7': 'Ver profesionales médicos autorizados.'}
\label{tab:requisitos-pacientes}
\end{table}






\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA8 - Desautorizar a un profesional médico\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} el poder desautorizar en cualquier momento a un profesional médico. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & No hay.  \\
\hline
\textbf{Descripción} & El \textbf{paciente} accede al listado de \textbf{profesionales médicos autorizados}. Desde ahí pulsa sobre el botón de \textbf{\textit{'Desautorizar'}} para el profesional en concreto. Tras pulsar dicho botón, se muestra un \textbf{pop up} de confirmación de la acción. El paciente lee el mensaje del \textbf{pop up} y pulsa sobre el botón de \textbf{'Sí, desautorizar'}. Tras esto, el profesional médico queda desautorizado. El profesional médico pierde el acceso a los informes de otros profesionales médicos y ya no puede ni agregar nuevos informes ni editar informes propios. No obstante, el profesional seguirá teniendo acceso a los informes propios que el mismo agregó en el pasado al historial del \textbf{paciente}.\\
\hline
\textbf{Pruebas de aceptación} & Verificar que el profesional médico se agrega a la lista de \textbf{profesionales desautorizados} del paciente. Verificar que el \textbf{profesional médico sigue teniendo acceso} a los informes que el mismo agregó en el pasado dentro del historial del paciente. Verificar que el \textbf{profesional} ha perdido el resto de privilegios sobre el historial del paciente. \\
\hline
\textbf{Postcondiciones} & Un profesional médico agregado a la lista de profesionales desautorizados del paciente. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA8': 'Desautorizar a un profesional médico'}
\label{tab:requisitos-pacientes}
\end{table}



\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUPA9 - Introducir datos de residencia\\
\hline
\textbf{Prioridad} & Baja.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{paciente} introducir sus datos de residencia tras haber iniciado sesión. \\
\hline
\textbf{Precondiciones} & El \textbf{paciente} debe de tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Provincia, municipio, código postal  \\
\hline
\textbf{Descripción} & Cada vez que el paciente inicia sesión, se le pide de forma opcional y si aún no lo ha hecho el completar sus datos de residencia.\\
\hline
\textbf{Pruebas de aceptación} & Verificar que los datos de la residencia del paciente se actualizan correctamente y que no se le vuelven a solicitar la próxima vez que inicie sesión.  \\
\hline
\textbf{Postcondiciones} & Datos de residencia actualizados con éxito. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUPA9': 'Introducir datos de residencia'}
\label{tab:requisitos-pacientes}
\end{table}


\subsection{Requisitos funcionales de los administradores}

\textbf{\textit{'RFUA'}} hace referencia a \textbf{\textit{'Requisitos funcionales para un usuario que sea administrador'}}

\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUA1 - Registrar un centro médico\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{administrador} el registrar a un nuevo \textbf{centro médico} dentro de la aplicación. \\
\hline
\textbf{Precondiciones} & El \textbf{administrador} debe tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & La siguiente información asociada al centro médico: \textbf{Nombre del centro médico, NIF, Nº de telefóno, provincia, municipio, código postal, IBAN, código de cuenta de cotización (ccc), dirección, email. } \\
\hline
\textbf{Descripción} & El \textbf{administrador} inicia sesión y pulsa sobre \textbf{\textit{'Registrar Centro Médico'}} en la navbar. Introduce todos los datos del formulario y pulsa sobre \textbf{\textit{'Registrar'}}. Si falta algún dato obligatorio o si algún dato introducido ha sido incorrecto entonces se muestrta un error por pantalla. Si todos los datos introducidos son correctos, entonces el centro médico queda registrado correctamente. Se le envía al email del \textbf{centro médico} una contraseña de acceso, la cual deberá de cambiar la primera vez que inicie sesión. \\
\hline
\textbf{Pruebas de aceptación} & Verificar que el \textbf{centro médico} puede iniciar sesión con su email y la \textbf{contraseña de acceso} que se le ha enviado a su email. \\
\hline
\textbf{Postcondiciones} & Un nuevo centro médico registrado en la \textbf{base de datos}. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUA1': 'Registrar un centro médico'}
\label{tab:requisitos-administradores}
\end{table}

\subsection{Requisitos funcionales de los centros médicos}

\textbf{\textit{'RFUCM'}} hace referencia a \textbf{\textit{'Requisitos funcionales para un usuario que se corresponda con un centro médico'}}

\begin{table}[H]
\centering
\begin{tabular}{|p{4.35cm}|p{10cm}|}
\hline
\textbf{Identificador - nombre} & RFUCM1 - Registrar profesionales médicos\\
\hline
\textbf{Prioridad} & Muy alta.\\
\hline
\textbf{Justificación} & Se debe permitir a cualquier \textbf{centro médico} registrar a \textbf{sus profesionales médicos}. \\
\hline
\textbf{Precondiciones} & El \textbf{centro médico} debe tener una cuenta registrada en el sistema. \\
\hline
\textbf{Datos de entrada} & Fichero \textbf{CSV} con la información de todos los profesionales médicos que se desean registrar. Para cada profesional médico se incluyen los siguientes datos: \textbf{email, naf, nombre completo, especialidad médica, género, NIF/NIE, Nº de teléfono, IBAN, pais, provincia municipio, código postal} \\
\hline
\textbf{Descripción} & El \textbf{centro médico} inicia sesión y pulsa sobre \textbf{\textit{'Registrar Profesionales médicos'}} en la navbar. Adjunta el fichero \textbf{CSV} y pulsa sobre \textbf{\textit{'Registrar'}}. Si el fichero adjuntado no es un fichero \textbf{CSV} entonces se muestra el mensaje \textbf{\textit{'Debes de adjuntar un fichero CSV'}}. Si el fichero adjuntado es correcto, entonces se procede a registrar todos los profesionales médicos. Aquellos profesionales médicos que ya estuviesen registrados simplemente se ignoran. Tras haberse procesado todo el fichero \textbf{CSV}, se muestra un recuadro en pantalla indicando cuantos profesionales médicos fueron registrados. A todos los profesionales médicos registrados se les envía por email una contraseña de acceso (la cual dberán de cambiar cuando inicien sesión por primera vez).     \\
\hline
\textbf{Pruebas de aceptación} & Verificar que todos los profesionales registrados pueden iniciar sesión correctamente. \\
\hline
\textbf{Postcondiciones} & Nueos profesionales médicos registrados en la \textbf{base de datos}. \\
\hline
\textbf{Restricciones} & No hay. \\
\hline
\end{tabular}
\caption{Requisito funcional 'RFUA1': 'Registrar un centro médico'}
\label{tab:requisitos-administradores}
\end{table}

\section{Indicaciones para ejecutar la aplicación}\label{apendices:ejecucion}

Gracias la configuración establecida con \textbf{Docker Compose}, la aplicación puede ejecutarse desde cualquier ordenador mediante  comando \textbf{\textit{docker compose up}}. El único requisito necesario es tener instalado \textbf{Docker}.

Asimismo, la aplicación también puede ser ejecutada mediante los siguientes comandos:

En primer lugar, ejecutar este comando para levantar la base de datos de `PostgreSQL` en un contenedor de `Docker`

\textbf{\textit{docker run --name postgres-vitalsanity-develop -e POSTGRES\_USER=vital -e POSTGRES\_PASSWORD=vital -e POSTGRES\_DB=vital -p 5058:5432 -d postgres:13}}

A continuación, ejecutar el siguiente comando para arrancar la aplicación cargando el perfil de PostgreSQL:

\textbf{\textit{mvn spring-boot:run -D spring-boot.run.profiles=postgres}}

En este caso, para que la aplicación arranque de forma correcta tras la ejecución de estos dos comandos, es necesario tener instalado lo siguiente:

\begin{itemize}
    \item \textbf{JDK 21}
    \item \textbf{Maven 3.9.9}
    \item \textbf{Docker}

\end{itemize}

Vemos como en efecto es mucho más cómodo ejecutar directamente la aplicación mediante \textbf{\textit{docker compose up}}.


\section{Enlaces asociados a la aplicación}\label{apendices:enlaces}

A continuación se adjuntan los principales enlaces asociados al desarrollo de la aplicación:

\begin{itemize}
    \item \href{https://github.com/cacs2-ua/TFG-VitalSanity-05988721G}{\textbf{\textit{Enlace}}} al repositorio de \textbf{GitHub}.
    \item \href{https://github.com/users/cacs2-ua/projects/2}{\textbf{\textit{Enlace}}} al tablero de \textbf{GitHub}.
    \item \href{https://trello.com/invite/b/67db39b77016e440b8199bb4/ATTI188c00332a089b767d14c33611f3dacdEA36E0D8/vitalsanity-trello}{\textbf{\textit{Enlace}}} al tablero de \textbf{Trello}.
    \item \href{https://www.figma.com/design/C6HbUzbPMusPoAc5d3a4XL/VitalSanity-Mockups?node-id=0-1&t=SCJwMClS5oBIZrmt-1}{\textbf{\textit{Enlace}}} al proyecto de \textbf{Figma} con los \textbf{mockups} de la aplicación.
    \item \href{https://hub.docker.com/repository/docker/criscacs2/vitalsanity-05988721g}{\textbf{\textit{Enlace}}} al repositorio de \textbf{DockerHub}.
\end{itemize}

\section{Ejemplo de autorización de acceso al historial}

\textbf{AUTORIZACIÓN DE ACCESO AL HISTORIAL MÉDICO}\label{apendices:autorizacion}

\textbf{1. Introducción}\\

A continuación, se presenta el texto completo de la autorización de acceso al historial médico centralizado,
incluyendo todos los datos proporcionados, estructurado conforme a los requisitos de información y consentimiento
recogidos en el Reglamento General de Protección de Datos (RGPD) y en la Ley Orgánica 3/2018 de Protección de
Datos Personales y garantía de los derechos digitales (LOPDGDD). Se detallan las partes intervinientes, la finalidad
del tratamiento, la base jurídica, el alcance de los derechos de ambas partes intervinientes, el mecanismo de
revocación, la identificación del responsable del tratamiento, así como las firmas electrónica y cofirma
respectivamente mediante AutoFirma y su versión móvil (la aplicación de Cliente móvil @firma).

\textbf{2. Identificación de las partes}

\textbf{Profesional médico}
\begin{itemize}
    \item \textbf{Nombre:} Cristian Andrés Córdoba Silvestre
    \item \textbf{Nº Del Documento de Identificación:} 05988721G
    \item \textbf{Especialidad:} Psicologia
\end{itemize}

\textbf{Centro médico asociado}
\begin{itemize}
    \item \textbf{NIF:} B99877292
    \item \textbf{Nombre:} Centro Médico Quirón Puertollano
    \item \textbf{Provincia:} Ciudad Real
    \item \textbf{Municipio:} Puertollano
    \item \textbf{Dirección:} Calle Manolo Sanchez Nº 34
\end{itemize}

\textbf{Paciente}
\begin{itemize}
    \item \textbf{Nombre:} Sergio Castillo Blanco
    \item \textbf{Nº Del Documento de Identificación:} 60704841K
\end{itemize}

\textbf{3. Objeto y Finalidad de la autorización}

Mediante el presente documento, por una parte, el profesional médico identificado en el apartado 1 solicita
autorización al historial clínico centralizado del paciente. Por otra parte, el paciente identificado en el apartado 1,
otorga su consentimiento libre, específico, informado e inequívoco al profesional identificado en el apartado 1 y al
centro sanitario al que presta servicios para acceder íntegramente a su historial clínico centralizado en la plataforma
VitalSanity, con la única finalidad de posibilitar la adecuada prestación de atención sanitaria, de conformidad con el
artículo 9.2.a) RGPD que permite el tratamiento de categorías especiales de datos previo consentimiento explícito del
interesado.

El acceso comprenderá todos los informes médicos y la documentación clínica asociada que obren en el repositorio,
incluidos los informes futuros que se incorporen mientras la presente autorización permanezca vigente.

Tras la firma de esta autorización tanto por parte del profesional médico como por parte del paciente, el profesional médico en cuestión tendrá acceso a todo el historial médico centralizado del paciente, lo cual implicará el acceso a
todos los informes y documentos médicos del paciente, incluyendo informes y documentos creados por otros
profesionales médicos.

Tras haberse efectuado la autorización, el paciente podrá en cualquier momento desautorizar al profesional médico,
acción que implicará la pérdida del acceso al historial centralizado por parte del profesional en cuestión. No obstante,
la acción de desautorización no supondrá la denegación al acceso a informes y documentos propios creados con
anterioridad, de modo que el profesional médico seguirá teniendo acceso a estos informes y documentos que el
mismo hubiese agregado al historial del paciente con fecha anterior a la desautorización.

\textbf{4. Responsable y Encargado del tratamiento}
\begin{itemize}
    \item \textbf{Responsable:} Centro Médico “Centro Médico Quirón Puertollano” (NIF B99877292).
    \item \textbf{Encargado:} VitalSanity S.A. (NIF A79667150), Calle Innovación, 123, nº 10, 28001 Madrid, España, correo: vital@sanity.es.
\end{itemize}

\textbf{5. Información específica de la autorización}
\begin{itemize}
    \item \textbf{Motivo de la solicitud:} Evaluar estado emocional tras experiencia traumática
    \item \textbf{Descripción complementaria:} Se solicita acceso a notas y registros de sesiones previas de psicoterapia, así como a los resultados de pruebas proyectivas y escala de estrés postraumático, para planificar intervenciones psicológicas ajustadas al paciente.
\end{itemize}

\textbf{6. Base Jurídica del Tratamiento}
\begin{itemize}
    \item \textbf{Consentimiento informado:} La legitimación para el tratamiento se basa en el consentimiento libre, específico,informado e inequívoco del paciente, tal como exige el artículo 6 de la LOPDGDD y el artículo 6.1.a) del RGPD.
    \item \textbf{Datos de salud (categoría especial):} Se trata de datos relativos a la salud, cuya recogida y tratamiento requieren consentimiento explícito conforme al artículo 9.2.a) del RGPD.
    \item \textbf{Obligación de información:} El responsable ha facilitado a la paciente toda la información prevista en el artículo 13 del RGPD en el momento de la obtención de sus datos.
    \item \textbf{Deber de confidencialidad:} El profesional y el centro están sujetos al deber de confidencialidad establecido en el artículo 5 de la LOPDGDD y en la Ley 41/2002, que protege la confidencialidad de los datos de salud.
\end{itemize}


\textbf{7. Datos objeto de tratamiento}
\begin{itemize}
    \item \textbf{Informes médicos} (con sus descripciones, observaciones, …).
    \item \textbf{Documentación clínica} (informe de urgencias, notas de evolución, prescripciones, …).
    \item \textbf{Cualquier dato de salud recabado} en el historial centralizado.
\end{itemize}

\textbf{8. Principios aplicables}

El tratamiento de los datos se regirá por los principios de licitud, lealtad, transparencia, limitación de la finalidad,
minimización de datos, exactitud, limitación del plazo de conservación, integridad y confidencialidad establecidos en
el artículo 5 del RGPD, así como por las garantías adicionales recogidas en la LOPDGDD.



\textbf{9. Derechos de las partes involucradas}
\begin{itemize}
    \item Acceso a sus datos y a la información relacionada (art. 15 RGPD).
    \item Rectificación de datos inexactos (art. 16 RGPD).
    \item Supresión de datos («derecho al olvido», art. 17 RGPD).
    \item Limitación del tratamiento (art. 18 RGPD).
    \item Portabilidad de los datos (art. 20 RGPD).
    \item Oposición al tratamiento (art. 21 RGPD).
    \item Revocación del consentimiento en cualquier momento, sin afectar la licitud del tratamiento previo (art. 7.3 RGPD).
    \item Derecho a no ser objeto de decisiones automatizadas.
    \item Podrá dirigir sus solicitudes al Responsable del Tratamiento, quien facilitará su ejercicio en un plazo máximo de un
    \item mes, prorrogable por otros dos meses en casos de especial complejidad,
    \item Puede contactar con el Delegado de Protección de Datos en delegadopd@centro-médico-quirón-puertollano.es.
    \item Puede contactar con el encargado en vital@sanity.es.
    \item Puede presentarse presencialmente en el domicilio social de las entidades.
    \item Puede presentar reclamación ante la AEPD.
\end{itemize}

\textbf{10. Revocación y Plazo de Conservación}

El paciente podrá revocar libremente su consentimiento en cualquier momento, sin que ello afecte la licitud del tratamiento realizado con anterioridad a la revocación, conforme al artículo 7.3 del RGPD, que exige que la retirada del consentimiento sea tan sencilla como su otorgamiento.

Los datos se conservarán únicamente durante el tiempo necesario para cumplir las finalidades sanitarias y para atender las obligaciones legales y de custodia establecidas en la normativa sectorial.

\textbf{11. Medidas de seguridad}

El responsable del tratamiento garantiza la aplicación de las medidas técnicas y organizativas apropiadas para proteger los datos personales frente a destrucción, pérdida, alteración, divulgación o acceso no autorizado, conforme al artículo 32 del RGPD y a las directrices establecidas por la Agencia Española de Protección de Datos.

\textbf{12. Firma y Fecha}

\begin{itemize}
    \item \textbf{Profesional médico:} firmado electrónicamente por el profesional médico Cristian Andrés Córdoba Silvestre mediante AutoFirma (o mediante su versión para móvil Cliente móvil @firma), conforme a la definición de firma electrónica avanzada en el art. 26 del Reglamento (UE) 910/2014 (eIDAS).
    \item \textbf{Paciente:} cofirma electrónica mediante Autofirma (o mediante su versión para móvil Cliente móvil @firma), conforme a la definición de firma electrónica avanzada en el art. 26 del Reglamento (UE) 910/2014 (eIDAS).
    \item \textbf{Validez jurídica:} ambas firmas cumplen los requisitos de seguridad y legalidad establecidos en la Ley 59/2003, de firma electrónica, y tienen plena eficacia probatoria.
\end{itemize}

\textbf{Fecha de expedición de la autorización:} 22/04/2025



\end{document}


